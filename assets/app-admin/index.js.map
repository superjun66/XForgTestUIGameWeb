{"version":3,"sources":["../file:/D:/XForgTestUIGame/assets/app-builtin/app-admin/file:/D:/XForgTestUIGame/assets/app-builtin/app-admin/executor.ts"],"names":["init","Object","assign","app","config","const","config_const","data","store","user","store_user","Controller","Home","HomeController","Room","RoomController","controller","home","room","director","on","Director","EVENT_RESET","_RF","pop"],"mappings":";;oZAqCA,SAASA,IAC2BC,OAAOC,OAAOC,EAAIC,OAAQ,CAACC,MAAM,IAAIC,IACrCL,OAAOC,OAAOC,EAAII,KAAM,IACxBN,OAAOC,OAAOC,EAAIK,MAAO,CAACC,KAAK,IAAIC,IAEnCT,OAAOC,OAAOC,EAAIQ,WAAY,CAACC,KAAKC,EAAeC,KAAKC,IACxDd,OAAOC,OAAOC,EAAIa,WAAY,CAACC,KAAK,IAAIJ,EAAiBK,KAAK,IAAIH,+DAElEI,EAASC,GAAGC,EAASC,YAAYtB,GACjCA,MAAMuB,IAAAC","file":"all.js","sourcesContent":["/* eslint-disable */\nimport { Component,director,Director } from 'cc';\nimport { app } from '../../app/app';\nimport { EDITOR,EDITOR_NOT_IN_PREVIEW } from 'cc/env';\n\nexport type IReadOnly<T> = { readonly [P in keyof T]: T[P] extends Function ? T[P] : (T[P] extends Object ? IReadOnly<T[P]> : T[P]); };\n\nexport type IViewName = \"PageGame\"|\"PageHome\"|\"PageMain\"|\"PageOver\"|\"PageRoom\"|\"PopCommondialog\"|\"PopIdentity\"|\"PopTip\"\nexport type IViewNames = IViewName[]\nexport type IMiniViewName = \"PaperGameIndex\"|\"PaperHomeIndex\"|\"PaperRoomRoom\"\nexport type IMiniViewNames = IMiniViewName[]\nexport type IMusicName = \"never\"\nexport type IMusicNames = IMusicName[]\nexport type IEffectName = \"effect/button\"\nexport type IEffectNames = IEffectName[]\n\nimport config_const from '../app-model/config.const'\nimport store_user from '../app-model/store.user'\nimport {HomeController} from '../app-controller/HomeController'\nimport {RoomController} from '../app-controller/RoomController'\nimport {ApiManager} from '../app-manager/api/ApiManager'\nimport {UtilManager} from '../app-manager/util/UtilManager'\nimport EventManager from '../../../extensions/app/assets/manager/event/EventManager'\nimport LoaderManager from '../../../extensions/app/assets/manager/loader/LoaderManager'\nimport SoundManager from '../../../extensions/app/assets/manager/sound/SoundManager'\nimport TimerManager from '../../../extensions/app/assets/manager/timer/TimerManager'\nimport UIManager from '../../../extensions/app/assets/manager/ui/UIManager'\nexport type IApp = {\n    Controller: {Home:typeof HomeController,Room:typeof RoomController},\n    controller: {home:IReadOnly<HomeController>,room:IReadOnly<RoomController>},\n    Manager: {Api:Omit<typeof ApiManager,keyof Component>,Util:Omit<typeof UtilManager,keyof Component>,Event:Omit<typeof EventManager,keyof Component>,Loader:Omit<typeof LoaderManager,keyof Component>,Sound:Omit<typeof SoundManager,keyof Component>,Timer:Omit<typeof TimerManager,keyof Component>,UI:Omit<typeof UIManager,keyof Component>},\n    manager: {api:Omit<ApiManager,keyof Component>,util:Omit<UtilManager,keyof Component>,event:Omit<EventManager,keyof Component>,loader:Omit<LoaderManager,keyof Component>,sound:Omit<SoundManager<IEffectName,IMusicName>,keyof Component>,timer:Omit<TimerManager,keyof Component>,ui:Omit<UIManager<IViewName,IMiniViewName>,keyof Component>},\n    data: {},\n    config: {const:IReadOnly<config_const>}\n    store: {user:IReadOnly<store_user>}\n}\n\nfunction init(){\nif(!EDITOR||!EDITOR_NOT_IN_PREVIEW) Object.assign(app.config, {const:new config_const()})\nif(!EDITOR||!EDITOR_NOT_IN_PREVIEW) Object.assign(app.data, {})\nif(!EDITOR||!EDITOR_NOT_IN_PREVIEW) Object.assign(app.store, {user:new store_user()})\n\nif(!EDITOR||!EDITOR_NOT_IN_PREVIEW) Object.assign(app.Controller, {Home:HomeController,Room:RoomController})\nif(!EDITOR||!EDITOR_NOT_IN_PREVIEW) Object.assign(app.controller, {home:new HomeController(),room:new RoomController()})\n}\nif(!EDITOR||!EDITOR_NOT_IN_PREVIEW) director.on(Director.EVENT_RESET,init)\nif(!EDITOR||!EDITOR_NOT_IN_PREVIEW) init()\n"]}