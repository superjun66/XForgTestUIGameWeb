{"version":3,"sources":["../file:/D:/XForgTestUIGame/assets/app-builtin/app-controller/file:/D:/XForgTestUIGame/assets/app-builtin/app-controller/HomeController.ts","../file:/D:/XForgTestUIGame/assets/app-builtin/app-controller/file:/D:/XForgTestUIGame/assets/app-builtin/app-controller/RoomController.ts"],"names":["HomeController","_BaseController","_inheritsLoose","_this","_len","arguments","length","args","Array","_key","call","apply","concat","test","_proto","prototype","refresh","name","emit","Event","Refresh1","identityCountUpdate","data","IDENTITY_COUNT_UPDATE","BaseController","_RF","pop","RoomController","updateGameIdentity","type","UPDATE_GAME_IDENTITY"],"mappings":";;;;;;;;;;;;;;;;;;;UACaA,cAAc,oDAAAC,eAAA;QAAAC,cAAA,CAAAF,cAAA,EAAAC,eAAA;QAAA,SAAAD;UAAA,IAAAG,KAAA;UAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;YAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;;UAAAN,KAAA,GAAAF,eAAA,CAAAS,IAAA,CAAAC,KAAA,CAAAV,eAAA,SAAAW,MAAA,CAAAL,IAAA;;;;UAMvBJ,KAAA,CAGAU,IAAI,GAAG,CAAC;UAAA,OAAAV,KAAA;;QAAA,IAAAW,MAAA,GAAAd,cAAA,CAAAe,SAAA;;;;;QAERD,MAAA,CAIAE,OAAO,GAAP,SAAAA,QAAQC,IAAY,EAAE;UAClB,IAAI,CAACJ,IAAI,GAAG,CAAC,CAAC;UACd,IAAI,CAACK,IAAI,CAAClB,cAAc,CAACmB,KAAK,CAACC,QAAQ,EAAEH,IAAI,CAAC;SACjD;QAAAH,MAAA,CAEDO,mBAAmB,GAAnB,SAAAA,oBAAoBC,IAAsD,EAAE;UACxE,IAAI,CAACJ,IAAI,CAAClB,cAAc,CAACmB,KAAK,CAACI,qBAAqB,EAACD,IAAI,CAAC;SAC7D;QAAA,OAAAtB,cAAA;MAAA,EAtB+BwB,cAAc,EAK9C;cAkBH,CAAAC,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;UCvBYC,cAAc,oDAAA1B,eAAA;QAAAC,cAAA,CAAAyB,cAAA,EAAA1B,eAAA;QAAA,SAAA0B;UAAA,OAAA1B,eAAA,CAAAU,KAAA,OAAAN,SAAA;;QAAA,IAAAS,MAAA,GAAAa,cAAA,CAAAZ,SAAA;;;;;QAQvBD,MAAA,CAEAc,kBAAkB,GAAlB,SAAAA,mBAAmBC,IAAY,EAAE;UAC7B,IAAI,CAACX,IAAI,CAACS,cAAc,CAACR,KAAK,CAACW,oBAAoB,EAACD,IAAI,CAAC;SAC5D;QAAA,OAAAF,cAAA;MAAA,EAZ+BH,cAAc,EAI9C;cASH,CAAAC,GAAA,CAAAC,GAAA","file":"all.js","sourcesContent":["import BaseController from '../../../extensions/app/assets/base/BaseController';\r\nexport class HomeController extends BaseController<HomeController, {\r\n    // 定义了事件，并同时定义参数列表和返回值\r\n    Refresh1: (a: string) => any\r\n    Refresh2: (a: string) => any // Refresh2是一个完全内部的事件，因为没有写对外暴露的接口\r\n    IDENTITY_COUNT_UPDATE: (data: { type: number, count: number }) => void\r\n}>() {\r\n    /**\r\n     * 对外暴露的变量，外部只能读，内部才可以写\r\n     */\r\n    test = 0;\r\n\r\n    /**\r\n     * 对外暴露的接口，外部调用refresh方法时，会触发Refresh1事件\r\n     * @param name \r\n     */\r\n    refresh(name: string) {\r\n        this.test = 1; // 内部可以写\r\n        this.emit(HomeController.Event.Refresh1, name);\r\n    }\r\n    \r\n    identityCountUpdate(data: { type: number, count: number ,cutCount: number}) {\r\n        this.emit(HomeController.Event.IDENTITY_COUNT_UPDATE,data);\r\n    }\r\n}","import BaseController from '../../../extensions/app/assets/base/BaseController';\r\nexport class RoomController extends BaseController<RoomController, {\r\n    // 定义了事件，并同时定义参数列表和返回值\r\n    UPDATE_GAME_IDENTITY: (type: number) => void\r\n\r\n}>() {\r\n    // Controller中发射事件, UI中监听事件:\r\n    // 1、UI中需要将 「extends BaseView」 改为=> 「extends BaseView.bindController(RoomController)」\r\n    // 2、UI中使用「this.controller.on/once」监听事件, 使用「this.controller.emit」发射事件, 使用「this.controller.off/targetOff」取消监听事件\r\n    // 3、在外部(无法使用this.controller的地方)可以通过「app.controller.xxx」来调用对外导出的方法, 比如下面的refresh方法\r\n\r\n    updateGameIdentity(type: number) {\r\n        this.emit(RoomController.Event.UPDATE_GAME_IDENTITY,type);\r\n    }\r\n}"]}