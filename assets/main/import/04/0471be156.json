[1,["55Epk/iepG/reIDswMLNUc@f9941","a3E7XruTlMRK/8MscTRAzq","55Epk/iepG/reIDswMLNUc@6c48a","b5N24Lnl1MkbCkGUSP05F5"],["node","root","data","_spriteFrame","blurMaterial","shadeFrame","_textureSource","_effectAsset"],["cc.SpriteFrame",["cc.Prefab",["_name"],2],["cc.Node",["_name","_layer","_components","_prefab"],1,9,4],["cc.UITransform",["node","__prefab","_contentSize"],3,1,4,5],["cc.CompPrefabInfo",["fileId"],2],["cc.UIOpacity",["node","__prefab"],3,1,4],["cc.Sprite",["_sizeMode","node","__prefab","_spriteFrame"],2,1,4,6],["d02952bsB1JPJ4xXteObDOr",["_begin","_end","_speed","node","__prefab","blurMaterial","shadeFrame"],0,1,4,6,6],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","node","__prefab"],0,1,4],["cc.BlockInputEvents",["node","__prefab"],3,1,4],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[4,0,2],[1,0,2],[2,0,1,2,3,3],[3,0,1,2,1],[5,0,1,1],[6,0,1,2,3,2],[7,0,1,2,3,4,5,6,4],[8,0,1,2,3,4,4],[9,0,1,1],[10,0,1,2,3,4,5,5],[11,0,1,2,3,4],[12,0,1,2,4]],[[[[1,"UIMgrShade"],[2,"UIMgrShade",33554432,[[3,-2,[0,"7dX6ImdfBJcqlTYmg63cOq"],[5,750,1334]],[4,-3,[0,"79YFX8QOxIqrfZHGmtwiec"]],[5,0,-4,[0,"22F/XyC25NNbnQRqf69Fet"],0],[6,60,180,100,-5,[0,"cfGNW3HSFJZ5C0B0FM1PtW"],1,2],[7,45,750,1334,-6,[0,"229/N15SBGH4HGma+cYqM5"]],[8,-7,[0,"82DtXS4ChDkLThlpVA53IU"]]],[9,"61DZmvnnRICYRzOyDnyCeu",null,null,null,-1,0]]],0,[0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,2,1,7],[0,0,0],[3,4,5],[0,1,0]],[[{"name":"singleColor","rect":{"x":0,"y":0,"width":2,"height":2},"offset":{"x":0,"y":0},"originalSize":{"width":2,"height":2},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-1,-1,0,1,-1,0,-1,1,0,1,1,0],"indexes":[0,1,2,2,1,3],"uv":[0,2,2,2,0,0,2,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-1,"y":-1,"z":0},"maxPos":{"x":1,"y":1,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[6],[2]],[[[10,"blur",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{"blurDegree":1},"textureSize",8,[0,750,1334]]],11]]],0,0,[0],[7],[3]],[[[11,"../manager/ui/effect/blur",[{"hash":3769828242,"name":"../manager/ui/effect/blur|vs:vert|fs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"blurSize","type":14,"count":1},{"name":"blurriness","type":13,"count":1},{"name":"blurLevel","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":44,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"blurSize","type":14,"count":1},{"name":"blurriness","type":13,"count":1},{"name":"blurLevel","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec4 a_position;\nin vec2 a_texCoord;\nout vec2 v_texCoord;\nvec4 vert() {\n  vec4 pos = cc_matViewProj * a_position;\n  v_texCoord = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nin vec2 v_texCoord;\nuniform sampler2D cc_spriteTexture;\nlayout(std140) uniform Constant {\n  vec2 blurSize;\n  float blurriness;\n  float blurLevel;\n};\nvec4 blur (vec2 pos) {\n  float sum = 0.0;\n  vec4 color = vec4(0);\n  if (blurLevel == 1.0) {\n    const float blurRadius = 10.0;\n    const float blurStep = 1.0;\n    for (float rx = -blurRadius; rx <= blurRadius; rx += blurStep) {\n      for (float ry = -blurRadius; ry <= blurRadius; ry += blurStep) {\n        vec2 target = pos + vec2(rx / blurSize[0], ry / blurSize[1]);\n        float weight = (blurRadius - abs(rx)) * (blurRadius - abs(ry));\n        target.x = clamp(target.x, 0.0, 1.0);\n        target.y = clamp(target.y, 0.0, 1.0);\n        color += texture(cc_spriteTexture, target) * weight;\n        sum += weight;\n      }\n    }\n  } else if(blurLevel == 2.0) {\n    const float blurRadius = 20.0;\n    const float blurStep = 2.0;\n    for (float rx = -blurRadius; rx <= blurRadius; rx += blurStep) {\n      for (float ry = -blurRadius; ry <= blurRadius; ry += blurStep) {\n        vec2 target = pos + vec2(rx / blurSize[0], ry / blurSize[1]);\n        float weight = (blurRadius - abs(rx)) * (blurRadius - abs(ry));\n        target.x = clamp(target.x, 0.0, 1.0);\n        target.y = clamp(target.y, 0.0, 1.0);\n        color += texture(cc_spriteTexture, target) * weight;\n        sum += weight;\n      }\n    }\n  } else {\n    const float blurRadius = 30.0;\n    const float blurStep = 3.0;\n    for (float rx = -blurRadius; rx <= blurRadius; rx += blurStep) {\n      for (float ry = -blurRadius; ry <= blurRadius; ry += blurStep) {\n        vec2 target = pos + vec2(rx / blurSize[0], ry / blurSize[1]);\n        float weight = (blurRadius - abs(rx)) * (blurRadius - abs(ry));\n        target.x = clamp(target.x, 0.0, 1.0);\n        target.y = clamp(target.y, 0.0, 1.0);\n        color += texture(cc_spriteTexture, target) * weight;\n        sum += weight;\n      }\n    }\n  }\n  color /= sum;\n  return color;\n}\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  o *= texture(cc_spriteTexture, v_texCoord);\n  vec4 color = blur(v_texCoord);\n  color.a = o.a;\n  o = o + (color-o) * blurriness;\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_texCoord;\nvec4 vert() {\n  vec4 pos = cc_matViewProj * a_position;\n  v_texCoord = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvarying vec2 v_texCoord;\nuniform sampler2D cc_spriteTexture;\n   uniform vec2 blurSize;\n   uniform float blurriness;\n   uniform float blurLevel;\nvec4 blur (vec2 pos) {\n  float sum = 0.0;\n  vec4 color = vec4(0);\n  if (blurLevel == 1.0) {\n    const float blurRadius = 10.0;\n    const float blurStep = 1.0;\n    for (float rx = -blurRadius; rx <= blurRadius; rx += blurStep) {\n      for (float ry = -blurRadius; ry <= blurRadius; ry += blurStep) {\n        vec2 target = pos + vec2(rx / blurSize[0], ry / blurSize[1]);\n        float weight = (blurRadius - abs(rx)) * (blurRadius - abs(ry));\n        target.x = clamp(target.x, 0.0, 1.0);\n        target.y = clamp(target.y, 0.0, 1.0);\n        color += texture2D(cc_spriteTexture, target) * weight;\n        sum += weight;\n      }\n    }\n  } else if(blurLevel == 2.0) {\n    const float blurRadius = 20.0;\n    const float blurStep = 2.0;\n    for (float rx = -blurRadius; rx <= blurRadius; rx += blurStep) {\n      for (float ry = -blurRadius; ry <= blurRadius; ry += blurStep) {\n        vec2 target = pos + vec2(rx / blurSize[0], ry / blurSize[1]);\n        float weight = (blurRadius - abs(rx)) * (blurRadius - abs(ry));\n        target.x = clamp(target.x, 0.0, 1.0);\n        target.y = clamp(target.y, 0.0, 1.0);\n        color += texture2D(cc_spriteTexture, target) * weight;\n        sum += weight;\n      }\n    }\n  } else {\n    const float blurRadius = 30.0;\n    const float blurStep = 3.0;\n    for (float rx = -blurRadius; rx <= blurRadius; rx += blurStep) {\n      for (float ry = -blurRadius; ry <= blurRadius; ry += blurStep) {\n        vec2 target = pos + vec2(rx / blurSize[0], ry / blurSize[1]);\n        float weight = (blurRadius - abs(rx)) * (blurRadius - abs(ry));\n        target.x = clamp(target.x, 0.0, 1.0);\n        target.y = clamp(target.y, 0.0, 1.0);\n        color += texture2D(cc_spriteTexture, target) * weight;\n        sum += weight;\n      }\n    }\n  }\n  color /= sum;\n  return color;\n}\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  o *= texture2D(cc_spriteTexture, v_texCoord);\n  vec4 color = blur(v_texCoord);\n  color.a = o.a;\n  o = o + (color-o) * blurriness;\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":3}},"defines":[]}],[{"name":"opaque","passes":[{"program":"../manager/ui/effect/blur|vs:vert|fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendSrcAlpha":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"blurSize":{"type":14,"value":[750,1334]},"blurriness":{"type":13,"value":[1]},"blurLevel":{"type":13,"value":[1]}}}]}]]],0,0,[],[],[]]]]
