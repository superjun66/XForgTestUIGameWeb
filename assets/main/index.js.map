{"version":3,"sources":["../file:/D:/XForgTestUIGameUp/assets/app/file:/D:/XForgTestUIGameUp/assets/app/app.ts","../file:/D:/XForgTestUIGameUp/assets/app-appinit/view/file:/D:/XForgTestUIGameUp/assets/app-appinit/view/AppInit.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/Audio.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/AudioEngine.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/AudioManager.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/base/file:/D:/XForgTestUIGameUp/extensions/app/assets/base/BaseAppInit.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/base/file:/D:/XForgTestUIGameUp/extensions/app/assets/base/BaseControl.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/base/file:/D:/XForgTestUIGameUp/extensions/app/assets/base/BaseController.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/data/file:/D:/XForgTestUIGameUp/assets/res-native/data/BaseData.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/base/file:/D:/XForgTestUIGameUp/extensions/app/assets/base/BaseManager.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/base/file:/D:/XForgTestUIGameUp/extensions/app/assets/base/BaseModel.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/base/file:/D:/XForgTestUIGameUp/extensions/app/assets/base/BaseView.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/file:/D:/XForgTestUIGameUp/extensions/app/assets/Core.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/debug/file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/debug/debug.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/event/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/event/EventManager.ts","../file:/D:/XForgTestUIGameUp/assets/app/file:/D:/XForgTestUIGameUp/assets/app/handle.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/JmClickComponent.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/JmHorizontalListView.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/JmListView.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/JmListViewItem.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/JmNodePoolMgr.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/JmRefreshFooter.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/JmRefreshHeader.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/data/file:/D:/XForgTestUIGameUp/assets/res-native/data/JmRoomData.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/manager/file:/D:/XForgTestUIGameUp/assets/res-native/manager/JmRoomDataMgr.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/loader/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/loader/LoaderManager.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/logger/file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/logger/logger.ts","../file:/D:/XForgTestUIGameUp/assets/res-native/tool/file:/D:/XForgTestUIGameUp/assets/res-native/tool/RefreshOrLoadState.ts","../file:/D:/XForgTestUIGameUp/assets/app/file:/D:/XForgTestUIGameUp/assets/app/setting.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/sound/SoundManager.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/storage/file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/storage/storage.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/task/file:/D:/XForgTestUIGameUp/extensions/app/assets/lib/task/task.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/timer/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/timer/TimerManager.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/UIManager.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/UIMgrLoading.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/UIMgrShade.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/UIMgrToast.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/UIMgrToastCell.ts","../file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGameUp/extensions/app/assets/manager/ui/comp/UIMgrZOrder.ts"],"names":["App","_Core","call","_inheritsLoose","_createClass","key","get","this","_inst","Core","app","inst","cccInited","game","once","Game","EVENT_ENGINE_INITED","appInited","EventType","EVENT_APPINIT_FINISHED","_RF","pop","ccclass","_decorator","property","_dec","_dec2","Sprite","_descriptor","_applyDecoratedDescriptor","_class2","_BaseAppInit","AppInit","_this","_len","arguments","length","args","Array","_key","apply","concat","_initializerDefineProperty","_assertThisInitialized","_proto","prototype","onLoad","onFinish","BaseAppInit","configurable","enumerable","writable","initializer","_class","Audio","volume","volumeScale","mute","endedCallback","startedCallback","_playing","_paused","audioSource","node","Node","addComponent","AudioSource","on","ENDED","onAudioEnded","STARTED","onAudioStarted","play","clip","onEnded","onStarted","playing","paused","stop","emit","pause","resume","setVolume","scale","getVolume","setVolumeScale","getVolumeScale","setLoop","loop","getLoop","setMute","getMute","clear","destroy","set","value","AudioEngine","audioID","endedCallbackMap","Map","effectMap","music","musicMute","musicVolumeScale","effectMute","effectVolumeScale","playEffect","audioClip","audio","AudioManager","getAudio","putAudio","callback","stopEffect","id","_this$effectMap$get","stopAllEffects","forEach","pauseEffect","_this$effectMap$get2","pauseAllEffects","resumeEffect","_this$effectMap$get3","resumeAllEffects","setEffectMute","_this$effectMap$get4","getEffectMute","_this$effectMap$get5","setEffectVolume","_this$effectMap$get6","getEffectVolume","_this$effectMap$get7","setAllEffectsVolume","setEffectVolumeScale","_this$effectMap$get8","getEffectVolumeScale","_this$effectMap$get9","setGlobalEffectsVolumeScale","getGlobalEffectsVolumeScale","setGlobalEffectsMute","getGlobalEffectsMute","playMusic","stopMusic","pauseMusic","resumeMusic","setMusicVolume","getMusicVolume","setMusicVolumeScale","_this$music","getMusicVolumeScale","setMusicMute","_this$music2","getMusicMute","setEndedCallback","_this$music3","has","pauseAll","resumeAll","stopAll","audioArray","push","AdminBundleName","ModelBundleName","ControlBundleName","ControllerBundleName","ManagerBundleName","_Component","_base_mgr_completed","_base_user_completed","_base_inited","_base_finished","startInit","_this2","projectBundles","settings","querySettings","Settings","Category","ASSETS","lib","task","createAny","add","next","retry","indexOf","assetManager","preloadAny","url","ext","err","loadBundle","start","onProgress","_base_total","BaseManager","init","getBundle","innerNextInit","onUserInit","_base_completed","innerFinished","_this3","Manager","Sound","setting","defaultEffectName","playDefaultEffect","e","target","manager","ui","onceUserInterface","TOUCH_END","event","getComponent","Button","setTimeout","isValid","sound","eventPhase","EventTouch","CAPTURING_PHASE","onEnable","TOUCH_START","onDisable","off","showDefault","defaultMusicName","onTouch","_this4","isMusicPlaying","isMusicPaused","replayMusic","offUserInterface","onUserInterface","playDefaultMusic","nextInit","getUserAssetNum","completed","total","Math","max","getTotalAssetNum","_base_mgr_total","_base_user_total","min","Component","Event","_class5","_SuperBaseControl","BaseControl","_base_inst","SuperBaseControl","CallbackInfo","CallbackList","callbacks","size","index","info","splice","remove","removeByCallback","removeByTarget","EventEmitter","listeners","_proto2","cb","toString","targetOff","Object","hasOwnProperty","t","_proto3","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_SuperBaseController","BaseController","SuperBaseController","Proxy","_key6","Logger","create","name","console","log","uuid","UUID","Date","now","loadError","_base_event","EventTarget","_base_manager_name","js","getClassName","slice","managerName","constructor","toLocaleLowerCase","resetInEditor","widget","Widget","isAlignBottom","isAlignLeft","isAlignRight","isAlignTop","top","left","right","bottom","alignMode","AlignMode","ON_WINDOW_RESIZE","onInited","onFinished","finish","createUUID","_this$_base_event","data","bundle","count","sysMgrCount","getDirWithPath","Prefab","item","path","endsWith","getUserAssetUrls","pathArr","progress","complete","urls","totalAsset","completeAsset","userMgrList","sysMgrList","timer","loader","initSysMgrTask","createASync","loadUserMgrTask","UserManagerRoot","root","getChildByPath","load","prefab","basename","instantiate","parent","active","EVENT_SYS_MANAGER_INITED","initUserMgrTask","EVENT_USER_MANAGER_INITED","EVENT_MANAGER_INITED","EVENT_MANAGER_FINISHED","window","bind","toLocaleString","warn","error","disallowMultiple","BlockEvents","TOUCH_MOVE","TOUCH_CANCEL","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","MOUSE_ENTER","MOUSE_LEAVE","MOUSE_WHEEL","HideEvent","Enum","ViewType","ViewState","Group","displayOrder","Infinity","style","PaperAllToOwner","_dec3","group","type","tooltip","_dec4","_dec5","visible","is3D","_dec6","isPage","_dec7","_class3","BaseView","_base_view_created","_base_view_state","Hid","_base_view_name","_base_touch_enable","_base_show_hide_delays","_base_mini_show","Set","_descriptor2","_descriptor3","_descriptor4","_descriptor5","miniViews","BindControl","Control","_BaseView","BindController","Controller","_class4","_dec8","_BaseView2","isViewValid","Page","isPaper","Paper","isPaperAll","PaperAll","isPop","Pop","isTop","Top","is2D","Scene","viewName","director","getScene","isMiniViewShow","setTouchEnabled","enabled","blockPropagation","blockInput","propagationStopped","stopPropagation","propagationImmediateStopped","onBaseViewCreate","uiTransform","UITransform","hitTest","i","hideAllMiniViews","hide","hideMiniViews","_ref","views","sortUserInterface","showMiniViews","_ref2","onShow","onHide","typeName","createSync","_loop","names","createMixMiniViewsTask","_this5","filter","baseName","aSync","result","scheduleOnce","_this5$_base_mini_sho","show","silent","attr","zIndex","_this5$_base_mini_sho2","owner","onError","code","_this5$_base_mini_sho3","UI","ErrorCode","LoadError","setNodeAttr","setPosition","position","x","y","siblingIndex","setSiblingIndex","beforeShow","_this6","Showed","changeState","BeforeShow","isNextCalled","Showing","refreshShade","shift","BeforeHide","beforeHide","Hiding","hideEvent","release","focus","boo","onFocus","onLostFocus","loadRes","preloadRes","loadResDir","preloadResDir","setFont","onComplete","Font","font","setSpine","sp","SkeletonData","skeletonData","setSprite","SpriteFrame","spriteFrame","onShade","_hideEvent","_singleton","_captureFocus","_Core$inst","_shade","_Core$inst2","_blockInput","singleton","captureFocus","shade","getOwnPropertyDescriptor","Lib","storage","debug","logger","Config","Data","Store","controller","eventTarget","EventMap","Director","EVENT_RESET","config","store","getClassById","setClassAlias","obj","prop","getter","object","_i","_Object$keys","keys","defineProperty","setter","define","_BaseManager","EventManager","events","rootName","JmClickComponent","performClick","startPos","OnClickTouchEnd","onDestroy","getType","getLocation","pos","subtract","onItemClick","menu","requireComponent","ScrollView","JmHorizontalListView","_descriptor6","_descriptor7","footerController","onPullLeftToLoad","hasMore","scrollView","footer","footerWidth","_touchStartX","_touchStartFromLeft","footerHolderWidth","isUserTouched","loadingState","RefreshOrLoadState","NONE","componentName","showingViews","recycledViews","itemViewDirty","itemViewWidths","_data","_dirty","_sizeDirty","_checkRight","content","anchorX","anchorY","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","getLocationX","floor","getScrollOffset","getData","setData","setComponentName","updateSize","vertical","horizontal","width","getNormalContentWidth","getContentWidth","pullLeftToLoadEnabled","getItemPosOffset","getItemCount","leftOffset","rightOffset","sum","getItemWidthWithSpacing","undefined","itemWidth","spacing","getListLeftRightVisiblePos","scrollX","isVisible","_this$getListLeftRigh","leftVisibleX","rightVisibleX","itemLeftX","itemRightX","update","dt","child","getItemView","component","updateItem","getItemWidth","addChild","recycleChild","checkFooterView","isRight","scrollToOffset","Vec2","getMaxScrollOffset","footerView","JmRefreshFooter","setState","viewBottomY","contentBottomY","footerOffset","removeFromParent","itemView","itemPrefab","onScrollEvent","sender","SCROLLING","startPullLeftLoad","markChildrenDirty","notifyChange","checkRight","notifyItemChange","updateHeight","height","setPullLeftToLoadListener","listener","REFRESHING","offset","maxOffset","ceil","updateLoadingState","onLoadComplete","COMPLETE","state","onLoadingStateChange","newState","JmListView","_descriptor8","_descriptor9","_descriptor10","headerController","onPullDownToRefresh","_descriptor11","_descriptor12","_descriptor13","onPullUpToLoad","header","headerHeight","footerHeight","_touchStartY","_touchStartFromTop","refreshState","footerHolderHeight","itemViewHeights","_checkBottom","extraData","elastic","bounceDuration","pullDownToRefreshEnabled","cancelInnerEvents","getLocationY","offsetY","checkPullDownRefresh","onScrollOffset","startPullDownRefresh","newHeight","getNormalContentHeight","getContentHeight","pullUpToLoadEnabled","refreshFooterShow","setTopMargin","num","topMargin","bottomMargin","getItemHeightWithSpacing","itemHeight","getListTopBottomVisiblePos","scrollY","halfHeight","bottomVisibleY","_this$getListTopBotto","topVisibleY","itemTopY","itemBottomY","checkHeaderView","isBottom","headerView","JmRefreshHeader","checkPullUpLoad","checkBottom","emptyView","sys","getNetworkType","NetworkType","noNetworkImg","emptyPic","emptyImg","setPullUpToLoadListener","setPullDownToRefreshListener","updateRefreshState","READY_TO_REFRESH","pullDownRefresh","stopAutoScroll","onRefreshComplete","scrollToTop","EMPTY","stopPullDownRefresh","COMPLETING","onRefreshStateChange","setExtraData","getExtraData","handleSuccess","isLoadMore","listView","newData","isArray","handleFailure","loadMore","Orientation","JmListViewItem","itemId","onTouchEvent","dstx","abs","dsty","getItemHeight","JmNodePool","_NodePool","_cellPfb","NodePool","JmNodePoolMgr","InitNodePool","poolKey","cellPfb","poolHandlerComp","DestroyPool","pool","_nodePoolData","GetCell","GetPool","PutCell","put","IdentityCellPool","Label","loading","string","Skeleton","_state","refreshSpine","_BaseData","JmRoomData","_roomData","initRoomData","roomData","updateRoomData","updateRoomProperty","k","v","getIdentities","getIdentity","getRoomNum","getSeats","BaseData","JmRoomDataMgr","OnReceiveServerData","serverData","InitRoomsData","len","InitRoomData","roomKey","GetRoom","CreateRoom","InitCurrentRoom","CleanRooms","_offset","_roomsData","_roomCfg","_roomsKeys","_gameState","CleanRoom","room","GetOffSet","GetRoomByRoomKey","GetRoomNum","_currentRoomKey","GetRoomIdentities","GetRoomIdentity","GetRoomSeats","InitCurrentRoomProto","_roomCount","_currentRoomData","_joinRoomsList","unshift","JSON","stringify","_isOwner","GetCurrentRoomInfo","GetCurrentRoomKey","SetCurrentNullRoomKey","SetRoomDayOrNight","currentType","GetRoomDayOrNight","delRoomCfg","setRoomCfg","vule","getRoomCfg","getRoomCount","setRoomCount","setGameState","getGameState","setGameDay","bol","_isDay","getGameDay","setOwner","isOwner","getLoadKey","_loadKey","setLoadKey","REGEX","Command","command","cache","Loader","assetMap","loadingMap","preload","params","preloadDir","version","asset","_extends","addRef","decRef","loadAsync","Promise","resolve","loadDir","results","assets","loadDirAsync","loadRemote","loadRemoteAsync","onFail","onSuccess","imageAsset","createWithImage","releaseAll","assetList","LoaderManager","handle","_this7","res","Texture2D","TextureCube","SceneAsset","_this8","_this9","_ref3","_assetManager$getBund","_bundle","Asset","ctor","releaseUnused","_assetManager$getBund2","releaseUnusedAssets","_ref4","loadBundleAsync","_this11","removeBundle","b","reloadBundle","_ref5","_assetManager$cacheMa","_this12","baseUrl","configUrl","test","downloader","remoteServerAddress","cacheManager","removeCache","ab","AssetManager","Bundle","json","base","reloadBundleAsync","_this13","_ref6","_this14","_this15","empty","level","styleColor","title","titleColor","UIManager","defaultUI","autoFit","delay","begin","end","speed","blur","SoundManager","localStorage","setItem","getItem","parse","MusicName","EffectName","BundleName","musicMuteCacheKey","effectMuteCacheKey","musicVolumeScaleCacheKey","effectVolumeScaleCacheKey","defaultMusicVolume","defaultEffectVolume","audioCache","effectInterval","playingMusic","_setting$preload","AudioClip","EVENT_HIDE","EVENT_SHOW","bundleName","Function","_ref7","soundName","onPlay","setButtonEffect","opts","_ref8","_ref8$volume","_ref8$interval","interval","CLICK","_ref9","_ref9$volume","_ref9$loop","_ref9$interval","isEffectMute","playEffectAsync","_playEffectAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","abrupt","_x","_ref10","_ref10$volume","_ref10$force","force","isMusicMute","playMusicAsync","_this$playingMusic$na","split","isCache","_this$playingMusic$na2","chars","getWeekUpdateTime","curDate","a","c","date1","date2","d","date","getFullYear","getMonth","getDate","round","valueOf","getDay","getDayUpdateTime","toLocaleDateString","Storage","_cache","secretKey","text","encrypted","charCode","charCodeAt","String","fromCharCode","encode","encryptedText","decrypted","decode","removeItem","setWeek","updateTime","getWeek","setDay","Sync","running","list","isRunning","isStop","timeout","ASync","Any","handles","async","execute","fun","retryMax","retryFinish","DailyTimer","time","startMs","endMs","checkDay","_time$split","startSegment","_time$split$","endSegment","_startSegment$split$m","map","part","parseInt","_startSegment$split$m2","startH","_startSegment$split$m3","startM","_startSegment$split$m4","startS","parseTimeToMs","_endSegment$split$map","_endSegment$split$map2","endH","_endSegment$split$map3","endM","_endSegment$split$map4","endS","getDayTimeMs","getHours","getMinutes","getSeconds","getMilliseconds","h","m","s","isInRange","currentMs","dateDay","IntervalTimer","elapsed","Timer","intervalTimer","dailyTimers","register","unregister","unregisterAll","registerDailyTrigger","unregisterDailyTrigger","unregisterAllDailyTrigger","TimerManager","timers","_proto4","UIScene","ViewTypes","ViewName","MiniViewName","stringCaseNegate","str","replace","searchStr","startIndex","UserInterface","toast","defaultData","currScene","currPage","currFocus","prefabCache","sceneCache","touchEnabled","touchMaskMap","showLoadingMap","uiLoadingMap","uiShowingMap","showQueue","getChildByName","getComponentsInChildren","Camera","camera","priority","far","near","addPersistRootNode","createTypeRoot","shadePre","loadingPre","toastPre","designResolution","SCREEN","windowSize","screen","resolutionPolicy","policy","autoFitResolutionPolicy","ResolutionPolicy","FIXED_HEIGHT","view","setResolutionPolicy","FIXED_WIDTH","schedule","equals","d2","layer","Layers","UI_2D","UIMgrZOrder","addTouchMaskListener","removeTouchMaskListener","getBaseView","components","find","getViewInParents","com","getViewInChildren","children","getUIClass","getClassByName","getUIPath","getUIPrefix","getUIParent","prefix","viewType","getUIInScene","multiple","getUIInShowing","_name","getNativeBundleName","uiName","oldBundleName","getResBundleName","initBundle","installUI","uiBundles","isScene","getSceneInfo","uninstallUI","resBundle","naBundle","nameOrCom","isShow","nodes","every","exclude","checkUIValid","View","valid","uiRoots","uiRoot","isCaptureFocus","isNeedShade","shadeSetting","assign","UIMgrShade","z","shadeIndex","getSiblingIndex","nodeIndex","parsingPrefab","_node$getComponent","updateAlignment","parsingScene","scene","addUILoadingUuid","loadingUuid","removeUILoadingUuid","createUI","_this10","showLoading","uiLoadingUuid","isSingleton","hideLoading","showToast","isInQueue","isLoading","putInShowQueue","queue","consumeShowQueue","ret","showUI","_params$top","_params$attr","_params$silent","LogicError","oldCom","runSceneImmediate","autoReleaseAssets","_params$silent2","InvalidError","showAsync","hideAll","_temp","_this16","_this$loading$getComp","_this17","UIMgrLoading","getComponentInChildren","_this$loading$getComp2","addTouchMask","_this18","removeTouchMask","message","UIMgrToast","clearToast","targetOffUserInterface","_this$UserInterface","updateZOrder","screenshot","renderTexture","cameraList","sort","enabledInHierarchy","targetTexture","cameraFilter","cameraList2","pipeline","render","canvas","cameraComponent","Canvas","ringScale","reverse","angleSpeed","ringSpeed","inited","drawing","timedown","angle","Graphics","onDraw","graphics","centerX","centerY","r","allPI","PI","arc","stroke","Size","UIOpacity","Material","blurFrame","sprite","color","Color","WHITE","customMaterial","flipUVY","cameras","EVENT_BEFORE_RENDER","_this2$blurFrame2","_this2$blurFrame","RenderTexture","reset","texture","blurMaterial","setProperty","shadeFrame","BLACK","opacity","_this$blurFrame","_this$blurFrame2","uiOpacity","_delay","_begin","_end","_speed","lifeTime","outTime","squeezeSpeed","cell","UIMgrToastCell","tween","to","Tween","stopAllByTarget","recovery","zero","curr","lastMaxY","currMinY","addLen","last","currUT","lastUT","getVisibleSize","overflow","Overflow","RESIZE_HEIGHT","updateRenderData","unuse","zOrder","tempArr","checkUpdateZOrder","CHILD_ADDED","onChildAdded","CHILD_REMOVED","onChildRemoveed","CHILDREN_ORDER_CHANGED","SIBLING_ORDER_CHANGED","EVENT_AFTER_UPDATE","TRANSFORM_CHANGED"],"mappings":"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","file":"all.js","sourcesContent":["import { Game, game } from 'cc';\r\nimport { DEBUG, DEV, EDITOR } from 'cc/env';\r\nimport Core from '../../extensions/app/assets/Core';\r\nimport { IApp } from '../app-builtin/app-admin/executor';\r\nimport { appInited, appReady, cccInited, cccReady } from './handle';\r\n\r\nexport class App extends Core<IApp> {\r\n    protected static _inst: App = null;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new App();\r\n        return this._inst;\r\n    }\r\n\r\n    private constructor() {\r\n        super();\r\n    }\r\n}\r\n\r\nexport const app = App.inst;\r\n\r\nif (DEBUG) {\r\n    //@ts-ignore\r\n    window['app'] = app;\r\n    //@ts-ignore\r\n    window['App'] = App;\r\n}\r\n\r\nif (!EDITOR || DEV) {\r\n    cccReady && cccReady(app);\r\n    appReady && appReady(app);\r\n    cccInited && game.once(Game.EVENT_ENGINE_INITED, function () { cccInited(app); });\r\n    appInited && app.once(App.EventType.EVENT_APPINIT_FINISHED, function () { appInited(app); });\r\n}","import { Sprite, SpriteFrame, _decorator } from 'cc';\r\nimport BaseAppInit from '../../../extensions/app/assets/base/BaseAppInit';\r\n// import { app } from '../../app/app';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AppInit')\r\nexport class AppInit extends BaseAppInit {\r\n    // @property(Button)\r\n    // login: Button;\r\n    @property(Sprite)\r\n    bg: Sprite;\r\n\r\n    // /**\r\n    // * 获得用户资源总量，这里返回几，就需要用户自行调用几次nextInit\r\n    // */\r\n    // protected getUserAssetNum(): number {\r\n    //     return 1;\r\n    // }\r\n\r\n    // protected onUserInit() {\r\n    //     this.login.node.active = true;\r\n    //     this.login.node.on(Button.EventType.CLICK, async () => {\r\n    //         // 登录\r\n    //         const uuid = app.manager.ui.showLoading();\r\n    //         await app.store.user.login();\r\n    //         app.manager.ui.hideLoading(uuid);\r\n    //         app.manager.ui.showToast('登录成功');\r\n    //         // 下一步\r\n    //         this.nextInit();\r\n    //     });\r\n    // }\r\n\r\n    onLoad() {\r\n        // this.login.node.active = false;\r\n        // app.Manager.Util.InitLayout();\r\n        // let self = this;\r\n        // if (app.Manager.Util.IsIphoneX()) {\r\n        //     app.manager.loader.load({\r\n        //         bundle: '', // 不传入bundle，默认为resources\r\n        //         path: 'bj_liuhai/spriteFrame',\r\n        //         type: SpriteFrame,\r\n        //         onComplete(asset) {\r\n        //             console.log('加载资源完成', asset);\r\n        //             self.bg.getComponent(Sprite).spriteFrame = asset;\r\n        //         }\r\n        //     })\r\n        // }\r\n        // else if (app.Manager.Util.IsIpad()) {\r\n        //     app.manager.loader.load({\r\n        //         bundle: '', // 不传入bundle，默认为resources\r\n        //         path: 'bj_pad/spriteFrame',\r\n        //         type: SpriteFrame,\r\n        //         onComplete(asset) {\r\n        //             console.log('加载资源完成', asset);\r\n        //             self.bg.getComponent(Sprite).spriteFrame = asset;\r\n        //         }\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    onFinish() {\r\n    //     // 执行完成操作\r\n    //     this.node.destroy();\r\n    }\r\n}","import { AudioClip, AudioSource, Node } from 'cc';\r\n\r\nexport default class Audio {\r\n    private volume = 1;\r\n    private volumeScale = 1;\r\n    private mute = false;\r\n    private endedCallback: Function = null;\r\n    private startedCallback: Function = null;\r\n\r\n    private _playing = false;\r\n    public get playing() {\r\n        return this._playing;\r\n    }\r\n    private set playing(value) {\r\n        this._playing = value;\r\n    }\r\n\r\n    private _paused = false;\r\n    public get paused() {\r\n        return this._paused;\r\n    }\r\n    private set paused(value) {\r\n        this._paused = value;\r\n    }\r\n\r\n    private audioSource: AudioSource = null;\r\n    constructor() {\r\n        const node = new Node('audio');\r\n        this.audioSource = node.addComponent(AudioSource);\r\n        node.on(AudioSource.EventType.ENDED, this.onAudioEnded, this);\r\n        node.on(AudioSource.EventType.STARTED, this.onAudioStarted, this);\r\n    }\r\n\r\n    private onAudioEnded() {\r\n        if (this.endedCallback) {\r\n            const endedCallback = this.endedCallback;\r\n            this.endedCallback = null;\r\n            endedCallback();\r\n        }\r\n    }\r\n\r\n    private onAudioStarted() {\r\n        if (this.startedCallback) {\r\n            const startedCallback = this.startedCallback;\r\n            this.startedCallback = null;\r\n            startedCallback();\r\n        }\r\n    }\r\n\r\n    play(clip: AudioClip, onEnded: Function = null, onStarted: Function = null) {\r\n        this.audioSource.clip = clip;\r\n        this.endedCallback = onEnded;\r\n        this.startedCallback = onStarted;\r\n        this.audioSource.play();\r\n        this.playing = true;\r\n        this.paused = false;\r\n        return this;\r\n    }\r\n\r\n    stop() {\r\n        this.playing = false;\r\n        this.paused = false;\r\n        this.audioSource.stop();\r\n        this.audioSource.node.emit(AudioSource.EventType.ENDED);\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        if (!this.playing) return this;\r\n\r\n        this.paused = true;\r\n        this.audioSource.pause();\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        if (!this.playing) return this;\r\n        if (!this.paused) return this;\r\n\r\n        this.paused = false;\r\n        this.audioSource.play();\r\n        return this;\r\n    }\r\n\r\n    setVolume(volume = 1, scale?: number) {\r\n        this.volume = volume;\r\n        if (typeof scale === 'number') this.volumeScale = scale;\r\n        this.audioSource.volume = volume * this.volumeScale * (this.mute ? 0 : 1);\r\n        return this;\r\n    }\r\n\r\n    getVolume() {\r\n        return this.volume;\r\n    }\r\n\r\n    setVolumeScale(scale = 1) {\r\n        this.volumeScale = scale;\r\n        this.audioSource.volume = this.volume * scale * (this.mute ? 0 : 1);\r\n        return this;\r\n    }\r\n\r\n    getVolumeScale() {\r\n        return this.volumeScale;\r\n    }\r\n\r\n    setLoop(loop: boolean) {\r\n        this.audioSource.loop = loop;\r\n        return this;\r\n    }\r\n\r\n    getLoop() {\r\n        return this.audioSource.loop;\r\n    }\r\n\r\n    setMute(mute = true) {\r\n        this.mute = mute;\r\n        this.setVolume(this.volume);\r\n        return this;\r\n    }\r\n\r\n    getMute() {\r\n        return this.mute;\r\n    }\r\n\r\n    onEnded(endedCallback: Function) {\r\n        this.endedCallback = endedCallback;\r\n        return this;\r\n    }\r\n\r\n    clear() {\r\n        this.volume = 1;\r\n        this.volumeScale = 1;\r\n        this.mute = false;\r\n        this.paused = false;\r\n        this.endedCallback = null;\r\n        this.startedCallback = null;\r\n        if (this.audioSource) {\r\n            this.audioSource.stop();\r\n            this.audioSource.volume = 1;\r\n            this.audioSource.clip = null;\r\n            this.audioSource.loop = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n        this.audioSource.destroy();\r\n        this.audioSource.node.destroy();\r\n        this.audioSource = null;\r\n    }\r\n}","import { AudioClip } from 'cc';\r\nimport Audio from './Audio';\r\nimport AudioManager from './AudioManager';\r\n\r\nexport default class AudioEngine {\r\n    private static _inst: AudioEngine = null;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new AudioEngine();\r\n        return this._inst;\r\n    }\r\n    private constructor() { }\r\n\r\n    /**effect的id从1开始，music的id始终为0 */\r\n    private audioID = 1;\r\n    private endedCallbackMap: Map<number, Function> = new Map();\r\n    private effectMap: Map<number, Audio> = new Map();\r\n    private music: Audio = null;\r\n\r\n    private musicMute = false;\r\n    private musicVolumeScale = 1;\r\n\r\n    private effectMute = false;\r\n    private effectVolumeScale = 1;\r\n\r\n    ////////////////////////////////\r\n    // 音效                        //\r\n    ////////////////////////////////\r\n    playEffect(audioClip: AudioClip, volume = 1, loop = false, onStarted: (audioID: number) => any = null, onEnded: Function = null) {\r\n        if (this.audioID > 100000) this.audioID = 1;\r\n\r\n        const audioID = this.audioID++;\r\n        const audio = AudioManager.inst.getAudio();\r\n        this.effectMap.set(audioID, audio);\r\n        if (onEnded) this.endedCallbackMap.set(audioID, onEnded);\r\n\r\n        audio.setLoop(loop)\r\n            .setMute(this.effectMute)\r\n            .setVolume(volume, this.effectVolumeScale)\r\n            .play(audioClip, () => {\r\n                AudioManager.inst.putAudio(audio);\r\n                this.effectMap.delete(audioID);\r\n                const callback = this.endedCallbackMap.get(audioID);\r\n                if (callback) {\r\n                    this.endedCallbackMap.delete(audioID);\r\n                    callback();\r\n                }\r\n            }, () => {\r\n                onStarted && onStarted(audioID);\r\n            });\r\n\r\n        return audioID;\r\n    }\r\n\r\n    stopEffect(id: number) {\r\n        return !!this.effectMap.get(id)?.stop();\r\n    }\r\n\r\n    stopAllEffects() {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.stop();\r\n        });\r\n    }\r\n\r\n    pauseEffect(id: number) {\r\n        return !!this.effectMap.get(id)?.pause();\r\n    }\r\n\r\n    pauseAllEffects() {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.pause();\r\n        });\r\n    }\r\n\r\n    resumeEffect(id: number) {\r\n        return !!this.effectMap.get(id)?.resume();\r\n    }\r\n\r\n    resumeAllEffects() {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.resume();\r\n        });\r\n    }\r\n\r\n    setEffectMute(id: number, mute: boolean) {\r\n        return !!this.effectMap.get(id)?.setMute(mute);\r\n    }\r\n\r\n    getEffectMute(id: number) {\r\n        return !!this.effectMap.get(id)?.getMute();\r\n    }\r\n\r\n    setEffectVolume(id: number, volume: number) {\r\n        return !!this.effectMap.get(id)?.setVolume(volume);\r\n    }\r\n\r\n    getEffectVolume(id: number) {\r\n        return this.effectMap.get(id)?.getVolume() || 0;\r\n    }\r\n\r\n    setAllEffectsVolume(volume: number) {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.setVolume(volume);\r\n        });\r\n    }\r\n\r\n    setEffectVolumeScale(id: number, volume: number) {\r\n        return !!this.effectMap.get(id)?.setVolumeScale(volume);\r\n    }\r\n\r\n    getEffectVolumeScale(id: number) {\r\n        return this.effectMap.get(id)?.getVolumeScale() || 0;\r\n    }\r\n\r\n    setGlobalEffectsVolumeScale(scale: number) {\r\n        this.effectVolumeScale = scale;\r\n        this.effectMap.forEach((audio) => {\r\n            audio.setVolumeScale(scale);\r\n        });\r\n    }\r\n\r\n    getGlobalEffectsVolumeScale() {\r\n        return this.effectVolumeScale;\r\n    }\r\n\r\n    setGlobalEffectsMute(mute: boolean) {\r\n        this.effectMute = mute;\r\n        this.effectMap.forEach((audio) => {\r\n            audio.setMute(mute);\r\n        });\r\n    }\r\n\r\n    getGlobalEffectsMute() {\r\n        return this.effectMute;\r\n    }\r\n\r\n    ////////////////////////////////\r\n    // 音乐                        //\r\n    ////////////////////////////////\r\n    playMusic(audioClip: AudioClip, volume = 1, onStarted: Function = null) {\r\n        this.stopMusic();\r\n\r\n        this.music = AudioManager.inst.getAudio();\r\n        this.music\r\n            .setLoop(true)\r\n            .setMute(this.musicMute)\r\n            .setVolume(volume, this.musicVolumeScale)\r\n            .play(audioClip, null, onStarted);\r\n\r\n        return 0;\r\n    }\r\n\r\n    stopMusic() {\r\n        if (!this.music) return false;\r\n        this.music.destroy();\r\n        this.music = null;\r\n        return true;\r\n    }\r\n\r\n    pauseMusic() {\r\n        if (!this.music) return false;\r\n        this.music.pause();\r\n        return true;\r\n    }\r\n\r\n    resumeMusic() {\r\n        if (!this.music) return false;\r\n        this.music.resume();\r\n        return true;\r\n    }\r\n\r\n    setMusicVolume(volume: number) {\r\n        if (!this.music) return false;\r\n        this.music.setVolume(volume);\r\n        return true;\r\n    }\r\n\r\n    getMusicVolume() {\r\n        if (!this.music) return -1;\r\n        return this.music.getVolume();\r\n    }\r\n\r\n    setMusicVolumeScale(scale: number) {\r\n        this.musicVolumeScale = scale;\r\n        this.music?.setVolumeScale(scale);\r\n        return true;\r\n    }\r\n\r\n    getMusicVolumeScale() {\r\n        return this.musicVolumeScale;\r\n    }\r\n\r\n    setMusicMute(mute: boolean) {\r\n        this.musicMute = mute;\r\n        this.music?.setMute(mute);\r\n        return true;\r\n    }\r\n\r\n    getMusicMute() {\r\n        return this.musicMute;\r\n    }\r\n\r\n    ////////////////////////////////\r\n    // 通用                        //\r\n    ////////////////////////////////\r\n    setEndedCallback(audioID: number, callback: Function) {\r\n        if (audioID === 0) {\r\n            return !!this.music?.onEnded(callback);\r\n        } else {\r\n            if (this.effectMap.has(audioID)) {\r\n                this.endedCallbackMap.set(audioID, callback);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    stop(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.stopMusic();\r\n        } else {\r\n            return this.stopEffect(audioID);\r\n        }\r\n    }\r\n\r\n    pause(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.pauseMusic();\r\n        } else {\r\n            return this.pauseEffect(audioID);\r\n        }\r\n    }\r\n\r\n    resume(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.resumeMusic();\r\n        } else {\r\n            return this.resumeEffect(audioID);\r\n        }\r\n    }\r\n\r\n    pauseAll() {\r\n        this.pauseMusic();\r\n        this.pauseAllEffects();\r\n    }\r\n\r\n    resumeAll() {\r\n        this.resumeMusic();\r\n        this.resumeAllEffects();\r\n    }\r\n\r\n    stopAll() {\r\n        this.stopMusic();\r\n        this.stopAllEffects();\r\n    }\r\n\r\n    setVolume(audioID: number, volume: number) {\r\n        if (audioID === 0) {\r\n            return this.setMusicVolume(volume);\r\n        } else {\r\n            return this.setEffectVolume(audioID, volume);\r\n        }\r\n    }\r\n\r\n    getVolume(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.getMusicVolume();\r\n        } else {\r\n            return this.getEffectVolume(audioID);\r\n        }\r\n    }\r\n\r\n    setVolumeScale(audioID: number, scale: number) {\r\n        if (audioID === 0) {\r\n            return this.setMusicVolumeScale(scale);\r\n        } else {\r\n            return this.setEffectVolumeScale(audioID, scale);\r\n        }\r\n    }\r\n\r\n    getVolumeScale(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.getMusicVolumeScale();\r\n        } else {\r\n            return this.getEffectVolumeScale(audioID);\r\n        }\r\n    }\r\n}","import Audio from './Audio';\r\n\r\nexport default class AudioManager {\r\n    private static _inst: AudioManager = null;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new AudioManager();\r\n        return this._inst;\r\n    }\r\n    private constructor() { }\r\n\r\n    private audioArray: Audio[] = [];\r\n\r\n    getAudio() {\r\n        if (this.audioArray.length) {\r\n            return this.audioArray.pop();\r\n        }\r\n        return new Audio();\r\n    }\r\n\r\n    putAudio(audio: Audio) {\r\n        audio.clear();\r\n        this.audioArray.push(audio);\r\n    }\r\n}","import { Button, Component, EventTouch, Node, Settings, _decorator, assetManager, isValid, settings, warn } from 'cc';\r\nimport { EDITOR } from 'cc/env';\r\nimport Core from '../Core';\r\nimport BaseManager from './BaseManager';\r\nconst { ccclass } = _decorator;\r\n\r\nconst AdminBundleName = 'app-admin';\r\nconst ModelBundleName = 'app-model';\r\nconst ControlBundleName = 'app-control';\r\nconst ControllerBundleName = 'app-controller';\r\nconst ManagerBundleName = 'app-manager';\r\nconst DontRewriteFuns = ['startInit', 'nextInit'];\r\n\r\n@ccclass('BaseAppInit')\r\nexport default abstract class BaseAppInit extends Component {\r\n    private get _base_mgr_total() {\r\n        return Math.max(0, BaseManager.getTotalAssetNum(assetManager.getBundle(ManagerBundleName)));\r\n    }\r\n    private get _base_user_total() {\r\n        return Math.max(0, this.getUserAssetNum());\r\n    }\r\n    private get _base_total() {\r\n        return this._base_mgr_total + this._base_user_total;\r\n    }\r\n\r\n    private _base_mgr_completed = 0;\r\n    private _base_user_completed = 0;\r\n    private get _base_completed() {\r\n        return this._base_mgr_completed + Math.min(this._base_user_total, this._base_user_completed);\r\n    }\r\n\r\n    private _base_inited = false;\r\n    private _base_finished = false;\r\n\r\n    constructor() {\r\n        super();\r\n        if (EDITOR) {\r\n            DontRewriteFuns.forEach((funName) => {\r\n                if (BaseAppInit.prototype[funName] !== this[funName]) {\r\n                    warn(`[AppInit] 不应该重写父类方法{${funName}}`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * [避免重写] 开始初始化\r\n     */\r\n    protected startInit() {\r\n        const projectBundles = settings.querySettings(Settings.Category.ASSETS, 'projectBundles') as string[];\r\n        Core.inst.lib.task.createAny()\r\n            // 预加载control、model、admin、manager\r\n            .add([\r\n                (next, retry) => {\r\n                    // 预加载control(废弃)\r\n                    if (projectBundles.indexOf(ControlBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ControlBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载controller\r\n                    if (projectBundles.indexOf(ControllerBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ControllerBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载model\r\n                    if (projectBundles.indexOf(ModelBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ModelBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载admin\r\n                    if (projectBundles.indexOf(AdminBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: AdminBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载manage\r\n                    if (projectBundles.indexOf(ManagerBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ManagerBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                }\r\n            ])\r\n            // 加载control(废弃)\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ControlBundleName) === -1) return next();\r\n                assetManager.loadBundle(ControlBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载controller\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ControllerBundleName) === -1) return next();\r\n                assetManager.loadBundle(ControllerBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载model\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ModelBundleName) === -1) return next();\r\n                assetManager.loadBundle(ModelBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载admin\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(AdminBundleName) === -1) return next();\r\n                assetManager.loadBundle(AdminBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载manager\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ManagerBundleName) === -1) return next();\r\n                assetManager.loadBundle(ManagerBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            .start(() => {\r\n                this._base_inited = true;\r\n                this.onProgress(0, this._base_total);\r\n\r\n                // 初始化app, 使用complete来实现onUserInit的切换以确保manager已完全加载\r\n                BaseManager.init(\r\n                    assetManager.getBundle(ManagerBundleName),\r\n                    () => {\r\n                        this.innerNextInit();\r\n                    },\r\n                    () => {\r\n                        this.onUserInit();\r\n                        if (this._base_completed < this._base_total) return;\r\n                        // 全部加载完成\r\n                        this.innerFinished();\r\n                    }\r\n                );\r\n            });\r\n    }\r\n\r\n    /**\r\n     * [不可重写] 用于内部初始化完成\r\n     */\r\n    private innerFinished() {\r\n        if (this._base_finished) return;\r\n        this._base_finished = true;\r\n        Core.emit(Core.EventType.EVENT_APPINIT_FINISHED);\r\n        // 默认音效(Button点击触发, 这个方案可以正常触发input事件)\r\n        if (Core.inst.Manager.Sound.setting.defaultEffectName) {\r\n            const playDefaultEffect = function (e: EventTouch) {\r\n                // SoundManager.setButtonEffect会将Button所在节点的useDefaultEffect设为false\r\n                if (e.target['useDefaultEffect'] === false) return;\r\n                Core.inst.manager.ui.onceUserInterface(Node.EventType.TOUCH_END, function (event: EventTouch) {\r\n                    if (!event.target.getComponent(Button)) return;\r\n                    setTimeout(() => {\r\n                        if (!isValid(Core.inst.manager.sound)) return;\r\n                        // 如果是scrollView中的button，在滑动后不播放点击音效\r\n                        if (event.eventPhase === EventTouch.CAPTURING_PHASE) return;\r\n                        Core.inst.manager.sound.playDefaultEffect();\r\n                    });\r\n                }, null, true);\r\n            };\r\n            const onEnable = Button.prototype.onEnable;\r\n            Button.prototype.onEnable = function () {\r\n                onEnable.call(this);\r\n                this.node.on(Node.EventType.TOUCH_START, playDefaultEffect);\r\n            };\r\n            const onDisable = Button.prototype.onDisable;\r\n            Button.prototype.onDisable = function () {\r\n                this.node.off(Node.EventType.TOUCH_START, playDefaultEffect);\r\n                onDisable.call(this);\r\n            };\r\n        }\r\n        return Core.inst.manager.ui.showDefault(() => {\r\n            // 初始化完成\r\n            this.onFinish();\r\n            // 默认音乐(默认播放)\r\n            if (Core.inst.Manager.Sound.setting.defaultMusicName) {\r\n                const onTouch = function () {\r\n                    if (!isValid(Core.inst.manager.sound)) return;\r\n                    if (Core.inst.manager.sound.isMusicPlaying && !Core.inst.manager.sound.isMusicPaused) {\r\n                        Core.inst.manager.sound.replayMusic(() => {\r\n                            Core.inst.manager.ui.offUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                        });\r\n                    } else {\r\n                        Core.inst.manager.ui.offUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                    }\r\n                };\r\n                Core.inst.manager.ui.onUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                Core.inst.manager.sound.playDefaultMusic(() => {\r\n                    Core.inst.manager.ui.offUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * [不可重写] 用于内部初始化\r\n     */\r\n    private innerNextInit() {\r\n        // 完成+1\r\n        this._base_mgr_completed += 1;\r\n        // 进度回调\r\n        this.onProgress(this._base_completed, this._base_total);\r\n    }\r\n\r\n    /**\r\n     * [避免重写] 初始化下一步，用户部分每完成一步需要调用一次\r\n     */\r\n    protected nextInit(): any {\r\n        if (this._base_finished) return;\r\n\r\n        if (!this._base_inited) {\r\n            // 完成+1\r\n            this._base_user_completed += 1;\r\n            // 进度回调\r\n            this.onProgress(this._base_completed, this._base_total);\r\n            return;\r\n        }\r\n\r\n        // 完成+1\r\n        this._base_user_completed += 1;\r\n        // 进度回调\r\n        this.onProgress(this._base_completed, this._base_total);\r\n\r\n        // 全部加载完成\r\n        if (this._base_completed >= this._base_total) {\r\n            this.innerFinished();\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////////////////////////////////////////        以下可重写        ////////////////////////////////////////////\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * [可以重写] 默认start调用startInit，可以重写后自定义时机\r\n     */\r\n    protected start(): any { this.startInit(); }\r\n\r\n    /**\r\n     * [可以重写] 获得用户资源总量，这里返回几，就需要用户自行调用几次nextInit\r\n     */\r\n    protected getUserAssetNum(): number { return 0; }\r\n\r\n    /**\r\n     * [可以重写] 用户初始化函数，会在框架初始化完成后调用\r\n     */\r\n    protected onUserInit(): any { return 0; }\r\n\r\n    /**\r\n     * [可以重写] 监听进度\r\n     * @param {Number} completed\r\n     * @param {Number} total\r\n     */\r\n    protected onProgress(completed: number, total: number): any { return completed / total; }\r\n\r\n    /**\r\n     * [可以重写] 初始化完成\r\n     */\r\n    protected onFinish() { }\r\n}","class CallbackInfo {\r\n    public callback: Function = null;\r\n    public target: unknown = null;\r\n    public once = false;\r\n\r\n    public constructor(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callback = callback;\r\n        this.target = target;\r\n        this.once = once;\r\n    }\r\n}\r\n\r\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : any;\r\ntype AnyFunc = (...args: any[]) => any;\r\n\r\nclass CallbackList {\r\n    private callbacks: CallbackInfo[] = [];\r\n\r\n    public size() {\r\n        return this.callbacks.length;\r\n    }\r\n\r\n    public add(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callbacks.push(new CallbackInfo(callback, target, once));\r\n    }\r\n\r\n    public emit(args: any[]) {\r\n        for (let index = 0; index < this.callbacks.length; index++) {\r\n            const info = this.callbacks[index];\r\n            // 先移除\r\n            if (info.once) {\r\n                this.callbacks.splice(index, 1);\r\n                --index;\r\n            }\r\n            if (info.callback) {\r\n                info.callback.apply(info.target, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    public call(args: any[]) {\r\n        if (this.callbacks.length === 0) return;\r\n        const info = this.callbacks[0];\r\n\r\n        // 先移除\r\n        if (info.once) this.callbacks.splice(0, 1);\r\n        if (!info.callback) return;\r\n\r\n        return info.callback.apply(info.target, args);\r\n    }\r\n\r\n    public remove(callback: Function, target: unknown = null) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback || info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByCallback(callback: Function) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByTarget(target: unknown) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass EventEmitter {\r\n    private listeners: { [key in string]: CallbackList } = {};\r\n\r\n    public on(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target);\r\n    }\r\n\r\n    public once(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target, true);\r\n    }\r\n\r\n    public off(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) return;\r\n\r\n        this.listeners[event].remove(cb, target);\r\n    }\r\n\r\n    public targetOff(target?: unknown) {\r\n        if (!target) return;\r\n\r\n        for (const key in this.listeners) {\r\n            if (Object.prototype.hasOwnProperty.call(this.listeners, key)) {\r\n                const element = this.listeners[key];\r\n                element.removeByTarget(target);\r\n            }\r\n        }\r\n    }\r\n\r\n    public emit(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        this.listeners[event].emit(args);\r\n    }\r\n\r\n    public call(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        return this.listeners[event].call(args);\r\n    }\r\n}\r\n\r\nexport interface IBaseControl<C, E, T extends { [key in keyof E]?: AnyFunc }> {\r\n    readonly inst: Readonly<C>\r\n\r\n    //用于类型提示推导////////////////\r\n    new(): SuperBaseControl<E, T>//\r\n    ///////////////////////////////\r\n}\r\n\r\nclass SuperBaseControl<E, T extends { [key in keyof E]?: AnyFunc }> {\r\n    //用于类型提示推导//\r\n    private e: E;////\r\n    private t: T;////\r\n    /////////////////\r\n\r\n    private event = new EventEmitter();\r\n\r\n    protected call<K extends keyof E & keyof T>(key: E[K], ...args: Parameters<T[K]>): ReturnType<T[K]> {\r\n        return this.event.call.call(this.event, key, args);\r\n    }\r\n\r\n    protected emit<K extends keyof E & keyof T>(key: E[K], ...args: Parameters<T[K]>): void {\r\n        return this.event.emit.call(this.event, key, args);\r\n    }\r\n\r\n    private on(...args: any[]): void {\r\n        return this.event.on.apply(this.event, args);\r\n    }\r\n\r\n    private once(...args: any[]): void {\r\n        return this.event.once.apply(this.event, args);\r\n    }\r\n\r\n    private off(...args: any[]): void {\r\n        return this.event.off.apply(this.event, args);\r\n    }\r\n\r\n    private targetOff(target: any): void {\r\n        return this.event.targetOff.call(this.event, target);\r\n    }\r\n}\r\n\r\n/**\r\n * @deprecated 废弃，请使用Controller代替Control\r\n */\r\nexport default function BaseControl<C, E = any, T extends { [key in keyof E & string]?: AnyFunc } = any>(Event?: E) {\r\n    return class BaseControl extends SuperBaseControl<E, T> {\r\n        public static Event = Event;\r\n\r\n        private static _base_inst: Readonly<C> = null;\r\n        public static get inst() {\r\n            if (this._base_inst === null) {\r\n                this._base_inst = new this() as C;\r\n            }\r\n            return this._base_inst;\r\n        }\r\n    };\r\n}","import { DEV } from 'cc/env';\r\nimport { IReadOnly } from '../../../../assets/app-builtin/app-admin/executor';\r\nimport { Logger } from '../lib/logger/logger';\r\n\r\nclass CallbackInfo {\r\n    public callback: Function = null;\r\n    public target: unknown = null;\r\n    public once = false;\r\n\r\n    public constructor(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callback = callback;\r\n        this.target = target;\r\n        this.once = once;\r\n    }\r\n}\r\n\r\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : any;\r\ntype AnyFunc = (...args: any[]) => any;\r\n\r\nclass CallbackList {\r\n    private callbacks: CallbackInfo[] = [];\r\n\r\n    public size() {\r\n        return this.callbacks.length;\r\n    }\r\n\r\n    public add(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callbacks.push(new CallbackInfo(callback, target, once));\r\n    }\r\n\r\n    public emit(args: any[]) {\r\n        for (let index = 0; index < this.callbacks.length; index++) {\r\n            const info = this.callbacks[index];\r\n            // 先移除\r\n            if (info.once) {\r\n                this.callbacks.splice(index, 1);\r\n                --index;\r\n            }\r\n            if (info.callback) {\r\n                info.callback.apply(info.target, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    public call(args: any[]) {\r\n        if (this.callbacks.length === 0) return;\r\n        const info = this.callbacks[0];\r\n\r\n        // 先移除\r\n        if (info.once) this.callbacks.splice(0, 1);\r\n        if (!info.callback) return;\r\n\r\n        return info.callback.apply(info.target, args);\r\n    }\r\n\r\n    public remove(callback: Function, target: unknown = null) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback || info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByCallback(callback: Function) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByTarget(target: unknown) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass EventEmitter {\r\n    private listeners: { [key in string]: CallbackList } = {};\r\n\r\n    public on(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target);\r\n    }\r\n\r\n    public once(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target, true);\r\n    }\r\n\r\n    public off(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) return;\r\n\r\n        this.listeners[event].remove(cb, target);\r\n    }\r\n\r\n    public targetOff(target?: unknown) {\r\n        if (!target) return;\r\n\r\n        for (const key in this.listeners) {\r\n            if (Object.prototype.hasOwnProperty.call(this.listeners, key)) {\r\n                const element = this.listeners[key];\r\n                element.removeByTarget(target);\r\n            }\r\n        }\r\n    }\r\n\r\n    public emit(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        this.listeners[event].emit(args);\r\n    }\r\n\r\n    public call(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        return this.listeners[event].call(args);\r\n    }\r\n}\r\n\r\nexport interface IBaseController<C, T extends { [key in string]?: AnyFunc }> {\r\n    readonly inst: Readonly<C>\r\n\r\n    //用于类型提示推导////////////////\r\n    new(): SuperBaseController<T>//\r\n    ///////////////////////////////\r\n}\r\n\r\nclass SuperBaseController<T extends { [key in string]?: AnyFunc }> {\r\n    //用于类型提示推导//\r\n    private t: T;////\r\n    /////////////////\r\n\r\n    private event = new EventEmitter();\r\n\r\n    /**获取第一个事件回调的返回值 */\r\n    protected call<K extends keyof T>(key: K, ...args: Parameters<T[K]>): ReturnType<T[K]> {\r\n        return this.event.call.call(this.event, key, args);\r\n    }\r\n\r\n    /**发射事件 */\r\n    protected emit<K extends keyof T>(key: K, ...args: Parameters<T[K]>): void {\r\n        return this.event.emit.call(this.event, key, args);\r\n    }\r\n\r\n    private on(...args: any[]): void {\r\n        return this.event.on.apply(this.event, args);\r\n    }\r\n\r\n    private once(...args: any[]): void {\r\n        return this.event.once.apply(this.event, args);\r\n    }\r\n\r\n    private off(...args: any[]): void {\r\n        return this.event.off.apply(this.event, args);\r\n    }\r\n\r\n    private targetOff(target: any): void {\r\n        return this.event.targetOff.call(this.event, target);\r\n    }\r\n\r\n    /**打印日志 */\r\n    protected get log(): Function {\r\n        return Logger.create('log', '#4682b4', DEV ? `[${this['constructor'].name}] LOG` : `[${this['constructor'].name}] [LOG]`);\r\n    }\r\n\r\n    /**打印警告 */\r\n    protected get warn(): Function {\r\n        return Logger.create('warn', '#ff7f50', DEV ? `[${this['constructor'].name}] WARN` : `[${this['constructor'].name}] [WARN]`);\r\n    }\r\n\r\n    /**打印错误 */\r\n    protected get error(): Function {\r\n        return Logger.create('error', '#ff4757', DEV ? `[${this['constructor'].name}] ERROR` : `[${this['constructor'].name}] [ERROR]`);\r\n    }\r\n}\r\n\r\nexport default function BaseController<C, T extends { [key in string]?: AnyFunc } = any>() {\r\n    return class BaseController extends SuperBaseController<T> {\r\n        /**\r\n         * 控制器事件\r\n         */\r\n        public static Event: { [key in keyof T]: key } = new Proxy({} as any, {\r\n            get: function (target, key) {\r\n                if (target[key]) return target[key];\r\n                target[key] = key;\r\n                return key;\r\n            }\r\n        });\r\n\r\n        private static _base_inst: IReadOnly<C> = null;\r\n        /**\r\n         * 控制器单例\r\n         * - 尽量使用app.controller，可以避免因跨Bundle引用导致的问题，也可以避免Controller之间循环引用的问题\r\n         */\r\n        public static get inst() {\r\n            return this._base_inst;\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            BaseController._base_inst = this as any;\r\n        }\r\n    };\r\n}","/**\n * 基础数据类\n * */\n\nexport default class BaseData {\n    constructor() {\n        console.log(\"Load BaseData\");\n    }\n\n\n}","import { AssetManager, Component, EventTarget, Prefab, Widget, _decorator, error, instantiate, js, path, warn } from 'cc';\r\nimport { DEBUG, DEV, EDITOR } from 'cc/env';\r\nimport Core from '../Core';\r\nimport { Logger } from '../lib/logger/logger';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\nconst UserManagerPath = 'UserManager';\r\nconst DontRewriteFuns = ['emit', 'on', 'once', 'off', 'targetOff'];\r\n\r\nconst uuid = new class UUID {\r\n    private index = 0;\r\n\r\n    public create(): string {\r\n        if (this.index++ > 10000000) {\r\n            this.index = 0;\r\n        }\r\n        return `${Date.now()}-${this.index}`;\r\n    }\r\n};\r\n\r\nconst loadBegin = Logger.create('log', '#32cd32', DEV ? '[BaseManager] 下载开始' : '[BaseManager] [下载开始]');\r\n\r\nconst loadFinish = Logger.create('log', '#00ae9d', DEV ? '[BaseManager] 下载完成' : '[BaseManager] [下载完成]');\r\n\r\nconst loadError = Logger.create('log', '#ff4757', DEV ? '[BaseManager] 下载失败' : '[BaseManager] [下载失败]');\r\n\r\nconst initBegin = Logger.create('log', '#3e4145', DEV ? '[BaseManager] 初始化开始' : '[BaseManager] [初始化开始]');\r\n\r\nconst initFinish = Logger.create('log', '#008080', DEV ? '[BaseManager] 初始化完成' : '[BaseManager] [初始化完成]');\r\n\r\n@ccclass('BaseManager')\r\nexport default class BaseManager extends Component {\r\n    // 事件管理器\r\n    private _base_event: EventTarget = new EventTarget();\r\n\r\n    // manager名字\r\n    private _base_manager_name: string = js.getClassName(this);\r\n    public get managerName() {\r\n        return this._base_manager_name;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        if (EDITOR) {\r\n            DontRewriteFuns.forEach((funName) => {\r\n                if (BaseManager.prototype[funName] !== this[funName]) {\r\n                    warn(`[${this._base_manager_name}] 不应该重写父类方法{${funName}}`);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this._base_manager_name !== 'Manager' && this._base_manager_name.slice(-7) === 'Manager') {\r\n            const managerName = this._base_manager_name.slice(0, - 7);\r\n            Core.inst.Manager[managerName] = this.constructor;\r\n            Core.inst.manager[managerName.toLocaleLowerCase()] = this;\r\n        } else if (EDITOR) {\r\n            error(`[${this._base_manager_name}] manager命名错误(应为 xxxxManager 以Manager结尾)`);\r\n        } else if (DEBUG) {\r\n            error(`[${this._base_manager_name}] manager命名错误(应为 xxxxManager 以Manager结尾)`);\r\n        }\r\n    }\r\n\r\n    // 用来初始化组件或节点的一些属性，当该组件被第一次添加到节点上或用户点击了它的 Reset 菜单时调用。这个回调只会在编辑器下调用。\r\n    resetInEditor() {\r\n        const widget = this.node.getComponent(Widget) || this.node.addComponent(Widget);\r\n        widget.isAlignBottom = true;\r\n        widget.isAlignLeft = true;\r\n        widget.isAlignRight = true;\r\n        widget.isAlignTop = true;\r\n        widget.top = 0;\r\n        widget.left = 0;\r\n        widget.right = 0;\r\n        widget.bottom = 0;\r\n        widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n    }\r\n\r\n    /**\r\n     * [无序] 自身初始化完成, init执行完毕后被调用\r\n     */\r\n    protected onInited() {\r\n    }\r\n\r\n    /**\r\n     * [无序] 所有manager初始化完成\r\n     */\r\n    protected onFinished() {\r\n    }\r\n\r\n    /**\r\n     * [无序] 初始化manager，在初始化完成后，调用finish方法\r\n     * @param {Function} finish \r\n     */\r\n    protected init(finish?: Function) {\r\n        finish && finish();\r\n    }\r\n\r\n    protected createUUID() {\r\n        return uuid.create();\r\n    }\r\n\r\n    /**打印日志 */\r\n    protected get log() {\r\n        if (DEV) {\r\n            return window.console.log.bind(window.console,\r\n                '%c %s %c %s ',\r\n                'background:#4169e1; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid #4169e1; color: #fff; font-weight: normal;',\r\n                `[${this._base_manager_name}] LOG ${new Date().toLocaleString()}`,\r\n                'background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid #4169e1; color: #4169e1; font-weight: normal;'\r\n            );\r\n        }\r\n        return window.console.log.bind(window.console,\r\n            `[${this._base_manager_name}] [LOG] [${new Date().toLocaleString()}]`,\r\n        );\r\n    }\r\n\r\n    /**打印警告 */\r\n    protected get warn() {\r\n        if (DEV) {\r\n            return window.console.warn.bind(window.console,\r\n                '%c %s %c %s ',\r\n                'background:#ff7f50; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid #ff7f50; color: #fff; font-weight: normal;',\r\n                `[${this._base_manager_name}] WARN ${new Date().toLocaleString()}`,\r\n                'background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid #ff7f50; color: #ff7f50; font-weight: normal;'\r\n            );\r\n        }\r\n        return window.console.warn.bind(window.console,\r\n            `[${this._base_manager_name}] [WARN] [${new Date().toLocaleString()}]`,\r\n        );\r\n    }\r\n\r\n    /**打印错误 */\r\n    protected get error() {\r\n        if (DEV) {\r\n            return window.console.error.bind(window.console,\r\n                '%c %s %c %s ',\r\n                'background:#ff4757; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid #ff4757; color: #fff; font-weight: normal;',\r\n                `[${this._base_manager_name}] ERROR ${new Date().toLocaleString()}`,\r\n                'background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid #ff4757; color: #ff4757; font-weight: normal;'\r\n            );\r\n        }\r\n        return window.console.error.bind(window.console,\r\n            `[${this._base_manager_name}] [ERROR] [${new Date().toLocaleString()}]`,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件分发\r\n     */\r\n    public emit(event: string | number, ...data: any[]) {\r\n        this._base_event.emit(event as any, ...data);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件监听\r\n     */\r\n    public on(event: string | number, cb: (...any: any[]) => void, target?: any) {\r\n        this._base_event.on(event as any, cb, target);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件监听\r\n     */\r\n    public once(event: string | number, cb: (...any: any[]) => void, target?: any) {\r\n        this._base_event.once(event as any, cb, target);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件移除监听\r\n     */\r\n    public off(event: string | number, cb?: (...any: any[]) => void, target?: any) {\r\n        this._base_event.off(event as any, cb, target);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件移除监听\r\n     */\r\n    public targetOff(target: any) {\r\n        this._base_event.targetOff(target);\r\n    }\r\n\r\n    /***********************************静态***********************************/\r\n    /**\r\n     * 框架内置Manager的数量\r\n     * @private\r\n     */\r\n    public static get sysMgrCount() {\r\n        return 5;\r\n    }\r\n\r\n    /**\r\n     * 获得初始化资源的数量(包括sysMgrCount)\r\n     * @private\r\n     */\r\n    public static getTotalAssetNum(bundle: AssetManager.Bundle) {\r\n        let count = this.sysMgrCount;\r\n\r\n        if (!bundle) return count;\r\n\r\n        const array = bundle.getDirWithPath('/', Prefab) as { uuid: string, path: string, ctor: Function }[];\r\n\r\n        array.forEach(function (item) {\r\n            if (item.path.endsWith('Manager')) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * 获得初始化资源的数量\r\n     * @private\r\n     */\r\n    public static getUserAssetUrls(bundle: AssetManager.Bundle) {\r\n        const pathArr: string[] = [];\r\n\r\n        if (!bundle) return pathArr;\r\n\r\n        const array = bundle.getDirWithPath('/', Prefab) as { uuid: string, path: string, ctor: Function }[];\r\n\r\n        array.forEach(function (item) {\r\n            if (item.path.endsWith('Manager')) {\r\n                pathArr.push(item.path);\r\n            }\r\n        });\r\n\r\n        return pathArr;\r\n    }\r\n\r\n    /**\r\n     * 静态方法，初始化manager，该方法必须在场景初始化完毕之后调用\r\n     * @private\r\n     */\r\n    public static init(\r\n        bundle: AssetManager.Bundle,\r\n        progress: (completeAsset: Number, totalAsset: Number) => any,\r\n        complete: (totalAsset: Number) => any) {\r\n        const urls = this.getUserAssetUrls(bundle);\r\n\r\n        const totalAsset = urls.length + this.sysMgrCount;\r\n        let completeAsset = 0;\r\n\r\n        const onProgress = function (next: Function, manager: BaseManager) {\r\n            if (DEBUG) {\r\n                const startTime = window?.performance?.now ? performance.now() : Date.now();\r\n                initBegin(manager.managerName);\r\n                return function () {\r\n                    manager.onInited();\r\n                    if (DEBUG) {\r\n                        const endTime = window?.performance?.now ? performance.now() : Date.now();\r\n                        initFinish(`${manager.managerName} 耗时:${(endTime - startTime).toFixed(6)} ms`);\r\n                    }\r\n                    progress && progress(++completeAsset, totalAsset);\r\n                    next();\r\n                };\r\n            }\r\n            return function () {\r\n                manager.onInited();\r\n                progress && progress(++completeAsset, totalAsset);\r\n                next();\r\n            };\r\n        };\r\n\r\n        // 用户manager(动态添加)\r\n        const userMgrList: BaseManager[] = [];\r\n        // 系统manager(静态内置)\r\n        const sysMgrList: BaseManager[] = [Core.inst.manager.event, Core.inst.manager.timer, Core.inst.manager.loader, Core.inst.manager.ui, Core.inst.manager.sound] as any as BaseManager[];\r\n\r\n        // 初始化系统manager\r\n        const initSysMgrTask = Core.inst.lib.task.createASync();\r\n        sysMgrList.forEach(function (manager: BaseManager) {\r\n            initSysMgrTask.add(function (next) {\r\n                manager.init(onProgress(next, manager));\r\n            });\r\n        });\r\n\r\n        // 加载用户manager\r\n        const loadUserMgrTask = Core.inst.lib.task.createASync();\r\n        const UserManagerRoot = Core.inst.manager.ui.root.getChildByPath(UserManagerPath);\r\n        urls.forEach(function (url) {\r\n            loadUserMgrTask.add(function (next, retry) {\r\n                if (DEBUG) {\r\n                    const managerName = path.basename(url);\r\n                    const startTime = window?.performance?.now ? performance.now() : Date.now();\r\n                    loadBegin(managerName);\r\n                    bundle.load(url, Prefab, function (err, prefab: Prefab) {\r\n                        if (err || !prefab) {\r\n                            loadError(managerName, '重试...');\r\n                            retry(1);\r\n                        } else {\r\n                            const endTime = window?.performance?.now ? performance.now() : Date.now();\r\n                            loadFinish(`${managerName} 耗时:${(endTime - startTime).toFixed(6)} ms`);\r\n                            const node = instantiate(prefab);\r\n                            node.parent = UserManagerRoot;\r\n                            node.active = true;\r\n                            userMgrList.push(node.getComponent(BaseManager));\r\n                            next();\r\n                        }\r\n                    });\r\n                    return;\r\n                }\r\n                bundle.load(url, Prefab, function (err, prefab: Prefab) {\r\n                    if (err || !prefab) {\r\n                        loadError(path.basename(url), '重试...');\r\n                        retry(1);\r\n                    } else {\r\n                        const node = instantiate(prefab);\r\n                        node.parent = UserManagerRoot;\r\n                        node.active = true;\r\n                        userMgrList.push(node.getComponent(BaseManager));\r\n                        next();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        Core.inst.lib.task.createAny()\r\n            .add([\r\n                next => initSysMgrTask.start(next),\r\n                next => loadUserMgrTask.start(next),\r\n            ])\r\n            .add(function (next) {\r\n                Core.emit(Core.EventType.EVENT_SYS_MANAGER_INITED);\r\n                next();\r\n            })\r\n            .add(function (next) {\r\n                // 初始化用户manager\r\n                const initUserMgrTask = Core.inst.lib.task.createASync();\r\n                userMgrList.forEach(manager => {\r\n                    initUserMgrTask.add(function (next) {\r\n                        manager.init(onProgress(next, manager));\r\n                    });\r\n                });\r\n                initUserMgrTask.start(next);\r\n            })\r\n            .add(function (next) {\r\n                Core.emit(Core.EventType.EVENT_USER_MANAGER_INITED);\r\n                Core.emit(Core.EventType.EVENT_MANAGER_INITED);\r\n                next();\r\n            })\r\n            .add(function (next) {\r\n                // 所有manager初始化完成后，触发回调\r\n                sysMgrList.forEach(function (manager) {\r\n                    manager.onFinished();\r\n                });\r\n                userMgrList.forEach(function (manager) {\r\n                    manager.onFinished();\r\n                });\r\n                next();\r\n            })\r\n            .start(function () {\r\n                Core.emit(Core.EventType.EVENT_MANAGER_FINISHED);\r\n                complete && complete(totalAsset);\r\n            });\r\n    }\r\n\r\n}","// export type IModel<T> = {\r\n//     [P in keyof T]: T[P] extends Function\r\n//     ? '❌此处不能定义任何方法'\r\n//     : (\r\n//         T[P] extends Array<infer R>\r\n//         ? (\r\n//             R extends Function\r\n//             ? '❌此处不能定义任何方法'\r\n//             : T[P]\r\n//         )\r\n//         : T[P] // IModel<T[P]> 性能消耗大\r\n//     );\r\n// };\r\n\r\n// export type IStore<T> = {\r\n//     [P in keyof T]: T[P] extends Function\r\n//     ? T[P]\r\n//     : (\r\n//         T[P] extends Array<infer R>\r\n//         ? (\r\n//             R extends Function\r\n//             ? '❌此处不能定义任何方法'\r\n//             : IModel<T[P]>\r\n//         )\r\n//         : IModel<T[P]>\r\n//     );\r\n// };\r\n\r\nexport type IModel<T> = {\r\n    [P in keyof T]: T[P] extends Function\r\n    ? '❌此处不能定义任何方法'\r\n    : T[P];\r\n};\r\n\r\n// export type IStore<T> = {\r\n//     [P in keyof T]: T[P] extends Function\r\n//     ? T[P]\r\n//     : IModel<T[P]>;\r\n// };\r\n\r\nexport type IStore<T> = {\r\n    [P in keyof T]: T[P];\r\n};","import { Asset, Component, Enum, EventTouch, Font, Label, Node, Scene, Sprite, SpriteFrame, UITransform, Widget, _decorator, director, isValid, js, sp } from 'cc';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport { IMiniViewName, IMiniViewNames, IViewName } from '../../../../assets/app-builtin/app-admin/executor';\r\nimport Core from '../Core';\r\nimport { Logger } from '../lib/logger/logger';\r\nimport { IBaseControl } from './BaseControl';\r\nimport { IBaseController } from './BaseController';\r\n\r\nconst { ccclass, property, disallowMultiple } = _decorator;\r\n\r\nconst BlockEvents = [\r\n    Node.EventType.TOUCH_START, Node.EventType.TOUCH_MOVE, Node.EventType.TOUCH_END, Node.EventType.TOUCH_CANCEL,\r\n    Node.EventType.MOUSE_DOWN, Node.EventType.MOUSE_MOVE, Node.EventType.MOUSE_UP,\r\n    Node.EventType.MOUSE_ENTER, Node.EventType.MOUSE_LEAVE, Node.EventType.MOUSE_WHEEL\r\n];\r\n\r\nconst HideEvent = Enum({\r\n    destroy: 1,\r\n    active: 2\r\n});\r\n\r\nexport type IShade = {\r\n    /**等待 默认0秒 */\r\n    delay?: number,\r\n    /**开始透明度 默认60 */\r\n    begin?: number,\r\n    /**结束透明度 默认180 */\r\n    end?: number,\r\n    /**透明变化速度 默认100 */\r\n    speed?: number,\r\n    /**\r\n     * 毛玻璃效果 默认false\r\n     * - 开启后其它参数将无效\r\n     */\r\n    blur?: boolean,\r\n};\r\n\r\nexport interface IShowParamAttr {\r\n    zIndex?: number,\r\n    siblingIndex?: number,\r\n}\r\n\r\nexport interface IShowParamOnShow<T = any> {\r\n    (result: T): any\r\n}\r\n\r\nexport interface IShowParamOnHide<T = any> {\r\n    (result: T): any\r\n}\r\n\r\nexport interface IShowParamBeforeShow {\r\n    (error: string): any\r\n}\r\n\r\nexport interface IShowParamInnerLoad {\r\n    (name: string, path: string, type: { prototype: Asset }, callback: (result: Asset) => any): void\r\n}\r\n\r\nexport interface IHideParamOnHide<T = any> {\r\n    (result: T): any\r\n}\r\n\r\nexport type IViewType = 'Page' | 'Paper' | 'Pop' | 'Top';\r\n\r\nexport enum ViewType {\r\n    Page = 'Page',\r\n    Paper = 'Paper',\r\n    PaperAll = 'PaperAll',\r\n    Pop = 'Pop',\r\n    Top = 'Top'\r\n}\r\n\r\ninterface IMiniOnShow {\r\n    (name: IMiniViewName, data?: any): any\r\n}\r\ninterface IMiniOnHide {\r\n    (name: IMiniViewName, data?: any): any\r\n}\r\ninterface IMiniOnFinish {\r\n    (): any\r\n}\r\ntype IPick<T> = {\r\n    -readonly [P in keyof T]: T[P] extends Function\r\n    ? T[P]\r\n    : (T[P] extends Object\r\n        ? IPick<T[P]>\r\n        : T[P]);\r\n};\r\ninterface IBaseViewController<C, T extends { [key in string]: any }> {\r\n    new(): BaseView & {\r\n        readonly controller: IPick<C> & Readonly<{\r\n            /**获取第一个事件回调的返回值 */\r\n            emit<K extends keyof T>(key: K, ...args: Parameters<T[K]>): void;\r\n            /**发射事件 */\r\n            call<K extends keyof T & keyof T>(key: K, ...args: Parameters<T[K]>): ReturnType<T[K]>;\r\n            /**注册事件回调 */\r\n            on<K extends keyof T>(key: K, callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n            /**注册一次性事件回调 */\r\n            once<K extends keyof T>(key: K, callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n            /**取消事件回调 */\r\n            off(key: keyof T, callback: Function, target?: any): void;\r\n            /**取消事件回调 */\r\n            targetOff(target: any): void;\r\n        }>\r\n    }\r\n}\r\n\r\nenum ViewState {\r\n    BeforeShow,\r\n    Showing,\r\n    Showed,\r\n    BeforeHide,\r\n    Hiding,\r\n    Hid,\r\n}\r\n\r\nconst Group = { id: 'BaseView', name: 'Settings', displayOrder: -Infinity, style: 'section' };\r\n\r\n// 记录PaperAll的owner\r\nconst PaperAllToOwner: Map<IMiniViewName, string> = new Map();\r\n\r\n@ccclass('BaseView')\r\n@disallowMultiple()\r\nexport default class BaseView extends Component {\r\n    /**\r\n     * @deprecated 废弃，请使用BindController代替BindControl\r\n     */\r\n    static BindControl<C, E, T extends { [key in keyof E]?: any }>(Control: IBaseControl<C, E, T>) {\r\n        return class BindControl extends BaseView {\r\n            protected get control(): Pick<C, keyof C> & Readonly<{\r\n                call<K extends keyof E>(key: E[K], ...args: Parameters<T[K]>): ReturnType<T[K]>;\r\n                emit<K extends keyof E>(key: E[K], ...args: Parameters<T[K]>): void;\r\n                on<K extends keyof E>(key: E[K], callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n                once<K extends keyof E>(key: E[K], callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n                off(key: E[keyof E], callback: Function, target?: any): void;\r\n                targetOff(target: any): void;\r\n            }> {\r\n                return Control ? Control.inst as any : null;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 给UI绑定一个控制器，绑定后可以通过this.controller访问，并能访问一些内部方法(emit、on、once、off、targetOff)\r\n     */\r\n    static BindController<C, T extends { [key in string]: any }>(Controller: IBaseController<C, T>) {\r\n        @disallowMultiple()\r\n        class BindController extends BaseView {\r\n            protected get controller() {\r\n                return Controller ? Controller.inst as any : null;\r\n            }\r\n        }\r\n        return BindController as any as IBaseViewController<C, T>;\r\n    }\r\n\r\n    /**\r\n     * 是否有效，如果返回false的话，app.manager.ui.show会触发onError回调\r\n     */\r\n    public static isViewValid(next: (valid: boolean) => void, data: any) {\r\n        data;\r\n        next && next(true);\r\n    }\r\n\r\n    public static isPage(name: string) {\r\n        return name.indexOf(ViewType.Page) === 0;\r\n    }\r\n\r\n    public static isPaper(name: string) {\r\n        return name.indexOf(ViewType.Paper) === 0;\r\n    }\r\n\r\n    public static isPaperAll(name: string) {\r\n        return name.indexOf(ViewType.PaperAll) === 0;\r\n    }\r\n\r\n    public static isPop(name: string) {\r\n        return name.indexOf(ViewType.Pop) === 0;\r\n    }\r\n\r\n    public static isTop(name: string) {\r\n        return name.indexOf(ViewType.Top) === 0;\r\n    }\r\n\r\n    // 是否被调用过\r\n    private _base_view_created = false;\r\n    // view状态\r\n    private _base_view_state = ViewState.Hid;\r\n    // 当前view的名字\r\n    private _base_view_name: IViewName | IMiniViewName = js.getClassName(this) as any;\r\n    // 触摸是否有效\r\n    private _base_touch_enable = true;\r\n    // show/hide等待列表\r\n    private _base_show_hide_delays: Function[] = [];\r\n    // 子界面融合相关\r\n    private _base_mini_show: Set<IMiniViewName> = new Set();\r\n\r\n    protected isPage() {\r\n        return BaseView.isPage(this._base_view_name);\r\n    }\r\n\r\n    protected isPaper() {\r\n        return BaseView.isPaper(this._base_view_name);\r\n    }\r\n\r\n    protected isPaperAll() {\r\n        return BaseView.isPaperAll(this._base_view_name);\r\n    }\r\n\r\n    protected isPop() {\r\n        return BaseView.isPop(this._base_view_name);\r\n    }\r\n\r\n    protected isTop() {\r\n        return BaseView.isTop(this._base_view_name);\r\n    }\r\n\r\n    protected is2D() {\r\n        return !this.is3D();\r\n    }\r\n\r\n    protected is3D() {\r\n        if (this.node.parent instanceof Scene) {\r\n            return this.node.parent.name === this.viewName;\r\n        }\r\n        const scene = director.getScene();\r\n        return scene.name === this.viewName;\r\n    }\r\n\r\n    @property\r\n    private _hideEvent = HideEvent.destroy;\r\n    @property({\r\n        group: Group,\r\n        type: HideEvent,\r\n        tooltip: '何种模式隐藏节点\\n1、destroy: 销毁UI并释放对应的所有资源\\n2、active: 缓存UI并加速下次的打开速度',\r\n    })\r\n    public get hideEvent() {\r\n        if (this.is3D()) return HideEvent.destroy;\r\n        return this._hideEvent;\r\n    }\r\n    public set hideEvent(value) {\r\n        if (this.is3D() && value !== HideEvent.destroy) {\r\n            this.log('3D模式下只能是destroy模式');\r\n            return;\r\n        }\r\n        this._hideEvent = value;\r\n    }\r\n\r\n    @property\r\n    private _singleton = true;\r\n    private static _singleton = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否是单例模式\\n1、单例模式: UI只会被创建一次(onShow会被重复触发)\\n2、非单例模式: UI会被重复创建',\r\n    })\r\n    protected get singleton(): boolean {\r\n        if (this.isPage()) return true;\r\n        if (this.isPaperAll()) return true;\r\n        if (this.isPaper()) return true;\r\n        return this._singleton && (<typeof BaseView>this.constructor)._singleton;\r\n    }\r\n    protected set singleton(value) {\r\n        if (!value) {\r\n            if (this.isPage()) {\r\n                this.log('Page只能是单例模式');\r\n                return;\r\n            }\r\n            if (this.isPaper()) {\r\n                this.log('Paper只能是单例模式');\r\n                return;\r\n            }\r\n        }\r\n        this._singleton = (<typeof BaseView>this.constructor)._singleton = !!value;\r\n    }\r\n\r\n    @property\r\n    private _captureFocus = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否捕获焦点<响应onLostFocus和onFocus>\\n1、当一个捕获焦点的UI处于最上层并展示时\\n下层的UI永远不会响应focus事件',\r\n        visible(this: BaseView) {\r\n            if (this.is3D()) return false;\r\n            return true;\r\n        }\r\n    })\r\n    protected get captureFocus() {\r\n        if (this.is3D()) return false;\r\n        return this._captureFocus;\r\n    }\r\n    protected set captureFocus(value) {\r\n        if (value && this.is3D()) {\r\n            this.log('只有2D模式下才可以捕获焦点');\r\n            return;\r\n        }\r\n\r\n        if (!EDITOR && this._captureFocus !== value) {\r\n            this._captureFocus = value;\r\n            Core.inst?.manager?.ui?.refreshShade();\r\n        } else {\r\n            this._captureFocus = value;\r\n        }\r\n    }\r\n\r\n    @property\r\n    private _shade = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否需要底层遮罩',\r\n        visible(this: BaseView) {\r\n            if (this.is3D()) return false;\r\n            if (this.isPage()) return false;\r\n            return true;\r\n        }\r\n    })\r\n    protected get shade() {\r\n        if (this.is3D()) return false;\r\n        if (this.isPage()) return false;\r\n        return this._shade;\r\n    }\r\n    protected set shade(value) {\r\n        if (value) {\r\n            if (this.is3D()) {\r\n                this.log('只有2D模式下才可以设置底层遮罩');\r\n                return;\r\n            }\r\n            if (this.isPage()) {\r\n                this.log('Page不可以设置底层遮罩');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!EDITOR && this._shade !== value) {\r\n            this._shade = value;\r\n            Core.inst?.manager?.ui?.refreshShade();\r\n        } else {\r\n            this._shade = value;\r\n        }\r\n    }\r\n\r\n    @property\r\n    private _blockInput = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否禁止点击事件向下层传递',\r\n        visible(this: BaseView) {\r\n            if (this.is3D()) return false;\r\n            return true;\r\n        }\r\n    })\r\n    protected get blockInput() {\r\n        if (this.is3D()) return false;\r\n        return this._blockInput;\r\n    }\r\n    protected set blockInput(value) {\r\n        if (value && this.is3D()) {\r\n            this.log('只有2D模式下才可以设置阻断点击事件');\r\n            return;\r\n        }\r\n        this._blockInput = value;\r\n    }\r\n\r\n    /**\r\n     * 子界面(只能用于Page)\r\n     */\r\n    protected miniViews: IMiniViewNames = [];\r\n\r\n    /**\r\n     * 当前view名字\r\n     */\r\n    public get viewName() {\r\n        return this._base_view_name;\r\n    }\r\n\r\n    /**\r\n     * 基础名字, 如PageHome => Home\r\n     */\r\n    public get baseName() {\r\n        return this._base_view_name.slice(this.typeName.length);\r\n    }\r\n\r\n    /**\r\n     * 类型名字, 如PageHome => Page\r\n     */\r\n    public get typeName() {\r\n        if (this._base_view_name.indexOf(ViewType.Paper) === 0) return ViewType.Paper;\r\n        if (this._base_view_name.indexOf(ViewType.Pop) === 0) return ViewType.Pop;\r\n        if (this._base_view_name.indexOf(ViewType.Top) === 0) return ViewType.Top;\r\n        return ViewType.Page;\r\n    }\r\n\r\n    /**\r\n     * 是否是单例模式\r\n     */\r\n    public get isSingleton(): boolean {\r\n        return this.singleton;\r\n    }\r\n\r\n    /**\r\n     * 是否捕获焦点\r\n     */\r\n    public get isCaptureFocus(): boolean {\r\n        return this.captureFocus;\r\n    }\r\n\r\n    /**\r\n     * 是否需要遮罩\r\n     */\r\n    public get isNeedShade(): boolean {\r\n        return this.shade;\r\n    }\r\n\r\n    /**\r\n     * 是否展示了(不为Hid状态)\r\n     */\r\n    public get isShow(): boolean {\r\n        return this._base_view_state != ViewState.Hid;\r\n    }\r\n\r\n    /**\r\n     * 是否show了某个子界面\r\n     */\r\n    protected isMiniViewShow(name: IMiniViewName) {\r\n        return this._base_mini_show.has(name);\r\n    }\r\n\r\n    // 用来初始化组件或节点的一些属性，当该组件被第一次添加到节点上或用户点击了它的 Reset 菜单时调用。这个回调只会在编辑器下调用。\r\n    resetInEditor(): any {\r\n        if (EDITOR) {\r\n            const is3D = this.is3D();\r\n            if (this.viewName.indexOf(ViewType.Page) >= 0) {\r\n                this.shade = false;\r\n                this.blockInput = is3D ? false : true;\r\n                this.captureFocus = is3D ? false : true;\r\n            } else if (this.viewName.indexOf(ViewType.Paper) >= 0) {\r\n                this.shade = false;\r\n                this.captureFocus = false;\r\n                this.blockInput = false;\r\n            }\r\n\r\n            if (is3D) return;\r\n            this.node.getComponent(UITransform) || this.node.addComponent(UITransform);\r\n\r\n            const widget = this.node.getComponent(Widget) || this.node.addComponent(Widget);\r\n            widget.isAlignBottom = true;\r\n            widget.isAlignLeft = true;\r\n            widget.isAlignRight = true;\r\n            widget.isAlignTop = true;\r\n            widget.top = 0;\r\n            widget.left = 0;\r\n            widget.right = 0;\r\n            widget.bottom = 0;\r\n            widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置是否可点击\r\n     */\r\n    protected setTouchEnabled(enabled: boolean = true): any {\r\n        this._base_touch_enable = !!enabled;\r\n    }\r\n\r\n    private blockPropagation(event: EventTouch) {\r\n        if (this.blockInput) {\r\n            event.propagationStopped = true;\r\n            if (event.type === Node.EventType.TOUCH_START) {\r\n                this.log('阻断触摸向下层传递');\r\n            }\r\n        }\r\n    }\r\n\r\n    private stopPropagation(event: EventTouch) {\r\n        if (!this._base_touch_enable) {\r\n            event.propagationStopped = true;\r\n            event.propagationImmediateStopped = true;\r\n            if (event.type === Node.EventType.TOUCH_START) {\r\n                this.log('屏蔽触摸');\r\n            }\r\n        }\r\n    }\r\n\r\n    private onBaseViewCreate(): any {\r\n        if (this.is3D()) return;\r\n        const uiTransform = this.getComponent(UITransform);\r\n        if (uiTransform) uiTransform.hitTest = (...args: any[]): boolean => {\r\n            if (this.blockInput) {\r\n                return UITransform.prototype.hitTest.apply(uiTransform, args);\r\n            }\r\n            return false;\r\n        };\r\n\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            this.node.on(BlockEvents[i], this.blockPropagation, this);\r\n            this.node.on(BlockEvents[i], this.stopPropagation, this, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭所有子界面\r\n     */\r\n    protected hideAllMiniViews(data?: any) {\r\n        this._base_mini_show.forEach((name) => {\r\n            Core.inst.manager.ui.hide({ name, data });\r\n        });\r\n        this._base_mini_show.clear();\r\n    }\r\n\r\n    /**\r\n     * 关闭子界面\r\n     */\r\n    protected hideMiniViews({ data, views }: { data?: any, views: IMiniViewNames }) {\r\n        if (this.miniViews.length === 0) return;\r\n        if (views.length === 0) return;\r\n\r\n        views.forEach(name => {\r\n            if (this.miniViews.indexOf(name) === -1) {\r\n                this.warn('hideMiniViews', `${name}不在miniViews中, 已跳过`);\r\n                return;\r\n            }\r\n\r\n            // 验证\r\n            if (!this._base_mini_show.has(name)) return;\r\n            // 关闭\r\n            Core.inst.manager.ui.hide({ name, data });\r\n        });\r\n        // TODO 手动刷新一下Paper下的UI顺序(原因是原生环境，显示层级正确但触摸层级可能会不正确)\r\n        Core.inst.manager.ui.sortUserInterface('Paper');\r\n    }\r\n\r\n    /**\r\n     * 展示子界面\r\n     */\r\n    protected showMiniViews({ data, views, onShow, onHide, onFinish }: {\r\n        /**传递给子界面的数据 */\r\n        data?: any,\r\n        /**子界面名字列表 */\r\n        views: Array<IMiniViewName | IMiniViewNames>,\r\n        /**子界面展示回调 */\r\n        onShow?: IMiniOnShow,\r\n        /**子界面关闭回调 */\r\n        onHide?: IMiniOnHide,\r\n        /**子界面融合完成回调 */\r\n        onFinish?: IMiniOnFinish\r\n    }) {\r\n        if (views.length === 0) return false;\r\n        if (this.typeName !== ViewType.Page) {\r\n            this.warn('showMiniViews', '仅支持Page类型');\r\n            return false;\r\n        }\r\n\r\n        const task = Core.inst.lib.task.createSync();\r\n\r\n        for (let index = 0; index < views.length; index++) {\r\n            const names = views[index];\r\n            if (names instanceof Array) {\r\n                task.add(next => {\r\n                    this.createMixMiniViewsTask(names, data, onShow, onHide).start(next);\r\n                });\r\n            } else {\r\n                task.add(next => {\r\n                    this.createMixMiniViewsTask([names], data, onShow, onHide).start(next);\r\n                });\r\n            }\r\n        }\r\n\r\n        task.start(onFinish && function () {\r\n            onFinish();\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 创建自定义加载任务\r\n     */\r\n    private createMixMiniViewsTask(views: IMiniViewNames = [], data?: any, onShow?: IMiniOnShow, onHide?: IMiniOnHide) {\r\n        const task = Core.inst.lib.task.createSync();\r\n\r\n        if (this.typeName !== ViewType.Page) {\r\n            this.warn('showMiniViews', '仅支持Page类型');\r\n            return task;\r\n        }\r\n\r\n        views = views.filter(name => {\r\n            if (!name) {\r\n                this.warn('showMiniViews', 'name不能为空');\r\n                return false;\r\n            }\r\n            if (this._base_mini_show.has(name)) {\r\n                this.warn('showMiniViews', `重复融合${name}, 已跳过`);\r\n                return false;\r\n            }\r\n            if (this.miniViews.indexOf(name) === -1) {\r\n                this.warn('showMiniViews', `${name}不在miniViews中, 已跳过`);\r\n                return false;\r\n            }\r\n            if (name.indexOf(this.baseName) !== ViewType.Paper.length && name.indexOf(ViewType.PaperAll) !== 0) {\r\n                this.warn('showMiniViews', `${name}不属于当前Page, 已跳过`);\r\n                return false;\r\n            }\r\n\r\n            this._base_mini_show.add(name);\r\n            return true;\r\n        });\r\n\r\n        if (views.length === 0) return task;\r\n\r\n        // 先load全部\r\n        task.add((next) => {\r\n            const aSync = Core.inst.lib.task.createASync();\r\n            views.forEach(name => {\r\n                aSync.add((next, retry) => {\r\n                    this.log(`下载子页面: ${name}`);\r\n                    Core.inst.manager.ui.load(name as any, result => {\r\n                        result ? next() : this.scheduleOnce(retry, 0.1);\r\n                    });\r\n                });\r\n            });\r\n            aSync.start(next);\r\n        });\r\n\r\n        // 再show全部\r\n        task.add((next) => {\r\n            const aSync = Core.inst.lib.task.createASync();\r\n            views.forEach(name => {\r\n                aSync.add((next) => {\r\n                    if (!this._base_mini_show?.has(name)) return next();\r\n\r\n                    this.log(`展示子页面: ${name}`);\r\n                    // 是PaperAll,设置owner\r\n                    if (BaseView.isPaperAll(name)) {\r\n                        PaperAllToOwner.set(name, this.uuid);\r\n                    }\r\n                    Core.inst.manager.ui.show({\r\n                        name, data,\r\n                        silent: true,\r\n                        attr: { zIndex: this.miniViews.indexOf(name) },\r\n                        onShow: (result) => {\r\n                            if (onShow) onShow(name, result);\r\n                            next();\r\n                        },\r\n                        onHide: (result) => {\r\n                            if (BaseView.isPaperAll(name)) {\r\n                                // 验证PaperAll是否属于当前Page\r\n                                const owner = PaperAllToOwner.get(name);\r\n                                if (owner && owner === this.uuid) {\r\n                                    PaperAllToOwner.delete(name);\r\n                                }\r\n                            }\r\n                            this._base_mini_show?.delete(name);\r\n                            if (onHide) onHide(name, result);\r\n                        },\r\n                        onError: (result, code) => {\r\n                            if (code === Core.inst.Manager.UI.ErrorCode.LoadError) return true;\r\n                            if (BaseView.isPaperAll(name)) {\r\n                                // 验证PaperAll是否属于当前Page\r\n                                const owner = PaperAllToOwner.get(name);\r\n                                if (owner && owner === this.uuid) {\r\n                                    PaperAllToOwner.delete(name);\r\n                                    Core.inst.manager.ui.hide({ name });\r\n                                }\r\n                            }\r\n                            this._base_mini_show?.delete(name);\r\n                            this.warn('忽略子页面', name, result);\r\n                            next();\r\n                        },\r\n                    });\r\n                });\r\n            });\r\n            aSync.start(() => {\r\n                // TODO 手动刷新一下Paper下的UI顺序(原因是原生环境，显示层级正确但触摸层级可能会不正确)\r\n                Core.inst.manager.ui.sortUserInterface('Paper');\r\n                next();\r\n            });\r\n        });\r\n\r\n        return task;\r\n    }\r\n\r\n    /**\r\n     * 设置节点属性\r\n     */\r\n    private setNodeAttr(attr: IShowParamAttr) {\r\n        if (!attr) return;\r\n        if (typeof attr.zIndex === 'number') {\r\n            // 以z坐标来代替2.x时代的zIndex\r\n            this.node.setPosition(this.node.position.x, this.node.position.y, attr.zIndex);\r\n        }\r\n\r\n        if (typeof attr.siblingIndex === 'number') {\r\n            this.node.setSiblingIndex(attr.siblingIndex);\r\n        }\r\n    }\r\n\r\n    private show(data?: any, attr?: IShowParamAttr, onShow?: IShowParamOnShow, onHide?: IShowParamOnHide, beforeShow?: IShowParamBeforeShow) {\r\n        // 当前show操作需要等待其它流程\r\n        if (this._base_view_state !== ViewState.Showed &&\r\n            this._base_view_state !== ViewState.Hid) {\r\n            this._base_show_hide_delays.push(\r\n                this.show.bind(this, data, attr, onShow, onHide, beforeShow)\r\n            );\r\n            return;\r\n        }\r\n\r\n        // show流程\r\n        const changeState = this._base_view_state === ViewState.Hid;\r\n        if (changeState) this._base_view_state = ViewState.BeforeShow;\r\n        const next = (error: string) => {\r\n            if (!error) {\r\n                // 所有Paper只会是单例，而且所有Paper都不允许被当前Page重复show\r\n                // 但PaprAll比较特殊，会被不同的Page使用，在PaperAll被不同的Page重复show时，清除之前的onHide\r\n                if (this.isPaperAll()) this.node.emit('onHide');\r\n            }\r\n            beforeShow && beforeShow(error);\r\n            if (!error) {\r\n                // 设置展示中\r\n                if (changeState) this._base_view_state = ViewState.Showing;\r\n                onHide && this.node.once('onHide', onHide);\r\n\r\n                // 触发onCreate\r\n                if (this._base_view_created === false) {\r\n                    this._base_view_created = true;\r\n                    this.onBaseViewCreate();\r\n                }\r\n\r\n                // 设置属性\r\n                this.setNodeAttr(attr);\r\n\r\n                // 触发onLoad、onEnable\r\n                if (this.node.active !== true) { this.node.active = true; }\r\n\r\n                this.log('onShow');\r\n                let result = null;\r\n                try {\r\n                    result = this.onShow(data);\r\n                } catch (err) {\r\n                    this.onError();\r\n                    console.error(err);\r\n                }\r\n\r\n                // 设置遮罩，触发focus逻辑\r\n                Core.inst.manager.ui.refreshShade();\r\n\r\n                try {\r\n                    onShow && onShow(result);\r\n                    this.node.emit('onShow', result);\r\n                    Core.inst.manager.ui.emit(this._base_view_name, { event: 'onShow', result: result });\r\n                    Core.inst.manager.ui.emit('onShow', { name: this._base_view_name, result: result });\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n\r\n                if (changeState) this._base_view_state = ViewState.Showed;\r\n            } else {\r\n                if (changeState) this._base_view_state = ViewState.Hid;\r\n            }\r\n\r\n            if (this._base_show_hide_delays.length > 0) {\r\n                this._base_show_hide_delays.shift()();\r\n            }\r\n        };\r\n\r\n        this.log('beforeShow');\r\n        let isNextCalled = false;\r\n        this.beforeShow((error) => {\r\n            if (isNextCalled) return this.error('beforeShow', 'next被重复调用');\r\n            isNextCalled = true;\r\n            next(error || null);\r\n        }, data);\r\n    }\r\n\r\n    protected hide(\r\n        //@ts-ignore\r\n        data?: Parameters<this['onHide']>[0],\r\n        onHide?: IHideParamOnHide) {\r\n\r\n        // 当前hide操作需要等待其它流程\r\n        if (this._base_view_state !== ViewState.Hid &&\r\n            this._base_view_state !== ViewState.Showed) {\r\n            this._base_show_hide_delays.push(\r\n                this.hide.bind(this, data, onHide)\r\n            );\r\n            return;\r\n        }\r\n\r\n        // hide流程\r\n        const changeState = this._base_view_state === ViewState.Showed;\r\n        if (changeState) this._base_view_state = ViewState.BeforeHide;\r\n        this.log('beforeHide');\r\n        const error = this.beforeHide(data);\r\n        if (!error) {\r\n            this.log('onHide');\r\n            if (changeState) this._base_view_state = ViewState.Hiding;\r\n            this.hideAllMiniViews(data);\r\n\r\n            let result = null;\r\n            try {\r\n                result = this.onHide(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n            try {\r\n                onHide && onHide(result);\r\n                this.node.emit('onHide', result);\r\n                Core.inst.manager.ui.emit(this._base_view_name, { event: 'onHide', result: result });\r\n                Core.inst.manager.ui.emit('onHide', { name: this._base_view_name, result: result });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n            if (changeState) this._base_view_state = ViewState.Hid;\r\n\r\n            if (this.hideEvent === HideEvent.active) { this.node.active = false; }\r\n            else if (this.hideEvent === HideEvent.destroy) { Core.inst.manager.ui.release(this); }\r\n            Core.inst.manager.ui.refreshShade();\r\n        } else {\r\n            if (changeState) this._base_view_state = ViewState.Showed;\r\n        }\r\n\r\n        if (this._base_show_hide_delays.length > 0) {\r\n            this._base_show_hide_delays.shift()();\r\n        }\r\n    }\r\n\r\n    private focus(boo: boolean): any {\r\n        let result = null;\r\n        let event = '';\r\n        if (boo) {\r\n            result = this.onFocus();\r\n            event = 'onFocus';\r\n        } else {\r\n            result = this.onLostFocus();\r\n            event = 'onLostFocus';\r\n        }\r\n\r\n        this.node.emit(event, result);\r\n        Core.inst.manager.ui.emit(this._base_view_name, { event: event, result: result });\r\n        Core.inst.manager.ui.emit(event, { name: this._base_view_name, result: result });\r\n    }\r\n\r\n    /**\r\n     * 加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * @param callback 回调\r\n     * this.loadRes('Bag', Prefab, function(asset){})\r\n     */\r\n    protected loadRes<T extends typeof Asset>(path: string, type: T, callback?: (result: InstanceType<T> | null) => any) {\r\n        Core.inst.manager.ui.loadRes(this, path, type, callback);\r\n    }\r\n\r\n    /**\r\n     * 预加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * this.preloadRes('Bag', Prefab)\r\n     */\r\n    protected preloadRes<T extends typeof Asset>(path: string, type: T) {\r\n        Core.inst.manager.ui.preloadRes(this, path, type);\r\n    }\r\n\r\n    /**\r\n     * 加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * @param callback 回调\r\n     * this.loadResDir('Bag', Prefab, function(asset){})\r\n     */\r\n    protected loadResDir<T extends typeof Asset>(path: string, type: T, callback?: (result: InstanceType<T>[] | null) => any) {\r\n        Core.inst.manager.ui.loadResDir(this, path, type, callback);\r\n    }\r\n\r\n    /**\r\n     * 预加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * this.preloadResDir('Bag', Prefab)\r\n     */\r\n    protected preloadResDir<T extends typeof Asset>(path: string, type: T) {\r\n        Core.inst.manager.ui.preloadResDir(this, path, type);\r\n    }\r\n\r\n    /**\r\n     * 设置字体资源\r\n     * @param path UI的resources目录下的相对路径\r\n     */\r\n    protected setFont(target: Label, path: string, onComplete?: (success: boolean) => any) {\r\n        this.loadRes(path, Font, (font) => {\r\n            if (!font || !isValid(target)) {\r\n                return onComplete && onComplete(false);\r\n            }\r\n            target.font = font;\r\n            onComplete && onComplete(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置Spine资源\r\n     * @param path UI的resources目录下的相对路径\r\n     */\r\n    protected setSpine(target: sp.Skeleton, path: string, onComplete?: (success: boolean) => any) {\r\n        this.loadRes(path, sp.SkeletonData, (skeletonData) => {\r\n            if (!skeletonData || !isValid(target)) {\r\n                return onComplete && onComplete(false);\r\n            }\r\n            target.skeletonData = skeletonData;\r\n            onComplete && onComplete(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置图片资源\r\n     * @param path UI的resources目录下的相对路径(必须以/spriteFrame结尾)\r\n     * \r\n     * @example\r\n     * setSprite(sprite, 'img/a/spriteFrame', onComplete:(succ)=>{})\r\n     */\r\n    protected setSprite(target: Sprite, path: string, onComplete?: (success: boolean) => any) {\r\n        this.loadRes(path, SpriteFrame, (spriteFrame) => {\r\n            if (!spriteFrame || !isValid(target)) {\r\n                return onComplete && onComplete(false);\r\n            }\r\n            target.spriteFrame = spriteFrame;\r\n            onComplete && onComplete(true);\r\n        });\r\n    }\r\n\r\n    /**打印日志 */\r\n    protected get log() {\r\n        return Logger.create('log', '#1e90ff', DEV ? `[${this._base_view_name}] LOG` : `[${this._base_view_name}] [LOG]`);\r\n    }\r\n\r\n    /**打印警告 */\r\n    protected get warn() {\r\n        return Logger.create('warn', '#ff7f50', DEV ? `[${this._base_view_name}] WARN` : `[${this._base_view_name}] [WARN]`);\r\n    }\r\n\r\n    /**打印错误 */\r\n    protected get error() {\r\n        return Logger.create('error', '#ff4757', DEV ? `[${this._base_view_name}] ERROR` : `[${this._base_view_name}] [ERROR]`);\r\n    }\r\n\r\n    //////////////以下为可重写//////////////\r\n    /**\r\n    * 展示\r\n    * @param data 传递给onShow的参数\r\n    * @returns \r\n    */\r\n    protected onShow(data?: any): any {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 隐藏\r\n     * @param data 传递给onHide的参数\r\n     * @returns \r\n     */\r\n    protected onHide(data?: any): any {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 失去焦点\r\n     * @returns \r\n     */\r\n    protected onLostFocus(): any {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获得焦点\r\n     * @returns \r\n     */\r\n    protected onFocus(): any {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * onShow前调用\r\n     * @param next 回调，传递的error不为空时，表示错误，onShow不会执行\r\n     * @param data 传递给onShow的参数\r\n     */\r\n    protected beforeShow(next: (error?: string) => void, data?: any): any {\r\n        next(null);\r\n    }\r\n\r\n    /**\r\n     * hide前调用\r\n     * @param data 传递给onHide的参数\r\n     * @returns 如果返回字符串，则表示错误信息\r\n     */\r\n    protected beforeHide(data?: any): string | void {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * onShow报错会执行\r\n     */\r\n    protected onError(): any {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 背景遮照的参数\r\n     */\r\n    protected onShade(): IShade {\r\n        return {};\r\n    }\r\n}","import { Component, Director, director, EventTarget, js } from 'cc';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport * as debug from './lib/debug/debug';\r\nimport logger from './lib/logger/logger';\r\nimport storage from './lib/storage/storage';\r\nimport task from './lib/task/task';\r\nimport EventManager from './manager/event/EventManager';\r\nimport LoaderManager from './manager/loader/LoaderManager';\r\nimport SoundManager from './manager/sound/SoundManager';\r\nimport TimerManager from './manager/timer/TimerManager';\r\nimport UIManager from './manager/ui/UIManager';\r\n\r\nenum EventType {\r\n    /**AppInit准备完毕 */\r\n    EVENT_APPINIT_FINISHED = 'EVENT_APPINIT_FINISHED',\r\n    /**系统Manager初始化完毕 */\r\n    EVENT_SYS_MANAGER_INITED = 'EVENT_SYS_MANAGER_INITED',\r\n    /**用户Manager初始化完毕 */\r\n    EVENT_USER_MANAGER_INITED = 'EVENT_USER_MANAGER_INITED',\r\n    /**所有Manager初始化完毕 */\r\n    EVENT_MANAGER_INITED = 'EVENT_MANAGER_INITED',\r\n    /**所有Manager准备完毕 */\r\n    EVENT_MANAGER_FINISHED = 'EVENT_MANAGER_FINISHED'\r\n}\r\n\r\ntype IData = { [key in string]: any };\r\ntype IConfig = { [key in string]: any };\r\ntype IStore = { [key in string]: any };\r\ntype ICtrl = { [key in string]: any };\r\n\r\ninterface ITypeofManager {\r\n    Loader: Omit<typeof LoaderManager, keyof Component>,\r\n    Event: Omit<typeof EventManager, keyof Component>,\r\n    Sound: Omit<typeof SoundManager, keyof Component>,\r\n    Timer: Omit<typeof TimerManager, keyof Component>,\r\n    UI: Omit<typeof UIManager, keyof Component>\r\n}\r\n\r\ninterface IManager {\r\n    loader: Omit<LoaderManager, keyof Component>,\r\n    event: Omit<EventManager, keyof Component>,\r\n    sound: Omit<SoundManager<any, any>, keyof Component>,\r\n    timer: Omit<TimerManager, keyof Component>,\r\n    ui: Omit<UIManager<any, any>, keyof Component>\r\n}\r\n\r\ninterface ICore {\r\n    data: IData,\r\n    config: IConfig,\r\n    store: IStore,\r\n    controller: ICtrl,\r\n    Controller: ICtrl,\r\n    manager: IManager,\r\n    Manager: ITypeofManager\r\n}\r\n\r\nconst Lib = { task, storage, debug, logger };\r\nconst Config = {};\r\nconst Data = {};\r\nconst Store = {};\r\nconst controller = {};\r\nconst Controller = {};\r\nconst Manager = {};\r\nconst manager = {};\r\n\r\nconst eventTarget = new EventTarget();\r\nlet EventMap = {};\r\n\r\ndirector.on(Director.EVENT_RESET, () => {\r\n    js.clear(Config);\r\n    js.clear(Data);\r\n    js.clear(Store);\r\n    js.clear(controller);\r\n    js.clear(Controller);\r\n    js.clear(Manager);\r\n    js.clear(manager);\r\n\r\n    EventMap = {};\r\n});\r\n\r\nexport default class Core<T extends ICore> {\r\n    static EventType = EventType;\r\n\r\n    protected static _inst: Core<ICore> | undefined;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new Core();\r\n        return this._inst;\r\n    }\r\n\r\n    lib = Lib;\r\n    config: T['config'] = null;\r\n    data: T['data'] = null;\r\n    store: T['store'] = null;\r\n    Controller: T['Controller'] = null;\r\n    controller: T['controller'] = null;\r\n    Manager: T['Manager'] = null;\r\n    manager: T['manager'] = null;\r\n\r\n    constructor() {\r\n        this.config = Config;\r\n        this.data = Data;\r\n        this.store = Store;\r\n        this.Controller = Controller;\r\n        this.controller = controller;\r\n        this.Manager = Manager as any;\r\n        this.manager = manager as any;\r\n        if (!EDITOR || DEV) {\r\n            if (this.constructor !== Core && !js.getClassById('App')) {\r\n                js.setClassAlias(this.constructor as any, 'App');\r\n            }\r\n        }\r\n    }\r\n\r\n    on(event: keyof typeof EventType, callback: (...any: any[]) => void, target?: any): any {\r\n        if (EventMap[event]) callback.call(target);\r\n        eventTarget.on(event, callback, target);\r\n    }\r\n\r\n    once(event: keyof typeof EventType, callback: Function, target?: any): any {\r\n        if (EventMap[event]) {\r\n            callback.call(target);\r\n        } else {\r\n            eventTarget.once(event, callback as any, target);\r\n        }\r\n    }\r\n\r\n    off(event: keyof typeof EventType, callback: (...any: any[]) => void, target?: any): any {\r\n        eventTarget.off(event, callback, target);\r\n    }\r\n\r\n    targetOff(target: any) {\r\n        eventTarget.targetOff(target);\r\n    }\r\n\r\n    /**\r\n     * 请不要手动调用\r\n     */\r\n    static emit(event: keyof typeof EventType, ...args: any[]): any {\r\n        EventMap[event] = true;\r\n        eventTarget.emit(event, ...args);\r\n    }\r\n}","import { DEBUG, DEV } from 'cc/env';\r\n\r\nfunction jsGetSet(obj: unknown, prop: string, getter: Function, setter?: Function) {\r\n    Object.defineProperty(obj, prop, {\r\n        get: getter as any,\r\n        set: setter as any,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n}\r\nfunction clear(object: Record<string | number, any>) {\r\n    if (!object) return;\r\n    for (const key of Object.keys(object)) {\r\n        delete object[key];\r\n    }\r\n}\r\n/**\r\n * 将某个变量设置为不可观测(不可在浏览器中打印)\r\n * @param owner object | string | number | boolean | Array | Function | ...\r\n * @param callback 被观测时触发回调\r\n * @returns \r\n */\r\nexport function unobservable(owner: unknown, callback?: Function) {\r\n    if (DEV || DEBUG) return;\r\n    if (!owner) return;\r\n    function define() {\r\n        function accessor() {\r\n            if (callback) {\r\n                callback();\r\n            } else {\r\n                clear(owner);\r\n            }\r\n        }\r\n        try {\r\n            jsGetSet(owner, 'unobservable', accessor.bind(null, 'de' + 'bu' + 'gg' + 'er'));\r\n        }\r\n        catch (e) { !0; }\r\n    }\r\n    define();\r\n}","import { EventTarget, _decorator } from 'cc';\r\nimport BaseManager from '../../base/BaseManager';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('EventManager')\r\nexport default class EventManager extends BaseManager {\r\n    private events: Map<string | number, EventTarget> = new Map();\r\n\r\n    clear() {\r\n        return this.events.clear();\r\n    }\r\n\r\n    delete(rootName: string | number) {\r\n        return this.events.delete(rootName);\r\n    }\r\n\r\n    get(rootName: string | number): EventTarget {\r\n        if (this.events.has(rootName)) {\r\n            return this.events.get(rootName);\r\n        }\r\n\r\n        const event = new EventTarget();\r\n        this.events.set(rootName, event);\r\n\r\n        return event;\r\n    }\r\n}\r\n","import { App } from './app';\r\n\r\n/**\r\n * ccc除物理引擎等外的基础功能已经准备好了\r\n */\r\nexport function cccReady(app: App) {\r\n\r\n}\r\n\r\n/**\r\n * ccc全部功能都初始化完毕了\r\n */\r\nexport function cccInited(app: App) {\r\n\r\n}\r\n\r\n/**\r\n * app除了用户自定义Manager未加载外，其它都已准备好了\r\n */\r\nexport function appReady(app: App) {\r\n\r\n}\r\n\r\n/**\r\n * app全部功能都初始化完毕了\r\n */\r\nexport function appInited(app: App) {\r\n\r\n}","import { _decorator, Component, EventTouch, Node, Vec2 } from \"cc\";\n\nconst { ccclass, property } = _decorator;\n@ccclass\nexport class JmClickComponent extends Component {\n    private performClick = false\n    private startPos: Vec2//记录Touch事件开始时的位置\n\n    onEnable() {\n        super.onEnable && super.onEnable();\n        this.node.on(Node.EventType.TOUCH_START, this.OnClickTouchEnd, this)\n        this.node.on(Node.EventType.TOUCH_MOVE, this.OnClickTouchEnd, this)\n        this.node.on(Node.EventType.TOUCH_END, this.OnClickTouchEnd, this)\n    }\n\n    onDisable() {\n        super.onDisable && super.onDisable();\n        this.node.off(Node.EventType.TOUCH_START, this.OnClickTouchEnd, this)\n        this.node.off(Node.EventType.TOUCH_MOVE, this.OnClickTouchEnd, this)\n        this.node.off(Node.EventType.TOUCH_END, this.OnClickTouchEnd, this)\n    }\n\n    onDestroy() {\n        super.onDestroy && super.onDestroy();\n    }\n\n    OnClickTouchEnd(event: EventTouch) {\n        switch (event.getType()) {\n            case Node.EventType.TOUCH_START:\n                // JmLobbyLog.Log(\"TOUCH_START\")\n                this.performClick = true\n                this.startPos = event.getLocation()\n                break\n            case Node.EventType.TOUCH_MOVE:\n                // JmLobbyLog.Log(\"TOUCH_MOVE\")\n                let pos = event.getLocation()\n                let dst: Vec2 = this.startPos.subtract(pos)\n                if (dst.length() > 5) {//有的机型就算没有移动也会直接调用一次TOUCH_MOVE事件，此处将小距离移动忽略不计\n                    this.performClick = false\n                }\n                break\n            case Node.EventType.TOUCH_END:\n                if (this.performClick) {\n                    this.onItemClick(this)\n                }\n                this.performClick = false\n                break\n        }\n    }\n\n    protected onItemClick(target:any) {\n    }\n\n}","import { Component, EventTouch, instantiate, Node, Prefab, ScrollView, UITransform, Vec2, _decorator } from \"cc\";\r\nimport JmRefreshFooter from \"./JmRefreshFooter\";\r\nimport { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\n//import JmLobbyLog from \"../util/JmLobbyLog\";\r\n\r\nconst { ccclass, property, menu, requireComponent } = _decorator;\r\n@ccclass()\r\n@requireComponent(ScrollView)\r\n@menu(\"UI 组件/JmHorizontalListView\")\r\nexport default class JmHorizontalListView extends Component {\r\n    @property(Prefab)\r\n    itemPrefab: Prefab = null\r\n\r\n    @property\r\n    itemWidth: number = 0\r\n\r\n    @property\r\n    spacing = 0\r\n    @property\r\n    leftOffset = 0\r\n    @property\r\n    rightOffset = 0\r\n\r\n    @property\r\n    pullLeftToLoadEnabled = false\r\n    @property\r\n    footerOffset = 0\r\n    private footerController: JmRefreshFooter\r\n    private onPullLeftToLoad: Function\r\n    private hasMore: boolean = true\r\n\r\n    scrollView: ScrollView\r\n    footer: Prefab\r\n    footerWidth = 100\r\n\r\n    private _touchStartX = 0\r\n    private _touchStartFromLeft = false\r\n\r\n    private footerHolderWidth = 0;//底部增加占位控件，防止item总高度不够时无法滑动View\r\n\r\n    private isUserTouched = false;\r\n    private loadingState: RefreshOrLoadState = RefreshOrLoadState.NONE\r\n\r\n    private componentName: string = \"JmListViewItem\"\r\n\r\n    private showingViews = new Map<number, any>()\r\n    private recycledViews = new Array<any>()\r\n    private itemViewDirty = new Map<number, boolean>()\r\n    private itemViewWidths = new Array<number>()\r\n\r\n    private _data = new Array<any>()\r\n\r\n    private _dirty = false//决定是否需要刷新ListView\r\n    private _sizeDirty = false\r\n    private _checkRight = false\r\n\r\n\r\n    protected onLoad() {\r\n        this.scrollView = this.node.getComponent(ScrollView)\r\n        //这里设定一下anchor值，后面的itemView位置计算都依赖anchor\r\n        this.scrollView.content.getComponent(UITransform).anchorX = 0\r\n        this.scrollView.content.getComponent(UITransform).anchorY = 0.5\r\n\r\n        // JmLobbyLoaderMgr.LoadAssetCfg(JmLobbyAssetsCfg.JmRefreshFooterHorizontal).then((footer: Prefab) => {\r\n        //     this.footer = footer\r\n        // })\r\n\r\n        // if (!this.scrollView.elastic && this.scrollView.bounceDuration > 0 && this.pullDownToRefreshEnabled) {\r\n        //     //需要启用scrollView的elastic才能过量滑动，引发下拉刷新，\r\n        //     //且bounceDuration回弹必须设为0秒立即回弹，否则在update中更新的content位置会被回弹动画覆盖\r\n        //     JmLobbyLog.Error(\"set elastic true or pullRefresh Events will not work!!\")\r\n        // }\r\n        // if (this.scrollView.cancelInnerEvents) {\r\n        //     //cancelInnerEvents设置为true会导致ItemView的cancel提前触发，影响下拉刷新判断\r\n        //     JmLobbyLog.Error(\"do not set cancelInnerEvent true, it'll effect Refresh Events!!\")\r\n        // }\r\n    }\r\n\r\n    protected onEnable() {\r\n        this.scrollView.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.scrollView.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        // JmLobbyLog.Log(\"onTouchStart\")\r\n        this.isUserTouched = true\r\n        this._touchStartX = event.getLocationX()\r\n        this._touchStartFromLeft = Math.floor(this.scrollView.getScrollOffset().x) <= 1//搞点容错率，有的机型的scrollOffset值不是很精确\r\n        // JmLobbyLog.Log(`isTop-->${this._touchStartFromTop}, startY-->${this._touchStartY}`)\r\n    }\r\n\r\n    onTouchMove(event: EventTouch) {\r\n        // let offsetY = event.getLocationY() - this._touchStartY\r\n        // JmLobbyLog.Log(\"getLocationY-->\" + event.getLocationY())\r\n        // if (this.isUserTouched) {//如果正在touch，则检测是否在释放时需要刷新\r\n        //     this.checkPullDownRefresh(offsetY)\r\n        // }\r\n    }\r\n\r\n    onTouchEnd() {\r\n        // JmLobbyLog.Log(\"onTouchEnd\")\r\n        // this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    onTouchCancel() {\r\n        // JmLobbyLog.Log(\"onTouchCancel\")\r\n        // this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    getData() {\r\n        return this._data\r\n    }\r\n\r\n    setData(data?: any) {\r\n        this._data = data\r\n    }\r\n\r\n    setComponentName(name: string) {\r\n        this.componentName = name\r\n    }\r\n\r\n    private updateSize() {\r\n        if (this.scrollView.vertical || !this.scrollView.horizontal) {\r\n            console.log(\"scroll orientation must set vertical in ListView!\")\r\n            return\r\n        }\r\n\r\n        // if (this.refreshState == RefreshOrLoadState.REFRESHING) {\r\n        //     height = height + 100\r\n        // }\r\n        this.scrollView.content.getComponent(UITransform).width = this.getNormalContentWidth()\r\n    }\r\n    getNormalContentWidth() {\r\n        let width = this.getContentWidth()\r\n        if (this.pullLeftToLoadEnabled) {\r\n            width += this.footerWidth\r\n        }\r\n        if (width < this.scrollView.node.getComponent(UITransform).width) {\r\n            this.footerHolderWidth = this.scrollView.node.getComponent(UITransform).width - width\r\n            width = this.scrollView.node.getComponent(UITransform).width\r\n        }\r\n        return width\r\n    }\r\n\r\n    private getContentWidth() {\r\n        return this.getItemPosOffset(this.getItemCount()) + this.leftOffset + this.rightOffset;\r\n    }\r\n\r\n    private getItemPosOffset(index: number) {\r\n        let sum = 0\r\n        for (let i = 0; i < index; i++) {\r\n            sum += this.getItemWidthWithSpacing(i)\r\n        }\r\n        return sum\r\n    }\r\n\r\n    private getItemWidthWithSpacing(index?: number) {\r\n        if (index != undefined) {\r\n            return (this.itemViewWidths[index] || this.itemWidth) + this.spacing\r\n        }\r\n        return this.itemWidth + this.spacing\r\n    }\r\n\r\n    private getListLeftRightVisiblePos() {\r\n        //scrollX的值从0开始到负的contentWidth\r\n        let scrollX = -this.scrollView.getScrollOffset().x\r\n        let width = this.scrollView.node.getComponent(UITransform).width\r\n        let leftVisibleX = scrollX\r\n        let rightVisibleX = scrollX + width\r\n        return [leftVisibleX, rightVisibleX]\r\n    }\r\n\r\n    /**\r\n     * 计算当前Item是否可见\r\n     * @param index\r\n     * @private\r\n     */\r\n    private isVisible(index: number) {\r\n        let [leftVisibleX, rightVisibleX] = this.getListLeftRightVisiblePos()\r\n\r\n        let itemLeftX = this.getItemPosOffset(index)\r\n        let itemRightX = itemLeftX + this.getItemWidthWithSpacing(index)\r\n\r\n        //item的底线或顶线可见即为item可见\r\n        return (itemLeftX >= leftVisibleX && itemLeftX <= rightVisibleX)\r\n            || (itemRightX >= leftVisibleX && itemRightX <= rightVisibleX)\r\n            //或者底线和顶线都在屏幕两侧外，即Item高度大于屏幕高度\r\n            || (itemLeftX <= leftVisibleX && itemRightX >= rightVisibleX)\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (this._dirty) { //标记为dirty时才做刷新处理\r\n            let data = this._data\r\n            for (let i = 0; i < this.getItemCount(); ++i) {\r\n                if (this.isVisible(i)) {//可见则初始化UI\r\n                    if (this.itemViewDirty.get(i)) {\r\n                        let child = this.getItemView(i)\r\n                        let component = child.getComponent(this.componentName)\r\n                        if (component == null) {\r\n                            throw \"ERROR! item view must implements\" + this.componentName + \" component!!\"\r\n                        }\r\n                        component.updateItem(i, data[i], this)\r\n                        //记录updateItem之后的高度便于后面的计算\r\n                        if (this.itemViewWidths[i] == undefined) {\r\n                            this.itemViewWidths[i] = component.getItemWidth() || this.itemWidth\r\n                        }\r\n                        let x = this.getItemPosOffset(i) + this.getItemWidthWithSpacing(i) * child.anchorX + this.leftOffset\r\n                        // console.log(\"TestV-----------index-->\" + i, \"yPos--->\" + y, \"height-->\" + this.itemViewHeights)\r\n                        child.setPosition(x, 0)\r\n                        this._sizeDirty = true\r\n\r\n                        this.itemViewDirty.set(i, false);\r\n                        // JmLobbyLog.Log(\"clear item view dirty-->\" + i)\r\n                        if (child.parent == null) {\r\n                            this.scrollView.content.addChild(child)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //遍历showingViews, 不可见则回收\r\n            this.showingViews.forEach((child: Node, index: number) => {\r\n                if (!this.isVisible(index) || this._data == null || this._data[index] == null) {\r\n                    // JmLobbyLog.Log(\"not visible, index = \" + index + \", child is\" + child)\r\n                    if (child != null) {\r\n                        this.recycleChild(index, child)\r\n                    }\r\n                }\r\n            })\r\n\r\n            this.checkFooterView()\r\n            // JmLobbyLog.Log(\"total Items:\" + this._data.length)\r\n            this._dirty = false\r\n        }\r\n        if (this._sizeDirty) {\r\n\r\n            let isRight = false\r\n            if (this._checkRight) {\r\n                isRight = this.isRight()\r\n            }\r\n            this.updateSize()\r\n            if (isRight) {\r\n                this.scrollView.scrollToOffset(new Vec2(this.scrollView.getMaxScrollOffset().x, 0))\r\n                this._dirty = true//scroll之后需要再次刷新，否则有可能不显示部分ItemView\r\n            }\r\n            this._sizeDirty = false\r\n        }\r\n    }\r\n\r\n    //addOrUpdateFooterView\r\n    private checkFooterView() {\r\n        if (this.footerController == null) {\r\n            if (this.footer != null && this.pullLeftToLoadEnabled) {\r\n                // JmLobbyLog.Log(\"addFooter\")\r\n                let footerView = instantiate(this.footer)\r\n                let component = footerView.getComponent<JmRefreshFooter>(JmRefreshFooter)\r\n                this.footerController = component\r\n                this.scrollView.content.addChild(footerView)\r\n                component.setState(RefreshOrLoadState.NONE)\r\n            }\r\n        }\r\n        if (this.footerController != null) {\r\n            let viewBottomY = -this.getContentWidth() - this.footerWidth / 2\r\n            let contentBottomY = -this.scrollView.content.getComponent(UITransform).width + this.footerWidth / 2 + this.footerOffset\r\n            this.footerController.node.setPosition(Math.min(viewBottomY, contentBottomY), 0)\r\n        }\r\n    }\r\n\r\n    private recycleChild(index: number, child: Node) {\r\n        child.removeFromParent()\r\n        this.showingViews.delete(index)\r\n        this.recycledViews.push(child)\r\n        this.itemViewDirty.set(index, true);\r\n    }\r\n\r\n    private getItemCount() {\r\n        return this._data ? this._data.length : 0\r\n    }\r\n\r\n    private getItemView(index: number) {\r\n        let itemView = this.showingViews.get(index)\r\n        if (itemView == null) {\r\n            this.itemViewDirty.set(index, true);\r\n        }\r\n        if (itemView == null) {\r\n            itemView = this.recycledViews.pop()\r\n        }\r\n        if (itemView == null) {\r\n            this.itemViewDirty.set(index, true);\r\n            itemView = instantiate(this.itemPrefab)\r\n        }\r\n        this.showingViews.set(index, itemView)\r\n        return itemView\r\n    }\r\n\r\n\r\n    onScrollEvent(sender: any, event: any) {\r\n        switch (event) {\r\n            case ScrollView.EventType.SCROLLING:\r\n                this.startPullLeftLoad()\r\n                this._dirty = true\r\n                break\r\n            default:\r\n                // JmLobbyLog.Log(\"event-->\" + event)\r\n                break\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 标记所有的Item需要刷新\r\n     */\r\n    private markChildrenDirty() {\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            this.itemViewDirty.set(i, true);\r\n        }\r\n    }\r\n\r\n    private isRight() {\r\n        return this.scrollView.getScrollOffset().x >= this.scrollView.getMaxScrollOffset().x\r\n    }\r\n\r\n    /**\r\n     * 刷新所有Item\r\n     * @param checkRight 是否检查使ListView保持在底部\r\n     *\r\n     * fixme 有个bug：如果刚初始化页面时就调用notifyChange且数据量大于了一页的展示数量，会导致页面无法滑动；目前的处理方式是如果非要调就延迟0.1秒调用，后续有时间再修复下\r\n     */\r\n    notifyChange(checkRight?: boolean) {\r\n        // if (this.getItemCount() == 0) {\r\n        //     if (this.emptyView) {\r\n        //         this.emptyView.active = true\r\n        //         if (JmNative.GetNetWorkState() == sys.NetworkType.NONE && this.noNetworkImg) {\r\n        //             this.emptyPic.spriteFrame = this.noNetworkImg\r\n        //         } else if (this.emptyImg) {\r\n        //             this.emptyPic.spriteFrame = this.emptyImg\r\n        //         }\r\n        //     }\r\n        // } else {\r\n        //     if (this.emptyView) {\r\n        //         this.emptyView.active = false\r\n        //     }\r\n        this._sizeDirty = true\r\n        this._checkRight = checkRight\r\n        this.markChildrenDirty()\r\n        // }\r\n        this._dirty = true\r\n    }\r\n\r\n    /**\r\n     * 刷新单个Item\r\n     */\r\n    notifyItemChange(index: number) {\r\n        this.itemViewDirty.set(index, true);\r\n        this._dirty = true\r\n    }\r\n\r\n    updateHeight(index: number, height: number) {\r\n        this.itemViewWidths[index] = height\r\n        this.notifyChange()\r\n    }\r\n\r\n    /**\r\n     * 设置上拉加载更多数据回调，在回调中加载数据，并在完成后调用{@link JmListView#onLoadComplete()}\r\n     */\r\n    setPullLeftToLoadListener(listener: Function) {\r\n        this.onPullLeftToLoad = listener\r\n    }\r\n\r\n    private startPullLeftLoad() {\r\n        // JmLobbyLog.Log(\"startPullUpLoad\", this.refreshState, this.loadingState)\r\n        if (this.pullLeftToLoadEnabled && this.hasMore && this.loadingState != RefreshOrLoadState.REFRESHING && !this.isUserTouched) {\r\n            let [offset, maxOffset] = [this.scrollView.getScrollOffset().y, this.scrollView.getMaxScrollOffset().y]\r\n            //有的机型offset值不是很准确，这里搞点容错率\r\n            if (Math.ceil(offset) >= Math.floor(maxOffset)) {\r\n                // JmLobbyLog.Log(\"PullUpToLoad\")\r\n                this.updateLoadingState(RefreshOrLoadState.REFRESHING)\r\n                if (this.onPullLeftToLoad) {\r\n                    this.onPullLeftToLoad()\r\n                }\r\n\r\n                /**测试：延时刷新完成返回，并添加测试数据*/\r\n                // this.scheduleOnce(() => {\r\n                //     if (this._data.length > 0) {\r\n                //         this._data.push(this._data[0])\r\n                //     }\r\n                //     this.onLoadComplete(true)\r\n                // }, 2)\r\n            } else {\r\n                // JmLobbyLog.Log(\"offset--->\" + offset, \"maxOffset-->\" + maxOffset)\r\n            }\r\n        }\r\n    }\r\n\r\n    onLoadComplete(hasMore: boolean = true) {\r\n        this.hasMore = hasMore\r\n        if (hasMore) {\r\n            this.updateLoadingState(RefreshOrLoadState.NONE)\r\n        } else {\r\n            this.updateLoadingState(RefreshOrLoadState.COMPLETE)\r\n        }\r\n        // JmLobbyLog.Log(\"loading done\")\r\n        this.notifyChange()\r\n    }\r\n\r\n    private updateLoadingState(state: RefreshOrLoadState) {\r\n        if (this.loadingState != state) {\r\n            this.loadingState = state\r\n            this.onLoadingStateChange(state)\r\n        }\r\n    }\r\n\r\n    private onLoadingStateChange(newState: RefreshOrLoadState) {\r\n        // JmLobbyLog.Log(\"onLoadingStateChange-->\" + this.loadingState)\r\n        this.footerController && this.footerController.setState(newState)\r\n    }\r\n}","import JmRefreshHeader from \"./JmRefreshHeader\";\r\nimport JmRefreshFooter from \"./JmRefreshFooter\";\r\nimport { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\nimport { _decorator, Component, Node, UITransform, Prefab, Sprite, SpriteFrame, ScrollView, Vec2, instantiate, sys, EventTouch } from 'cc';\r\nimport BaseView from \"db://app/base/BaseView\";\r\n// import { sysDefine } from \"./sysDefine\";\r\n// import { AssetsCfg } from \"./AssetsCfg\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('JmListView')\r\n//@requireComponent(ScrollView)\r\n//@menu(\"UI 组件/JmListView\")\r\nexport default class JmListView extends BaseView {\r\n    @property(Prefab)\r\n    itemPrefab: Prefab = null\r\n\r\n    @property\r\n    itemHeight: number = 0\r\n    @property(Node)\r\n    emptyView: Node = null\r\n    @property(Sprite)\r\n    emptyPic: Sprite = null\r\n    @property(SpriteFrame)\r\n    noNetworkImg: SpriteFrame = null\r\n    @property(SpriteFrame)\r\n    emptyImg: SpriteFrame = null\r\n\r\n    @property\r\n    spacing = 0\r\n    @property\r\n    topMargin = 0\r\n    @property\r\n    bottomMargin = 0\r\n\r\n    @property\r\n    pullDownToRefreshEnabled = false\r\n    private headerController: JmRefreshHeader\r\n    private onPullDownToRefresh: Function\r\n\r\n    @property\r\n    pullUpToLoadEnabled = false\r\n    @property\r\n    footerOffset = 0\r\n    @property\r\n    refreshFooterShow = true\r\n    private footerController: JmRefreshFooter\r\n    private onPullUpToLoad: Function\r\n    private hasMore: boolean = true\r\n\r\n    scrollView: ScrollView\r\n    header: Prefab;\r\n    headerHeight = 300\r\n    footer: Prefab;\r\n    footerHeight = 250\r\n\r\n    private _touchStartY = 0\r\n    private _touchStartFromTop = false\r\n\r\n    //下拉刷新和上拉加载的状态\r\n    private isUserTouched = false;\r\n    private refreshState: RefreshOrLoadState = RefreshOrLoadState.NONE\r\n    private loadingState: RefreshOrLoadState = RefreshOrLoadState.NONE\r\n\r\n    private componentName: string = \"JmListViewItem\"\r\n\r\n    private footerHolderHeight = 0;//底部增加占位控件，防止item总高度不够时无法滑动View\r\n\r\n    private showingViews = new Map<number, any>()\r\n    private recycledViews = new Array<any>()\r\n    private itemViewDirty = new Map<number, boolean>()//每个子View是否需要刷新\r\n    private itemViewHeights = new Array<number>()//每个子View的高度\r\n\r\n    private _data = new Array<any>()\r\n\r\n    private _dirty = false//决定是否需要刷新ListView的外层开关\r\n    private _sizeDirty = false//决定是否要更新ListView的content大小\r\n    private _checkBottom = false\r\n\r\n    private extraData: any = {}\r\n\r\n    protected onLoad() {\r\n        this.scrollView = this.node.getComponent(ScrollView)\r\n        //启用相关控件时才加载prefab，减少内存占用\r\n        //if (this.pullDownToRefreshEnabled) {\r\n            // JmLobbyLoaderMgr.LoadAssetCfg(HoldOnAssetsCfg.HoldOnRefreshHeader).then((header: Prefab) => {\r\n            //     this.header = header\r\n            // })\r\n            // Jm.AssetManager.loadResInBundle(SysDefine.bundleName, HoldOnAssetsCfg.HoldOnRefreshHeader, function (err, header) {\r\n            //     this.header = header\r\n            // })\r\n        //}\r\n        //if (this.pullUpToLoadEnabled && this.refreshFooterShow) {\r\n            // JmLobbyLoaderMgr.LoadAssetCfg(HoldOnAssetsCfg.HoldOnRefreshFooter).then((footer: Prefab) => {\r\n            //     this.footer = footer\r\n            // })\r\n            // let self = this\r\n            // let self1 = this.footer\r\n            // Jm.AssetManager.loadResInBundle(sysDefine.bundleName, AssetsCfg.RefreshFooter, function (err, footer: Prefab) {\r\n            //     self.footer = footer\r\n            // })\r\n        //}\r\n\r\n        if (!this.scrollView.elastic && this.scrollView.bounceDuration > 0 && this.pullDownToRefreshEnabled) {\r\n            //需要启用scrollView的elastic才能过量滑动，引发下拉刷新，\r\n            //且bounceDuration回弹必须设为0秒立即回弹，否则在update中更新的content位置会被回弹动画覆盖\r\n            console.log(\"set elastic true or pullRefresh Events will not work!!\")\r\n        }\r\n        if (this.scrollView.cancelInnerEvents) {\r\n            //cancelInnerEvents设置为true会导致ItemView的cancel提前触发，影响下拉刷新判断\r\n            // JmLobbyLog.Error(\"do not set cancelInnerEvent true, it'll effect Refresh Events!!\")\r\n            this.scrollView.cancelInnerEvents = false\r\n        }\r\n    }\r\n\r\n    protected onEnable() {\r\n        this.scrollView.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.scrollView.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        // Util.ReleaseAsset(this.itemPrefab);\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        // JmLobbyLog.console.log(\"onTouchStart\")\r\n        this.isUserTouched = true\r\n        this._touchStartY = event.getLocationY()\r\n        this._touchStartFromTop = Math.floor(this.scrollView.getScrollOffset().y) <= 1//搞点容错率，有的机型的scrollOffset值不是很精确\r\n\r\n        // JmLobbyLog.console.log(`isTop-->${this._touchStartFromTop}, startY-->${this._touchStartY}`)\r\n    }\r\n\r\n    onTouchMove(event: EventTouch) {\r\n        if (!this.pullDownToRefreshEnabled) return\r\n        let offsetY = event.getLocationY() - this._touchStartY\r\n        // JmLobbyLog.console.log(\"getLocationY-->\" + event.getLocationY())\r\n        if (this.isUserTouched) {//如果正在touch，则检测是否在释放时需要刷新\r\n            this.checkPullDownRefresh(offsetY)\r\n            this.headerController && this.headerController.onScrollOffset(offsetY)\r\n        }\r\n    }\r\n\r\n    onTouchEnd() {\r\n        // JmLobbyLog.console.log(\"onTouchEnd\")\r\n        this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    onTouchCancel() {\r\n        // JmLobbyLog.console.log(\"onTouchCancel\")\r\n        this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    getData() {\r\n        return this._data || []\r\n    }\r\n\r\n    setData(data?: any) {\r\n        this._data = data\r\n    }\r\n\r\n    private updateSize() {\r\n        if (this.scrollView.horizontal || !this.scrollView.vertical) {\r\n            console.log(\"scroll orientation must set vertical in ListView!\")\r\n            return\r\n        }\r\n\r\n        // if (this.refreshState == RefreshOrLoadState.REFRESHING) {\r\n        //     height = height + 100\r\n        // }\r\n        let height = this.scrollView.content.getComponent(UITransform).height\r\n        let newHeight = this.getNormalContentHeight()\r\n        this.scrollView.content.getComponent(UITransform).height = newHeight\r\n        if (height > newHeight) {\r\n            this.notifyChange()\r\n        }\r\n    }\r\n\r\n    getNormalContentHeight() {\r\n        let height = this.getContentHeight()// get total content height\r\n        // console.log(\"contentHeight-->\", height, this.getItemCount())\r\n        if (this.pullUpToLoadEnabled && this.refreshFooterShow) {\r\n            height = height + this.footerHeight\r\n        }\r\n        if (height < this.scrollView.node.getComponent(UITransform).height) {\r\n            this.footerHolderHeight = this.scrollView.node.getComponent(UITransform).height - height\r\n            //将View的大小最小设置为整个View的大小，可能是由于底层原因 小于这个值会在没有填满布局时无法触发滑动\r\n            height = this.scrollView.node.getComponent(UITransform).height\r\n        }\r\n        return height\r\n    }\r\n\r\n    /**\r\n     * 设置Item类的子类实现类名\r\n     */\r\n    setComponentName(name: string) {\r\n        this.componentName = name\r\n    }\r\n\r\n    setTopMargin(num: number) {\r\n        this.topMargin = num\r\n    }\r\n\r\n    getContentHeight() {\r\n        return this.getItemPosOffset(this.getItemCount()) + this.topMargin + this.bottomMargin;\r\n    }\r\n\r\n    private getItemPosOffset(index: number) {\r\n        let sum = 0\r\n        for (let i = 0; i < index; i++) {\r\n            sum += this.getItemHeightWithSpacing(i)\r\n        }\r\n        return sum\r\n    }\r\n\r\n    /**\r\n     * 根据index返回item占高\r\n     */\r\n    private getItemHeightWithSpacing(index?: number) {\r\n        if (index != undefined) {\r\n            return (this.itemViewHeights[index] || this.itemHeight) + this.spacing\r\n        }\r\n        return this.itemHeight + this.spacing\r\n    }\r\n\r\n    private getListTopBottomVisiblePos() {\r\n        //scrollY的值是从 最顶部(scrollView.node.getComponent(UITransform).height/2) ~ 最底部(scrollView.content.height - scrollView.node.getComponent(UITransform).height/2)\r\n        let scrollY = this.scrollView.content.position.y\r\n        let halfHeight = this.scrollView.node.getComponent(UITransform).height / 2\r\n        let topVisibleY = scrollY - halfHeight\r\n        let bottomVisibleY = scrollY + halfHeight\r\n        bottomVisibleY += this.headerHeight//下拉刷新时先刷新再回弹，导致底部高度为headerHeight的部分不会被显示出来\r\n        return [topVisibleY, bottomVisibleY]\r\n    }\r\n\r\n    /**\r\n     * 计算当前Item是否可见\r\n     * @param index\r\n     * @private\r\n     */\r\n    private isVisible(index: number) {\r\n        let [topVisibleY, bottomVisibleY] = this.getListTopBottomVisiblePos()\r\n\r\n        let itemTopY = this.getItemPosOffset(index) + this.topMargin\r\n        let itemBottomY = itemTopY + this.getItemHeightWithSpacing(index)\r\n\r\n        //item的底线或顶线可见即为item可见\r\n        return (itemTopY >= topVisibleY && itemTopY <= bottomVisibleY)\r\n            || (itemBottomY >= topVisibleY && itemBottomY <= bottomVisibleY)\r\n            //或者底线和顶线都在屏幕两侧外，即Item高度大于屏幕高度\r\n            || (itemTopY <= topVisibleY && itemBottomY >= bottomVisibleY)\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (this.pullDownToRefreshEnabled && this.refreshState == RefreshOrLoadState.REFRESHING) {\r\n            //this.scrollView.content.position.y = this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight\r\n            this.scrollView.content.setPosition(this.scrollView.node.getComponent(UITransform).width / 2, this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight)\r\n        }\r\n        if (this._dirty) { //标记为dirty时才做刷新处理\r\n            let data = this._data\r\n            for (let i = 0; i < this.getItemCount(); ++i) {\r\n                if (this.isVisible(i)) {//可见则初始化UI\r\n                    if (this.itemViewDirty.get(i)) {\r\n                        let child = this.getItemView(i)\r\n                        if (child == null) {\r\n                            console.log(`JmListView Child Is Null! ${this.componentName}`)\r\n                            return;\r\n                        }\r\n                        let component = child.getComponent(this.componentName)\r\n                        if (component == null) {\r\n                            throw \"ERROR! item view must implements\" + this.componentName + \" component!!\"\r\n                        }\r\n                        component.updateItem(i, data[i], this)\r\n                        //记录updateItem之后的高度便于后面的计算\r\n                        if (this.itemViewHeights[i] == undefined) {\r\n                            this.itemViewHeights[i] = this.itemHeight//component.getItemHeight() || this.itemHeight\r\n                        }\r\n                        let y = -this.getItemPosOffset(i) - this.getItemHeightWithSpacing(i) * (1 - child.getComponent(UITransform).anchorY) - this.topMargin\r\n                        // console.log(\"TestV-----------index-->\" + i, \"yPos--->\" + y, \"height-->\" + this.itemViewHeights)\r\n                        child.setPosition(0, y)\r\n                        this._sizeDirty = true\r\n\r\n                        this.itemViewDirty.set(i, false);\r\n                        // JmLobbyLog.console.log(\"clear item view dirty-->\" + i)\r\n                        if (child.parent == null) {\r\n                            this.scrollView.content.addChild(child)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //遍历showingViews, 不可见则回收\r\n            this.showingViews.forEach((child: Node, index: number) => {\r\n                if (!this.isVisible(index) || this._data == null || (this._data.length - 1) < index) {\r\n                    // JmLobbyLog.console.log(\"not visible, index = \" + index + \", child is\" + child)\r\n                    if (child != null) {\r\n                        this.recycleChild(index, child)\r\n                    }\r\n                }\r\n            })\r\n\r\n            this.checkHeaderView()\r\n            this.checkFooterView()\r\n            // JmLobbyLog.console.log(\"total Items:\" + this._data.length)\r\n            this._dirty = false\r\n        }\r\n        if (this._sizeDirty) {\r\n\r\n            let isBottom = false\r\n            if (this._checkBottom) {\r\n                isBottom = this.isBottom()\r\n            }\r\n            this.updateSize()\r\n            if (isBottom) {\r\n                this.scrollView.scrollToOffset(new Vec2(0, this.scrollView.getMaxScrollOffset().y))\r\n                this._dirty = true//scroll之后需要再次刷新，否则有可能不显示部分ItemView\r\n            }\r\n            this._sizeDirty = false\r\n        }\r\n    }\r\n\r\n    //addOrUpdateHeaderView\r\n    private checkHeaderView() {\r\n        if (this.headerController == null) {\r\n            if (this.header != null && this.pullDownToRefreshEnabled) {\r\n                // JmLobbyLog.console.log(\"addHeader\")\r\n                let headerView = instantiate(this.header)\r\n                headerView.setPosition(0, this.headerHeight / 2 - this.topMargin)\r\n                this.scrollView.content.addChild(headerView)\r\n                let component = headerView.getComponent<JmRefreshHeader>(JmRefreshHeader)\r\n                component.setState(this.refreshState)\r\n                this.headerController = component\r\n            }\r\n        }\r\n    }\r\n\r\n    //addOrUpdateFooterView\r\n    private checkFooterView() {\r\n        if (this.footerController == null) {\r\n            if (this.footer != null && this.pullUpToLoadEnabled) {\r\n                // JmLobbyLog.console.log(\"addFooter\")\r\n                let footerView = instantiate(this.footer)\r\n                this.scrollView.content.addChild(footerView)\r\n                let component = footerView.getComponent<JmRefreshFooter>(JmRefreshFooter)\r\n                component.setState(RefreshOrLoadState.NONE)\r\n                this.footerController = component\r\n            }\r\n        }\r\n        if (this.footerController != null) {\r\n            let viewBottomY = -this.getContentHeight() - this.footerHeight / 2\r\n            let contentBottomY = -this.scrollView.content.getComponent(UITransform).height + this.footerHeight / 2 + this.footerOffset\r\n            this.footerController.node.setPosition(0, Math.min(viewBottomY, contentBottomY) + this.bottomMargin)\r\n        }\r\n    }\r\n\r\n    private recycleChild(index: number, child: Node) {\r\n        child.removeFromParent()\r\n        this.showingViews.delete(index)\r\n        this.recycledViews.push(child)\r\n        this.itemViewDirty.set(index, true);\r\n    }\r\n\r\n    private getItemCount() {\r\n        return this._data ? this._data.length : 0\r\n    }\r\n\r\n    private getItemView(index: number) {\r\n        let itemView = this.showingViews.get(index)\r\n        if (itemView != null) {\r\n            // JmLobbyLog.console.log(\"getFromShowingViews-->\" + index)\r\n        } else {\r\n            // JmLobbyLog.console.log(\"mark item view dirty-->\" + index)\r\n            this.itemViewDirty.set(index, true);\r\n        }\r\n        if (itemView == null) {\r\n            itemView = this.recycledViews.pop()\r\n        }\r\n        if (itemView == null) {\r\n            itemView = instantiate(this.itemPrefab)\r\n            this.itemViewDirty.set(index, true);\r\n        }\r\n        this.showingViews.set(index, itemView)\r\n        return itemView\r\n    }\r\n    onScrollEvent(sender: any, event: any) {\r\n        // if (event == ScrollView.EventType.SCROLLING) {\r\n        if (event == 4) {\r\n            if (this.pullUpToLoadEnabled) {\r\n                this.checkPullUpLoad()\r\n            }\r\n            this._dirty = true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 标记所有的Item需要刷新\r\n     */\r\n    private markChildrenDirty() {\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            this.itemViewDirty.set(i, true);\r\n        }\r\n    }\r\n\r\n    private isBottom() {\r\n        return this.scrollView.getScrollOffset().y >= this.scrollView.getMaxScrollOffset().y\r\n    }\r\n\r\n    /**\r\n     * 刷新所有Item\r\n     * @param checkBottom 是否检查使ListView保持在底部\r\n     *\r\n     * fixme 有个bug：如果刚初始化页面时就调用notifyChange且数据量大于了一页的展示数量，会导致页面无法滑动；目前的处理方式是如果非要调就延迟0.1秒调用，后续有时间再修复下\r\n     */\r\n    notifyChange(checkBottom?: boolean) {\r\n        if (this.getItemCount() == 0) {\r\n            if (this.emptyView) {\r\n                this.emptyView.active = true\r\n                if (sys.getNetworkType() == sys.NetworkType.NONE && this.noNetworkImg) {\r\n                    this.emptyPic.spriteFrame = this.noNetworkImg\r\n                } else if (this.emptyImg) {\r\n                    this.emptyPic.spriteFrame = this.emptyImg\r\n                }\r\n                this.updateLoadingState(RefreshOrLoadState.NONE)\r\n            }\r\n        } else {\r\n            if (this.emptyView) {\r\n                this.emptyView.active = false\r\n            }\r\n            this._sizeDirty = true\r\n            this._checkBottom = checkBottom\r\n            this.markChildrenDirty()\r\n        }\r\n        this._dirty = true\r\n    }\r\n\r\n    /**\r\n     * 刷新单个Item\r\n     */\r\n    notifyItemChange(index: number) {\r\n        this.itemViewDirty.set(index, true);\r\n        this._dirty = true\r\n    }\r\n\r\n    updateHeight(index: number, height: number) {\r\n        this.itemViewHeights[index] = height\r\n        this.notifyChange()\r\n    }\r\n\r\n    /**\r\n     * 设置上拉加载更多数据回调，在回调中加载数据，并在完成后调用{@link JmListView#onLoadComplete()}\r\n     */\r\n    setPullUpToLoadListener(listener: Function) {\r\n        this.onPullUpToLoad = listener\r\n    }\r\n\r\n    /**\r\n     * 设置下拉刷新数据回调，在回调中加载数据，并在完成后调用{@link JmListView#onRefreshComplete()}\r\n     */\r\n    setPullDownToRefreshListener(listener: Function) {\r\n        this.onPullDownToRefresh = listener\r\n    }\r\n\r\n    private checkPullDownRefresh(offsetY: number) {\r\n        if (this.pullDownToRefreshEnabled && this.refreshState != RefreshOrLoadState.REFRESHING && this.loadingState != RefreshOrLoadState.REFRESHING) {\r\n            if (this._touchStartFromTop && offsetY < -this.headerHeight * 1.5) {\r\n                this.updateRefreshState(RefreshOrLoadState.READY_TO_REFRESH)\r\n            } else {\r\n                this.updateRefreshState(RefreshOrLoadState.NONE)\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkPullUpLoad() {\r\n        // JmLobbyLog.console.log(\"checkPullUpLoad\", this.refreshState, this.loadingState)\r\n        if (this.pullUpToLoadEnabled && this.hasMore && this.loadingState != RefreshOrLoadState.REFRESHING && this.refreshState != RefreshOrLoadState.REFRESHING && !this.isUserTouched) {\r\n            let [offset, maxOffset] = [this.scrollView.getScrollOffset().y, this.scrollView.getMaxScrollOffset().y]\r\n            //有的机型offset值不是很准确，这里搞点容错率\r\n            if (Math.ceil(offset) >= Math.floor(maxOffset)) {\r\n                // JmLobbyLog.console.log(\"PullUpToLoad\")\r\n                this.updateLoadingState(RefreshOrLoadState.REFRESHING)\r\n                if (this.onPullUpToLoad) {\r\n                    this.onPullUpToLoad()\r\n                }\r\n\r\n                /**测试：延时刷新完成返回，并添加测试数据*/\r\n                // this.scheduleOnce(() => {\r\n                //     if (this._data.length > 0) {\r\n                //         this._data.push(this._data[0])\r\n                //     }\r\n                //     this.onLoadComplete(true)\r\n                // }, 2)\r\n            } else {\r\n                // JmLobbyLog.console.log(\"offset--->\" + offset, \"maxOffset-->\" + maxOffset)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 主动调起刷新\r\n     */\r\n    pullDownRefresh() {\r\n        this.scrollView.stopAutoScroll()\r\n        //this.scrollView.content.position.y = this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight\r\n        this.scrollView.content.setPosition(this.scrollView.node.getComponent(UITransform).width / 2, this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight)\r\n        this._dirty = true\r\n        this.updateRefreshState(RefreshOrLoadState.REFRESHING)\r\n        this.scheduleOnce(() => {//产品说要延迟刷新，让用户可以看到REFRESHING的动画\r\n            if (this.onPullDownToRefresh != null) {\r\n                this.onPullDownToRefresh()\r\n            }\r\n        }, 1.5)\r\n    }\r\n\r\n    private startPullDownRefresh() {\r\n        // JmLobbyLog.console.log(\"startPullDownRefresh\", this.refreshState, this.loadingState)\r\n        if (this.pullDownToRefreshEnabled && this.refreshState == RefreshOrLoadState.READY_TO_REFRESH && this.loadingState != RefreshOrLoadState.REFRESHING) {\r\n            this.updateRefreshState(RefreshOrLoadState.REFRESHING)\r\n            this.scheduleOnce(() => {//产品说要延迟刷新，让用户可以看到REFRESHING的动画\r\n                if (this.onPullDownToRefresh != null) {\r\n                    this.onPullDownToRefresh()\r\n                }\r\n            }, 1.5)\r\n            /**测试：延时刷新完成返回*/\r\n            // this.scheduleOnce(() => {\r\n            //     this.onRefreshComplete()\r\n            // }, 2)\r\n        } else {\r\n            this.headerController && this.headerController.onScrollOffset(0)\r\n        }\r\n    }\r\n\r\n    onRefreshComplete(scrollToTop = true) {\r\n        // JmLobbyLog.console.log(\"refresh done\")\r\n        let hasMore = this.hasMore = this.getItemCount() > 0\r\n        if (hasMore) {\r\n            this.updateLoadingState(RefreshOrLoadState.NONE)\r\n        } else {\r\n            this.updateLoadingState(RefreshOrLoadState.EMPTY)\r\n        }\r\n\r\n        if (scrollToTop) {\r\n            // this.updateRefreshState(RefreshOrLoadState.COMPLETING)\r\n            // this.scrollView.content.stopAllActions()\r\n            // let move = cc.moveTo(0.1, cc.v2(0, this.scrollView.node.getComponent(UITransform).height / 2))\r\n            // let delay = cc.delayTime(0.3)\r\n            // let finish = cc.callFunc(() => {\r\n            //     this.updateRefreshState(RefreshOrLoadState.NONE)\r\n            // })\r\n            // this.headerController && this.headerController.onScrollOffset(0)\r\n            // this.scrollView.content.runAction(cc.sequence(move, delay, finish))\r\n        } else {\r\n            this.updateRefreshState(RefreshOrLoadState.NONE)\r\n        }\r\n\r\n        this.notifyChange()\r\n    }\r\n\r\n    stopPullDownRefresh() {\r\n        this.updateRefreshState(RefreshOrLoadState.COMPLETING)\r\n        //this.scrollView.content.stopAllActions()\r\n        this.headerController && this.headerController.onScrollOffset(0)\r\n        //this.scrollView.content.position.y = this.scrollView.node.getComponent(UITransform).height / 2\r\n        this.scrollView.content.setPosition(this.scrollView.node.getComponent(UITransform).width / 2, this.scrollView.node.getComponent(UITransform).height / 2)\r\n    }\r\n\r\n    onLoadComplete(hasMore: boolean = true) {\r\n        this.hasMore = hasMore\r\n        if (hasMore) {\r\n            this.updateLoadingState(RefreshOrLoadState.NONE)\r\n        } else {\r\n            this.updateLoadingState(RefreshOrLoadState.COMPLETE)\r\n        }\r\n        // JmLobbyLog.console.log(\"loading done\")\r\n        this.notifyChange()\r\n    }\r\n\r\n    private updateRefreshState(state: RefreshOrLoadState) {\r\n        if (this.refreshState != state) {\r\n            // JmLobbyLog.console.log(\"updateRefreshState-->\", this.refreshState, state)\r\n            this.refreshState = state\r\n            this.onRefreshStateChange(state)\r\n        }\r\n    }\r\n\r\n    private onRefreshStateChange(newState: RefreshOrLoadState) {\r\n        // JmLobbyLog.console.log(\"onRefreshStateChange-->\" + this.refreshState)\r\n        this.headerController && this.headerController.setState(newState)\r\n    }\r\n\r\n    private updateLoadingState(state: RefreshOrLoadState) {\r\n        if (this.loadingState != state) {\r\n            this.loadingState = state\r\n            this.onLoadingStateChange(state)\r\n        }\r\n    }\r\n\r\n    private onLoadingStateChange(newState: RefreshOrLoadState) {\r\n        // JmLobbyLog.console.log(\"onLoadingStateChange-->\" + this.loadingState)\r\n        this.footerController && this.footerController.setState(newState)\r\n    }\r\n\r\n    setExtraData(key: string, value: any) {\r\n        this.extraData[key] = value\r\n    }\r\n\r\n    getExtraData(key: string) {\r\n        return this.extraData[key]\r\n    }\r\n\r\n    /**\r\n     * 处理数据更新回调结果\r\n     * @return 返回的数据暂存在对应Component内，需要更新下\r\n     */\r\n    static handleSuccess(result: Array<any>, isLoadMore: boolean, listView: JmListView, hasMore?: boolean, scrollToTop = true) {\r\n        if (!listView.node.isValid) return\r\n        let data = listView.getData()\r\n        let newData: Array<any>\r\n        if (isLoadMore) {\r\n            newData = data.concat(result)\r\n        } else if (Array.isArray(result)) {\r\n            newData = result\r\n        }\r\n        listView.setData(newData)\r\n        if (isLoadMore) {\r\n            listView.onLoadComplete(hasMore == undefined ? result.length > 0 : hasMore)\r\n        } else {\r\n            listView.onRefreshComplete(scrollToTop)\r\n        }\r\n    }\r\n\r\n    static handleFailure(listView: JmListView, loadMore: boolean, scrollToTop = true) {\r\n        if (!listView.node.isValid) return\r\n        if (loadMore) {\r\n            listView.onLoadComplete(true)\r\n        } else {\r\n            listView.onRefreshComplete(scrollToTop)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport enum Orientation {\r\n    HORIZONTAL,\r\n    VERTICAL\r\n}","import JmListView from \"./JmListView\";\r\nimport JmHorizontalListView from \"./JmHorizontalListView\";\r\nimport { Component, EventTouch, Node, Vec2, _decorator } from \"cc\";\r\nimport BaseView from \"db://app/base/BaseView\";\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass\r\nexport default class JmListViewItem extends BaseView {\r\n    protected itemId: number\r\n    protected listView: JmListView | JmHorizontalListView;\r\n    protected performClick = false\r\n    private startPos: Vec2//记录Touch事件开始时的位置\r\n\r\n    protected onLoad() {\r\n        super.onLoad && super.onLoad()\r\n    }\r\n\r\n    protected onEnable() {\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchEvent, this)\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchEvent, this)\r\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEvent, this)\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.node.off(Node.EventType.TOUCH_START, this.onTouchEvent, this)\r\n        this.node.off(Node.EventType.TOUCH_MOVE, this.onTouchEvent, this)\r\n        this.node.off(Node.EventType.TOUCH_END, this.onTouchEvent, this)\r\n    }\r\n\r\n    onTouchEvent(event: EventTouch) {\r\n        switch (event.getType()) {\r\n            case Node.EventType.TOUCH_START:\r\n                // JmLobbyLog.Log(\"TOUCH_START\")\r\n                this.performClick = true\r\n                this.startPos = event.getLocation()\r\n                break\r\n            case Node.EventType.TOUCH_MOVE:\r\n                // JmLobbyLog.Log(\"TOUCH_MOVE\")\r\n                let pos = event.getLocation()\r\n                let dstx = Math.abs(this.startPos.x - pos.x)\r\n                let dsty = Math.abs(this.startPos.y - pos.y)\r\n                if (dstx > 5 || dsty > 5) {//有的机型就算没有移动也会直接调用一次TOUCH_MOVE事件，此处将小距离移动忽略不计\r\n                    this.performClick = false\r\n                }\r\n\r\n                // let dst: Vec2 = this.startPos.sub(pos)\r\n                // if (dst.len() > 5) {//有的机型就算没有移动也会直接调用一次TOUCH_MOVE事件，此处将小距离移动忽略不计\r\n                //     this.performClick = false\r\n                // }\r\n                break\r\n            case Node.EventType.TOUCH_END:\r\n                if (this.performClick) {\r\n                    this.onItemClick(event)\r\n                }\r\n                this.performClick = false\r\n                break\r\n        }\r\n    }\r\n\r\n    onItemClick(event?: EventTouch) {\r\n        // JmLobbyLog.Log(\"ItemClicked, itemId-->\" + this.itemId)\r\n    }\r\n\r\n    updateItem(id: number, data: any, listView: JmListView | JmHorizontalListView) {\r\n        this.itemId = id\r\n        this.listView = listView\r\n        //子类实现\r\n    }\r\n\r\n    getItemHeight(): number {\r\n        return undefined\r\n    }\r\n\r\n    getItemWidth(): number {\r\n        return undefined\r\n    }\r\n\r\n}","import { Component, instantiate, isValid, NodePool, Prefab } from \"cc\";\n\nexport class JmNodePool extends NodePool {\n    private _cellPfb: Prefab;\n    get cellPfb() {\n        return this._cellPfb;\n    }\n\n    set cellPfb(value) {\n        this._cellPfb = value;\n    }\n}\n\nexport default class JmNodePoolMgr {\n    private static _nodePoolData: Map<string, JmNodePool> = new Map<string, JmNodePool>();\n\n    static IdentityCellPool: string = \"IDENTITY_CELL_POOL\";\n\n    /**初始化缓存池\n     * */\n    static InitNodePool(poolKey: string, cellPfb: Prefab, poolHandlerComp?: string) {\n        this.DestroyPool(poolKey);\n\n        let pool = new JmNodePool(poolHandlerComp);\n        pool.cellPfb = cellPfb;\n        this._nodePoolData.set(poolKey, pool);\n    }\n\n    static GetCell(poolKey: string) {\n        let pool = this.GetPool(poolKey);\n        if (pool) {\n            let node;\n            if (pool.size()) {\n                node = pool.get();\n            } else {\n                node = instantiate(pool.cellPfb);\n            }\n            node.active = true;\n            return node;\n        }\n    }\n\n    static PutCell(poolKey: string, node: any) {\n        let pool = this.GetPool(poolKey);\n        if (pool) {\n            node.active = false;\n            pool.put(node);\n        }\n    }\n\n    static DestroyPool(poolKey: string) {\n        let pool = this._nodePoolData.get(poolKey);\n        if (pool) {\n            for (let i = 0; i < pool.size(); i++) {\n                let node = pool.get();\n                if (isValid(node, true)) {\n                    node.active = false;\n                    node.destroy();\n                }\n            }\n            pool.clear();\n            this._nodePoolData.delete(poolKey);\n        }\n    }\n\n    static GetPool(poolKey: string) {\n        let pool = this._nodePoolData.get(poolKey);\n        if (pool) {\n            return pool;\n        } else {\n            console.log(`JmNodePoolMgr.GetPool!The pool is null! please instance it! ${poolKey}`);\n        }\n    }\n}\n\n\n","import { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\nimport { _decorator, Component, Sprite, Label } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class JmRefreshFooter extends Component {\r\n\r\n    @property(Label)\r\n    loading: Label = null;\r\n    @property(Sprite)\r\n    emptyImg: Sprite = null;\r\n\r\n    setState(state: RefreshOrLoadState) {\r\n        switch (state) {\r\n            case RefreshOrLoadState.NONE:\r\n            case RefreshOrLoadState.EMPTY:\r\n                this.loading.node.active = false\r\n                this.emptyImg.node.active = false\r\n                break;\r\n            case RefreshOrLoadState.READY_TO_REFRESH:\r\n                break;\r\n            case RefreshOrLoadState.REFRESHING:\r\n                this.loading.node.active = true\r\n                this.loading.string = \"加载数据中\"\r\n                this.emptyImg.node.active = false\r\n                break;\r\n            case RefreshOrLoadState.COMPLETE:\r\n                this.emptyImg.node.active = true\r\n                this.loading.node.active = false\r\n                break\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}\r\n","import { Component, Skeleton, _decorator } from \"cc\";\r\nimport { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class JmRefreshHeader extends Component {\r\n    @property(Skeleton)\r\n    refreshSpine: Skeleton = null\r\n\r\n    private _state = RefreshOrLoadState.NONE\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    onScrollOffset(offsetY: number) {\r\n        if (offsetY < -40) {\r\n            offsetY = -40\r\n        }\r\n        this.refreshSpine.node.y = offsetY - 50\r\n    }\r\n\r\n    setState(state: RefreshOrLoadState) {\r\n        this._state = state\r\n        // switch (state) {\r\n        //     case RefreshOrLoadState.NONE:\r\n        //         this.refreshSpine.setAnimation(0, \"refresh_1\", false)\r\n        //         break;\r\n        //     case RefreshOrLoadState.READY_TO_REFRESH:\r\n        //         this.refreshSpine.setAnimation(0, \"refresh_1\", false)\r\n        //         break;\r\n        //     case RefreshOrLoadState.REFRESHING:\r\n        //         this.refreshSpine.setAnimation(0, \"refresh_2\", true)\r\n        //         break;\r\n        // }\r\n    }\r\n\r\n}\r\n","/**\n * 房间数据类\n * */\nimport BaseData from \"./BaseData\";\n\nexport default class JmRoomData extends BaseData {\n    private _roomData: any;\n    constructor() {\n        super();\n        this._roomData = {};\n    }\n\n    initRoomData(roomData: object) {\n        this.updateRoomData(roomData);\n    }\n\n    updateRoomProperty(k: string, v: any) {\n        this._roomData[k] = v;\n    }\n\n    updateRoomData(roomData: any) {\n        if (this._roomData == null) {\n            this._roomData = {};\n        }\n        for (let k in roomData) {\n            this.updateRoomProperty(k, roomData[k]);\n        }\n    }\n\n    getIdentities() {\n        return this._roomData[\"identities\"];\n    }\n    getIdentity() {\n        return this._roomData[\"identity\"];\n    }\n\n    getRoomNum() {\n        return this._roomData[\"roomNum\"];\n    }\n\n    getSeats() {\n        return this._roomData[\"seats\"];\n    }\n}\n\n\n","/**\r\n * 游戏房间数据管理类,管理房间列表信息，所有显示的房间数据都在此显示，不显示的房间信息不在这里\r\n * */\r\nimport JmRoomData from \"../data/JmRoomData\";\r\nexport default class JmRoomDataMgr {\r\n    private static _roomsData: Map<string, JmRoomData> = new Map<string, JmRoomData>();\r\n    private static _roomsKeys: Array<string> = [];\r\n    private static _joinRoomsList: Array<string> = []; //玩家加入的房间的堆栈列表\r\n    private static _offset: number = 0;\r\n    private static _currentRoomData: object;\r\n    private static _currentRoomKey: number;\r\n    private static currentType: number = 0;\r\n    private static _roomCfg: Map<number, number> = new Map<number, number>();\r\n    private static _roomCount: number = 0;\r\n    private static _gameState: number = 2;//0已发牌 1过期不能领身份 2未发牌\r\n    private static _isDay: boolean = true;\r\n    private static _isOwner: boolean = false;\r\n    private static _loadKey: boolean = true;\r\n    /**初始化房间列表信息\r\n     * */\r\n    static OnReceiveServerData(serverData:any) {\r\n        this.InitRoomsData(serverData);\r\n    }\r\n\r\n    static InitRoomsData(data: Array<object>) {\r\n        for (let i = 0, len = data.length; i < len; i++) {\r\n            this.InitRoomData(data[i]);\r\n        }\r\n    }\r\n    \r\n    static InitRoomData(data: any) {\r\n        let roomKey = data[\"recordId\"];\r\n        if (roomKey) {\r\n            let room = this.GetRoom(roomKey);\r\n            room.initRoomData(data);\r\n        }\r\n    }\r\n\r\n    static CreateRoom(roomData: object) {\r\n        this.InitCurrentRoom(roomData);\r\n    }\r\n\r\n    static CleanRooms() {\r\n        this._offset = 0;\r\n        this._roomsData.clear();\r\n        this._roomCfg.clear();\r\n        this._roomsKeys = [];\r\n        this._gameState = 2\r\n    }\r\n\r\n    static CleanRoom(roomKey: string) {\r\n        let room = this._roomsData.get(roomKey);\r\n        if (room) {\r\n            room = null;\r\n            this._roomsData.delete(roomKey);\r\n        }\r\n    }\r\n\r\n    static GetOffSet() {\r\n        return this._offset || 0;\r\n    }\r\n\r\n    static GetRoomByRoomKey(roomKey:any) {\r\n        let room = this._roomsData.get(roomKey);\r\n        if (room) {\r\n            return room;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static GetRoomNum() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getRoomNum();\r\n    }\r\n    \r\n    static GetRoomIdentities() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getIdentities();\r\n    }\r\n\r\n    static GetRoomIdentity() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getIdentity();\r\n    }\r\n\r\n    static GetRoomSeats() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getSeats();\r\n    }\r\n\r\n    static InitCurrentRoomProto(roomData: any) {\r\n        let roomKey = roomData[\"recordId\"]\r\n        this._roomCount = roomData[\"players\"]\r\n        let room = this.GetRoom(roomKey);\r\n        room.initRoomData(roomData);\r\n        this._gameState = roomData[\"status\"]\r\n        this._currentRoomData = roomData;\r\n        this._currentRoomKey = roomKey;\r\n        this._joinRoomsList.unshift(roomData[\"roomNum\"]);\r\n    }\r\n\r\n    //当前用户所在房间的房间信息\r\n    static InitCurrentRoom(roomData: any) {\r\n        console.log(`JmRoomDataMgr.InitCurrentRoom ${JSON.stringify(roomData)}`);\r\n\r\n        let roomKey = roomData[\"recordId\"]\r\n        this._isOwner = roomData[\"judge\"]\r\n        this._roomCount = roomData[\"players\"]\r\n        let room = this.GetRoom(roomKey);\r\n        room.initRoomData(roomData);\r\n        this._gameState = roomData[\"status\"]\r\n        this._currentRoomData = roomData;\r\n        this._currentRoomKey = roomKey;\r\n        this._joinRoomsList.unshift(roomData[\"roomNum\"]);\r\n    }\r\n\r\n    static GetRoom(roomKey: string) {\r\n        let room = this._roomsData.get(roomKey);\r\n        if (!room) {\r\n            room = new JmRoomData();\r\n            this._roomsData.set(roomKey, room);\r\n            this._roomsKeys.push(roomKey);\r\n        }\r\n        return room;\r\n    }\r\n\r\n    static GetCurrentRoomInfo() {\r\n        return this._currentRoomData;\r\n    }\r\n\r\n    static GetCurrentRoomKey() {\r\n        return this._currentRoomKey || 0;\r\n    }\r\n\r\n\r\n    static SetCurrentNullRoomKey() {\r\n        this._currentRoomKey = null;\r\n    }\r\n\r\n    static SetRoomDayOrNight(currentType:number) {\r\n        this.currentType = currentType;\r\n    }\r\n    static GetRoomDayOrNight() {\r\n        return this.currentType;\r\n    }\r\n    static delRoomCfg(key:any) {\r\n        this._roomCfg.delete(key);\r\n    }\r\n    static setRoomCfg(key:any, vule:any) {\r\n        this._roomCfg.set(key, vule);\r\n    }\r\n    static getRoomCfg() {\r\n        return this._roomCfg;\r\n    }\r\n\r\n    static getRoomCount() {\r\n        return this._roomCount\r\n    }\r\n    static setRoomCount(count:number) {\r\n        this._roomCount = count\r\n    }\r\n\r\n    static setGameState(state:number) {\r\n        this._gameState = state\r\n    }\r\n    static getGameState() {\r\n        return this._gameState\r\n    }\r\n\r\n    static setGameDay(bol:boolean) {\r\n        this._isDay = bol\r\n    }\r\n    static getGameDay() {\r\n        return this._isDay;\r\n    }\r\n\r\n    static setOwner(bol:boolean) {\r\n        this._isOwner = bol\r\n    }\r\n    static isOwner() {\r\n        return this._isOwner\r\n    }\r\n    static getLoadKey() {\r\n        return this._loadKey\r\n    }\r\n    static setLoadKey(bol:boolean) {\r\n        this._loadKey = bol\r\n    }\r\n}\r\n\r\n\r\n","import { Asset, AssetManager, Font, ImageAsset, JsonAsset, Label, SceneAsset, Sprite, SpriteFrame, Texture2D, TextureCube, _decorator, assetManager, isValid, path, sp } from 'cc';\r\nimport { MINIGAME } from 'cc/env';\r\nimport BaseManager from '../../base/BaseManager';\r\nimport Core from '../../Core';\r\nconst { ccclass } = _decorator;\r\nconst REGEX = /^https?:\\/\\/.*/;\r\n\r\nclass Command {\r\n    private static cache: Command[] = [];\r\n\r\n    static create(onComplete: (items: unknown) => void, onProgress: (finish: number, total: number, item: AssetManager.RequestItem) => void = null) {\r\n        const command = Command.cache.pop() || new Command();\r\n        onProgress && command.onProgress.push(onProgress);\r\n        onComplete && command.onComplete.push(onComplete);\r\n        return command;\r\n    }\r\n\r\n    static put(command: Command) {\r\n        command.onProgress.length = 0;\r\n        command.onComplete.length = 0;\r\n        Command.cache.push(command);\r\n    }\r\n\r\n    onProgress: Array<(finish: number, total: number, item: AssetManager.RequestItem) => void> = [];\r\n    onComplete: Array<(items: unknown) => void> = [];\r\n\r\n    private constructor() { }\r\n}\r\n\r\nclass Loader {\r\n    private assetMap = new Map<string, Asset>();\r\n    private loadingMap = new Map<string, Command>();\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preload(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: AssetManager.RequestItem[] | null) => void }) {\r\n        return Core.inst.manager.loader.preload(params);\r\n    }\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preloadDir(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: AssetManager.RequestItem[] | null) => void }) {\r\n        return Core.inst.manager.loader.preloadDir(params);\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundel名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public load<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: InstanceType<T> | null) => void }) {\r\n        const key = `${params.bundle || 'resources'}-${params.type.name}-${params.path}-${params.version || ''}`;\r\n\r\n        if (this.loadingMap.has(key)) {\r\n            const command = this.loadingMap.get(key);\r\n            params.onProgress && command.onProgress.push(params.onProgress);\r\n            params.onComplete && command.onComplete.push(params.onComplete);\r\n            return;\r\n        }\r\n\r\n        // 加载中\r\n        const command = Command.create(params.onComplete, params.onProgress);\r\n        this.loadingMap.set(key, command);\r\n\r\n        // 有缓存\r\n        if (this.assetMap.has(key)) {\r\n            const asset = this.assetMap.get(key);\r\n            // 有缓存的情况下不触发onProgress回调\r\n            setTimeout(() => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) return;\r\n                this.loadingMap.delete(key);\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }, 0);\r\n            return;\r\n        }\r\n\r\n        Core.inst.manager.loader.load({\r\n            ...params,\r\n            onProgress: (finish, total, item) => {\r\n                if (!this.loadingMap.has(key)) return;\r\n                command.onProgress.forEach(cb => cb(finish, total, item));\r\n            },\r\n            onComplete: (asset) => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) {\r\n                    asset.addRef();\r\n                    asset.decRef();\r\n                    return;\r\n                }\r\n                this.loadingMap.delete(key);\r\n                if (asset) {\r\n                    asset.addRef();\r\n                    this.assetMap.set(key, asset);\r\n                }\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T> | null> {\r\n        return new Promise((resolve) => {\r\n            this.load({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundel名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDir<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: InstanceType<T>[] | null) => void }) {\r\n        const key = `${params.bundle || 'resources'}-${params.type.name}-${params.path}-${params.version || ''}:`;\r\n\r\n        if (this.loadingMap.has(key)) {\r\n            const command = this.loadingMap.get(key);\r\n            params.onProgress && command.onProgress.push(params.onProgress);\r\n            params.onComplete && command.onComplete.push(params.onComplete);\r\n            return;\r\n        }\r\n\r\n        // 加载中\r\n        const command = Command.create(params.onComplete, params.onProgress);\r\n        this.loadingMap.set(key, command);\r\n\r\n        const results = [] as InstanceType<T>[];\r\n        this.assetMap.forEach((asset, path) => {\r\n            if (path.indexOf(key) === 0) {\r\n                results.push(asset as InstanceType<T>);\r\n            }\r\n        });\r\n\r\n        // 有缓存\r\n        if (results.length) {\r\n            // 有缓存的情况下不触发onProgress回调\r\n            setTimeout(() => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) return;\r\n                this.loadingMap.delete(key);\r\n                command.onComplete.forEach(cb => cb(results));\r\n                Command.put(command);\r\n            }, 0);\r\n            return;\r\n        }\r\n\r\n        Core.inst.manager.loader.loadDir({\r\n            ...params,\r\n            onProgress: (finish, total, item) => {\r\n                if (!this.loadingMap.has(key)) return;\r\n                command.onProgress.forEach(cb => cb(finish, total, item));\r\n            },\r\n            onComplete: (assets) => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) {\r\n                    assets?.forEach((asset) => {\r\n                        asset.addRef();\r\n                        asset.decRef();\r\n                    });\r\n                    return;\r\n                }\r\n                this.loadingMap.delete(key);\r\n                assets?.forEach((asset) => {\r\n                    asset.addRef();\r\n                    this.assetMap.set(key + asset.uuid, asset);\r\n                });\r\n                command.onComplete.forEach(cb => cb(results));\r\n                Command.put(command);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDirAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T>[] | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadDir({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * loadRemote({url:'', ext:'.png', onComplete:(result){ }})\r\n     */\r\n    public loadRemote({ url, ext, onComplete }: { url: string, ext?: string, onComplete?: (result: Asset | null) => void }) {\r\n        if (this.loadingMap.has(url)) {\r\n            const command = this.loadingMap.get(url);\r\n            onComplete && command.onComplete.push(onComplete);\r\n            return;\r\n        }\r\n\r\n        // 加载中\r\n        const command = Command.create(onComplete);\r\n        this.loadingMap.set(url, command);\r\n\r\n        // 有缓存\r\n        if (this.assetMap.has(url)) {\r\n            const asset = this.assetMap.get(url);\r\n            // 有缓存的情况下不触发onProgress回调\r\n            setTimeout(() => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(url)) return;\r\n                this.loadingMap.delete(url);\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }, 0);\r\n            return;\r\n        }\r\n\r\n        Core.inst.manager.loader.loadRemote({\r\n            url, ext,\r\n            onComplete: (asset) => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(url)) {\r\n                    asset.addRef();\r\n                    asset.decRef();\r\n                    return;\r\n                }\r\n                this.loadingMap.delete(url);\r\n                if (asset) {\r\n                    asset.addRef();\r\n                    this.assetMap.set(url, asset);\r\n                }\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * await loadRemoteAsync({url:'', ext:'.png'})\r\n     */\r\n    public loadRemoteAsync(params: { url: string, ext?: string }): Promise<Asset | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadRemote({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置字体资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setFont({target:label, path:'font/num', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setFont({target:label, url:'http://img/a/font',ext:'.ttf', onComplete:(succ)=>{}})\r\n     */\r\n    public setFont(params: { target: Label, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (font: Font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: Font,\r\n                onComplete: (font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置Spine资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSpine({target:spine, path:'spine/role', bundle:'resources', onComplete:(succ)=>{}})\r\n     */\r\n    public setSpine(params: { target: sp.Skeleton, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        this.load({\r\n            path: params.path,\r\n            bundle: params.bundle,\r\n            type: sp.SkeletonData,\r\n            onComplete: (skeletonData) => {\r\n                if (!skeletonData || !isValid(params.target)) {\r\n                    params.onFail && params.onFail();\r\n                    params.onComplete && params.onComplete(false);\r\n                    return;\r\n                }\r\n                params.target.skeletonData = skeletonData;\r\n                params.onSuccess && params.onSuccess();\r\n                params.onComplete && params.onComplete(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置图片资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSprite({target:sprite, path:'img/a/spriteFrame', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setSprite({target:sprite, url:'http://img/a/avatar',ext:'.png', onComplete:(succ)=>{}})\r\n     */\r\n    public setSprite(params: { target: Sprite, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (imageAsset: ImageAsset) => {\r\n                    if (!imageAsset || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    const spriteFrame = SpriteFrame.createWithImage(imageAsset);\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: SpriteFrame,\r\n                onComplete: (spriteFrame) => {\r\n                    if (!spriteFrame || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 释放所有资源\r\n     */\r\n    public releaseAll() {\r\n        const assetList: Asset[] = [];\r\n        this.assetMap.forEach(asset => assetList.push(asset));\r\n        this.assetMap.clear();\r\n        this.loadingMap.clear();\r\n        // 延迟一秒释放资源\r\n        setTimeout(() => {\r\n            assetList.forEach(asset => asset.decRef());\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n@ccclass('LoaderManager')\r\nexport default class LoaderManager extends BaseManager {\r\n    /**\r\n     * `Loader`是基于`LoaderManager`的封装，不同的是，`Loader`是基于单个`Loader实例`对资源进行`自动引用计数`管理。（LoaderManager本质是对cc.assetManager的封装，提供了更方便的接口，都是基于Asset Bundle管理资源，并且资源的引用计数需要开发者手动管理）\r\n     * @example\r\n     * // 创建Loader实例\r\n     * const loader = new LoaderManager.Loader();\r\n     * // 加载资源\r\n     * loader.load({path:'img/a/spriteFrame', bundle:'resources', type:SpriteFrame, onComplete:(spriteFrame)=>{}})\r\n     * // 加载远程图片资源\r\n     * loader.loadRemote({url:'http://img/a/avatar',ext:'.png', onComplete:(imageAsset)=>{}})\r\n     * // 释放所有资源\r\n     * loader.releaseAll();\r\n     */\r\n    static Loader = Loader;\r\n\r\n    private handle(handle: string, { bundle, version, path, type, onProgress, onComplete }: { bundle?: string, version?: string, path: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (result: unknown | null) => void }) {\r\n        if (!handle) {\r\n            this.error('handle is empty');\r\n            return onComplete && onComplete(null);\r\n        }\r\n        if (!path) {\r\n            this.error(`${handle} fail. path is empty`);\r\n            return onComplete && onComplete(null);\r\n        }\r\n        if (!bundle) bundle = 'resources';\r\n\r\n        const args: any[] = [path];\r\n        if (type) args.push(type);\r\n        if (onProgress) args.push(onProgress);\r\n        args.push((err: string, res: any) => {\r\n            if (err) {\r\n                this.error(`${handle} \"${path}\" fail`, err);\r\n                if (type === SpriteFrame && path.slice(-12) !== '/spriteFrame') {\r\n                    this.warn(`加载SpriteFrame类型的资源, 路径可能需要以/spriteFrame结尾, 如: 「${path}」 -> 「${path}/spriteFrame」`);\r\n                } else if (type === Texture2D && path.slice(-8) !== '/texture') {\r\n                    this.warn(`加载Texture2D类型的资源, 路径可能需要以/texture结尾, 如: 「${path}」 -> 「${path}/texture」`);\r\n                } else if (type === TextureCube && path.slice(-12) !== '/textureCube') {\r\n                    this.warn(`加载TextureCube类型的资源, 路径可能需要以/textureCube结尾, 如: 「${path}」 -> 「${path}/textureCube」`);\r\n                }\r\n                onComplete && onComplete(null);\r\n            } else {\r\n                onComplete && onComplete(res);\r\n            }\r\n        });\r\n\r\n        this.loadBundle({\r\n            bundle, version,\r\n            onComplete(bundle) {\r\n                if (!bundle) return onComplete && onComplete(null);\r\n                bundle[handle](args[0], args[1], args[2], args[3]);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preload(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: AssetManager.RequestItem[] | null) => void }) {\r\n        if (SceneAsset === params.type as typeof Asset) {\r\n            this.handle('preloadScene', { path: params.path, bundle: params.bundle, version: params.version, onProgress: params.onProgress, onComplete: params.onComplete });\r\n        } else {\r\n            this.handle('preload', params);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preloadDir(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: AssetManager.RequestItem[] | null) => void }) {\r\n        this.handle('preloadDir', params);\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public load<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: InstanceType<T> | null) => void }) {\r\n        if (SceneAsset === params.type as typeof Asset) {\r\n            this.handle('loadScene', { path: params.path, bundle: params.bundle, version: params.version, onProgress: params.onProgress, onComplete: params.onComplete });\r\n        } else {\r\n            this.handle('load', params);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T> | null> {\r\n        return new Promise((resolve) => {\r\n            this.load({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDir<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: InstanceType<T>[] | null) => void }) {\r\n        this.handle('loadDir', params);\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDirAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T>[] | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadDir({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 销毁一个bundle中对应path和type的资源\r\n     * @param params.bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public release({ path, bundle, type }: { path: string, bundle?: string, type?: typeof Asset }) {\r\n        if (!bundle) bundle = 'resources';\r\n        assetManager.getBundle(bundle)?.release(path, type);\r\n    }\r\n\r\n    /**\r\n     * 销毁一个bundle中所有的资源\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public releaseAll(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        const _bundle = assetManager.getBundle(bundle);\r\n        if (!_bundle) return;\r\n        // 只释放自己内部的资源，依赖的资源只减少引用计数\r\n        _bundle.getDirWithPath('/', Asset).forEach((asset) => {\r\n            _bundle.release(asset.path, asset.ctor);\r\n        });\r\n        // cocos提供的方法会将依赖的资源也卸载(这个设计很奇怪)\r\n        // _bundle?.releaseAll();\r\n    }\r\n\r\n    /**\r\n     * 销毁一个bundle中未使用的资源\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public releaseUnused(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        //@ts-ignore\r\n        assetManager.getBundle(bundle)?.releaseUnusedAssets();\r\n    }\r\n\r\n    /**\r\n     * 加载一个bundle\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public loadBundle({ bundle, version, onComplete }: { bundle?: string, version?: string, onComplete?: (bundle: AssetManager.Bundle | null) => any }) {\r\n        if (!bundle) bundle = 'resources';\r\n\r\n        if (MINIGAME) {\r\n            if (REGEX.test(bundle)) {\r\n                this.warn('小游戏环境下只支持加载远程Bundle的资源数据, 不会加载脚本');\r\n                this.reloadBundle({ bundle, version, onComplete });\r\n                return;\r\n            }\r\n            if (version && assetManager.downloader.bundleVers[bundle] !== version) {\r\n                this.warn('小游戏环境下只支持更新Bundle的远程资源数据, 不会更新脚本');\r\n                // 先加载本地bundle运行脚本\r\n                assetManager.loadBundle(bundle, (err: Error, b: AssetManager.Bundle) => {\r\n                    if (err || !b) return onComplete?.(null);\r\n                    // 然后再走重载逻辑更新资源\r\n                    this.reloadBundle({ bundle, version, onComplete });\r\n                });\r\n            } else {\r\n                assetManager.loadBundle(bundle, (err: Error, bundle: AssetManager.Bundle) => {\r\n                    onComplete && onComplete(err ? null : bundle);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (version) {\r\n            assetManager.loadBundle(bundle, { version }, (err: Error, bundle: AssetManager.Bundle) => {\r\n                onComplete && onComplete(err ? null : bundle);\r\n            });\r\n        } else {\r\n            assetManager.loadBundle(bundle, (err: Error, bundle: AssetManager.Bundle) => {\r\n                onComplete && onComplete(err ? null : bundle);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载一个bundle\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public loadBundleAsync(params: { bundle?: string, version?: string }): Promise<AssetManager.Bundle | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadBundle({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取一个已经加载的bundle\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public getBundle(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        return assetManager.getBundle(bundle);\r\n    }\r\n\r\n    /**\r\n     * 移除一个已经加载的bundle\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public removeBundle(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        const b = assetManager.getBundle(bundle);\r\n        if (b) assetManager.removeBundle(b);\r\n    }\r\n\r\n    /**\r\n     * 重载一个bundle(只重载资源列表)\r\n     * - 只有远程bundle支持重载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public reloadBundle({ bundle, version, onComplete }: { bundle?: string, version?: string, onComplete?: (bundle: AssetManager.Bundle | null) => any }) {\r\n        if (!bundle) bundle = 'resources';\r\n\r\n        let baseUrl = '';\r\n        let configUrl = '';\r\n\r\n        if (REGEX.test(bundle)) {\r\n            baseUrl = bundle;\r\n            const suffix = version ? `${version}.` : '';\r\n            configUrl = `${baseUrl}config.${suffix}json`;\r\n        }\r\n        else {\r\n            baseUrl = `${assetManager.downloader.remoteServerAddress}remote/${bundle}/`;\r\n            const suffix = version ? `${version}.` : '';\r\n            configUrl = `${baseUrl}config.${suffix}json`;\r\n        }\r\n\r\n        // 清除可能存在的config缓存\r\n        assetManager.cacheManager?.removeCache(configUrl);\r\n        assetManager.loadRemote(configUrl, (err: Error, data: JsonAsset) => {\r\n            if (err) {\r\n                this.error(`下载Bundle配置失败: ${configUrl}`);\r\n                onComplete?.(null);\r\n                return;\r\n            }\r\n\r\n            this.releaseAll(path.basename(bundle));\r\n            this.removeBundle(path.basename(bundle));\r\n\r\n            const ab = new AssetManager.Bundle();\r\n            const config = data.json as any;\r\n            config.base = baseUrl;\r\n            ab.init(config);\r\n            onComplete?.(ab);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 重载一个bundle(只重载资源列表)\r\n     * - 只有远程bundle支持重载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public reloadBundleAsync(params: { bundle?: string, version?: string }): Promise<AssetManager.Bundle | null> {\r\n        return new Promise((resolve) => {\r\n            this.reloadBundle({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * loadRemote({url:'', ext:'.png', onComplete:(result){ }})\r\n     */\r\n    public loadRemote({ url, ext, onComplete }: { url: string, ext?: string, onComplete?: (result: Asset | null) => void }) {\r\n        if (ext) {\r\n            assetManager.loadRemote(url, { ext }, (error, res) => {\r\n                if (error) {\r\n                    this.error(`loadRemote ${url} fail`);\r\n                    return onComplete && onComplete(null);\r\n                }\r\n                onComplete && onComplete(res);\r\n            });\r\n        } else {\r\n            assetManager.loadRemote(url, (error, res) => {\r\n                if (error) {\r\n                    this.error(`loadRemote ${url} fail`);\r\n                    return onComplete && onComplete(null);\r\n                }\r\n                onComplete && onComplete(res);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * await loadRemoteAsync({url:'', ext:'.png'})\r\n     */\r\n    public loadRemoteAsync(params: { url: string, ext?: string }): Promise<Asset | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadRemote({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置字体资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setFont({target:label, path:'font/num', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setFont({target:label, url:'http://img/a/font',ext:'.ttf', onComplete:(succ)=>{}})\r\n     */\r\n    public setFont(params: { target: Label, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (font: Font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: Font,\r\n                onComplete: (font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置Spine资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSpine({target:spine, path:'spine/role', bundle:'resources', onComplete:(succ)=>{}})\r\n     */\r\n    public setSpine(params: { target: sp.Skeleton, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        this.load({\r\n            path: params.path,\r\n            bundle: params.bundle,\r\n            type: sp.SkeletonData,\r\n            onComplete: (skeletonData) => {\r\n                if (!skeletonData || !isValid(params.target)) {\r\n                    params.onFail && params.onFail();\r\n                    params.onComplete && params.onComplete(false);\r\n                    return;\r\n                }\r\n                params.target.skeletonData = skeletonData;\r\n                params.onSuccess && params.onSuccess();\r\n                params.onComplete && params.onComplete(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置图片资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSprite({target:sprite, path:'img/a/spriteFrame', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setSprite({target:sprite, url:'http://img/a/avatar',ext:'.png', onComplete:(succ)=>{}})\r\n     */\r\n    public setSprite(params: { target: Sprite, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (imageAsset: ImageAsset) => {\r\n                    if (!imageAsset || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    const spriteFrame = SpriteFrame.createWithImage(imageAsset);\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: SpriteFrame,\r\n                onComplete: (spriteFrame) => {\r\n                    if (!spriteFrame || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { DEV } from 'cc/env';\r\n\r\ninterface ILog {\r\n    (title: string, ...args: any[]): void\r\n}\r\n\r\nfunction empty() { }\r\n\r\n/**\r\n * 日志管理类，用于统一日志输出格式\r\n */\r\nexport class Logger {\r\n    static setting: {\r\n        filter: Array<'log' | 'warn' | 'error'>\r\n    } = {\r\n            filter: ['error', 'log', 'warn']\r\n        };\r\n\r\n    /**\r\n     * 创建日志输出函数\r\n     */\r\n    static create(level: 'log' | 'warn' | 'error', styleColor: string, title: string, titleColor = '#fff') {\r\n        if (this.setting.filter.indexOf(level) == -1) {\r\n            return empty;\r\n        }\r\n\r\n        if (DEV) {\r\n            return window.console[level].bind(window.console,\r\n                '%c %s %c %s ',\r\n                `background:${styleColor}; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid ${styleColor}; color: ${titleColor}; font-weight: normal;`,\r\n                `${title} ${new Date().toLocaleString()}`,\r\n                `background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid ${styleColor}; color: ${styleColor}; font-weight: normal;`\r\n            );\r\n        }\r\n        return window.console[level].bind(window.console,\r\n            `${title} [${new Date().toLocaleString()}]`\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 用于输出一般信息\r\n     */\r\n    get log() {\r\n        return Logger.create('log', '#6495ed', '[LOG]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出警告信息\r\n     */\r\n\r\n    get warn() {\r\n        return Logger.create('warn', '#ff7f50', '[WARN]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出错误信息\r\n     */\r\n    get error() {\r\n        return Logger.create('error', '#ff4757', '[ERROR]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出调试信息\r\n     */\r\n    get debug() {\r\n        return Logger.create('log', '#ff6347', '[DEBUG]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出成功信息\r\n     */\r\n    get success() {\r\n        return Logger.create('log', '#00ae9d', '[SUCC]', '#000') as ILog;\r\n    }\r\n}\r\n\r\nexport default new Logger();","export enum RefreshOrLoadState {\r\n    NONE,//未加载状态\r\n    READY_TO_REFRESH,//滑动超过阈值，准备加载\r\n    REFRESHING,//正在加载\r\n    COMPLETE,//加载完成\r\n    COMPLETING,//正在执行加载完成动画\r\n    EMPTY, //第一次加载完就没有数据，会直接显示空布局，这时就不要下拉刷新了，也不用显示COMPLETE的文案\r\n}","import SoundManager from '../../extensions/app/assets/manager/sound/SoundManager';\r\nimport UIManager from '../../extensions/app/assets/manager/ui/UIManager';\r\n\r\n// 预加载的UI(符合app.lib.task.createAny规则)\r\nUIManager.setting.preload = ['PageMain'];\r\n// 默认UI, 会在首屏流程后自动show\r\nUIManager.setting.defaultUI = 'PageMain';\r\n// 是否自动适配分辨率策略\r\nUIManager.setting.autoFit = true; // 开启后，会弃用项目设置中的适配策略，并自动根据设备分辨率与设计分辨率计算出新的适配策略\r\n// 弹窗默认遮罩展现动画配置\r\nUIManager.setting.shade = {\r\n    delay: 0,\r\n    begin: 100,\r\n    end: 200,\r\n    speed: 400,\r\n    blur: true\r\n};\r\n\r\n// 预加载的音频(按数组顺序依次预加载)\r\nSoundManager.setting.preload = [];\r\n// 默认音乐, 会在首屏流程后自动播放\r\nSoundManager.setting.defaultMusicName = '';\r\n// 默认音效, 会在Button被点击后播放\r\nSoundManager.setting.defaultEffectName = 'effect/button';","import { AssetManager, AudioClip, Button, Game, _decorator, game, isValid, sys } from 'cc';\r\nimport { IEffectName, IMusicName } from '../../../../../assets/app-builtin/app-admin/executor';\r\nimport Core from '../../Core';\r\nimport BaseManager from '../../base/BaseManager';\r\nimport AudioEngine from './AudioEngine';\r\nconst { ccclass } = _decorator;\r\n\r\ninterface playMusic<T> { name: T, volume?: number, force?: boolean, onPlay?: Function, onError?: Function }\r\ninterface playEffect<T> { name: T, volume?: number, loop?: boolean, interval?: number, onPlay?: (audioID: number) => any, onError?: Function, onEnded?: Function }\r\ninterface playMusicAsync<T> { name: T, volume?: number, force?: boolean }\r\ninterface playEffectAsync<T> { name: T, volume?: number, loop?: boolean, interval?: number, onEnded?: Function }\r\n\r\ninterface playMusicWidthBundle { name: string, bundle: string, volume?: number, force?: boolean, onPlay?: Function, onError?: Function }\r\ninterface playEffectWidthBundle { name: string, bundle: string, volume?: number, loop?: boolean, interval?: number, onPlay?: (audioID: number) => any, onError?: Function, onEnded?: Function }\r\ninterface playMusicWidthBundleAsync { name: string, bundle: string, volume?: number, force?: boolean }\r\ninterface playEffectWidthBundleAsync { name: string, bundle: string, volume?: number, loop?: boolean, interval?: number, onEnded?: Function }\r\n\r\nconst storage = {\r\n    set(key: string, value: any) {\r\n        sys.localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n    get(key: string) {\r\n        const data = sys.localStorage.getItem(key);\r\n        if (data && typeof data === 'string') {\r\n            return JSON.parse(data);\r\n        }\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * 音乐名字枚举\r\n */\r\nconst MusicName: { [key in IMusicName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\n/**\r\n * 音效名字枚举\r\n */\r\nconst EffectName: { [key in IEffectName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\nconst BundleName = 'app-sound';\r\n@ccclass('SoundManager')\r\nexport default class SoundManager<E extends string, M extends string> extends BaseManager {\r\n    /**静态设置 */\r\n    static setting: {\r\n        /**预加载 */\r\n        preload?: (IMusicName | IEffectName)[],\r\n\r\n        /**默认播放的音乐名 */\r\n        defaultMusicName?: IMusicName | '',\r\n        /**默认音乐的音量 */\r\n        defaultMusicVolume?: number,\r\n\r\n        /**默认按钮的音效名 */\r\n        defaultEffectName?: IEffectName | '',\r\n        /**默认按钮音效的音量 */\r\n        defaultEffectVolume?: number\r\n    } = {};\r\n\r\n    /**音乐名字枚举 */\r\n    static MusicName = MusicName;\r\n    /**音效名字枚举 */\r\n    static EffectName = EffectName;\r\n\r\n    private musicMuteCacheKey = 'SoundManager:MusicMute';\r\n    private effectMuteCacheKey = 'SoundManager:EffectMute';\r\n    private musicVolumeScaleCacheKey = 'SoundManager:MusicVolumeScale';\r\n    private effectVolumeScaleCacheKey = 'SoundManager:EffectVolumeScale';\r\n\r\n    private defaultMusicName = '';\r\n    private defaultMusicVolume = 1;\r\n    private defaultEffectName = '';\r\n    private defaultEffectVolume = 1;\r\n\r\n    private audioCache = {};\r\n    private effectInterval: { [key in string]: number } = {};\r\n    private playingMusic = { uuid: '', id: -1, name: '', volume: 1, playing: false, paused: false };\r\n\r\n    protected init(finish: Function) {\r\n        const setting = SoundManager.setting;\r\n\r\n        // 默认音乐\r\n        if (setting.defaultMusicName) this.defaultMusicName = setting.defaultMusicName;\r\n        if (typeof setting.defaultMusicVolume === 'number') this.defaultMusicVolume = setting.defaultMusicVolume;\r\n\r\n        // 默认按钮音效\r\n        if (setting.defaultEffectName) this.defaultEffectName = setting.defaultEffectName;\r\n        if (typeof setting.defaultEffectVolume === 'number') this.defaultEffectVolume = setting.defaultEffectVolume;\r\n\r\n        if (this.musicMuteCacheKey) {\r\n            const musicMute = storage.get(this.musicMuteCacheKey) === true;\r\n            AudioEngine.inst.setMusicMute(musicMute);\r\n        } else {\r\n            this.warn('musicMuteCacheKey不能为空');\r\n        }\r\n        if (this.effectMuteCacheKey) {\r\n            const effectMute = storage.get(this.effectMuteCacheKey) === true;\r\n            AudioEngine.inst.setGlobalEffectsMute(effectMute);\r\n        } else {\r\n            this.warn('effectMuteCacheKey不能为空');\r\n        }\r\n        if (this.musicVolumeScaleCacheKey) {\r\n            const musicVolumeScale = storage.get(this.musicVolumeScaleCacheKey);\r\n            if (typeof musicVolumeScale === 'number') AudioEngine.inst.setMusicVolumeScale(musicVolumeScale);\r\n        } else {\r\n            this.warn('musicVolumeScaleCacheKey不能为空');\r\n        }\r\n        if (this.effectVolumeScaleCacheKey) {\r\n            const effectVolumeScale = storage.get(this.effectVolumeScaleCacheKey);\r\n            if (typeof effectVolumeScale === 'number') AudioEngine.inst.setGlobalEffectsVolumeScale(effectVolumeScale);\r\n        } else {\r\n            this.warn('effectVolumeScaleCacheKey不能为空');\r\n        }\r\n\r\n        super.init(finish);\r\n\r\n        // 预加载\r\n        setting.preload?.forEach((path: string) => {\r\n            Core.inst.manager.loader.preload({\r\n                bundle: BundleName,\r\n                type: AudioClip,\r\n                path: path\r\n            });\r\n        });\r\n    }\r\n\r\n    protected onLoad() {\r\n        game.on(Game.EVENT_HIDE, function () {\r\n            AudioEngine.inst.pauseAll();\r\n        });\r\n        game.on(Game.EVENT_SHOW, function () {\r\n            AudioEngine.inst.resumeAll();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 预加载声音资源\r\n     * @param name sound路径\r\n     * @param bundle Bundle名，默认为app-sound\r\n     */\r\n    public preload(name: string, bundle: string, complete?: (item: AssetManager.RequestItem[] | null) => any): void;\r\n    public preload(name: (E | M), complete?: (item: AssetManager.RequestItem[] | null) => any): void;\r\n    public preload(name: string, ...args: any[]) {\r\n        const bundleName = (args.length >= 1\r\n            && (typeof args[0] === 'string')\r\n            ? (args[0] || BundleName)\r\n            : BundleName\r\n        ) as string;\r\n        const complete = (args.length >= 1\r\n            && (args[args.length - 1] instanceof Function)\r\n            ? args[args.length - 1]\r\n            : null\r\n        ) as (item: AssetManager.RequestItem[] | null) => any;\r\n\r\n        if (!name) {\r\n            this.error('preload', 'fail');\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (name.indexOf('effect') !== 0 && name.indexOf('music') !== 0) {\r\n            this.error('preload', 'fail', name);\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 远程加载\r\n        Core.inst.manager.loader.preload({\r\n            bundle: bundleName,\r\n            path: name,\r\n            type: AudioClip,\r\n            onComplete: complete\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载声音资源\r\n     * @param name sound路径\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param progress 加载进度回调\r\n     * @param complete 加载完成回调\r\n     */\r\n    public load(name: string, bundle: string): void;\r\n    public load(name: string, bundle: string, complete: (result: AudioClip | null) => any): void;\r\n    public load(name: string, bundle: string, progress: (finish: number, total: number, item: AssetManager.RequestItem) => void, complete: (result: AudioClip | null) => any): void;\r\n    public load(name: (E | M)): void;\r\n    public load(name: (E | M), complete: (result: AudioClip | null) => any): void;\r\n    public load(name: (E | M), progress: (finish: number, total: number, item: AssetManager.RequestItem) => void, complete: (result: AudioClip | null) => any): void;\r\n    public load(name: string, ...args: any[]): void {\r\n        const bundleName = (args.length >= 1\r\n            && (typeof args[0] === 'string')\r\n            ? (args[0] || BundleName)\r\n            : BundleName\r\n        ) as string;\r\n        const progress = (args.length >= 2\r\n            && (args[args.length - 1] instanceof Function)\r\n            && (args[args.length - 2] instanceof Function)\r\n            ? args[args.length - 2]\r\n            : null\r\n        ) as (finish: number, total: number, item: AssetManager.RequestItem) => void;\r\n        const complete = (args.length >= 1\r\n            && (args[args.length - 1] instanceof Function)\r\n            ? args[args.length - 1]\r\n            : null\r\n        ) as (result: AudioClip | null) => any;\r\n\r\n        if (!name) {\r\n            this.error('load', 'fail');\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        // 判断有无缓存\r\n        const audio = this.audioCache[soundName];\r\n        if (audio) {\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(audio);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 远程加载\r\n        Core.inst.manager.loader.load({\r\n            path: name,\r\n            bundle: bundleName,\r\n            type: AudioClip,\r\n            onProgress: progress,\r\n            onComplete: (audioClip) => {\r\n                if (!isValid(this)) return;\r\n                if (audioClip) {\r\n                    this.audioCache[soundName] = audioClip;\r\n                    complete && complete(audioClip);\r\n                } else {\r\n                    complete && complete(null);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源\r\n     * @param name 声音路径\r\n     * @param bundle Bundle名，默认为app-sound\r\n     */\r\n    public release(name: string, bundle: string): void;\r\n    public release(name: E | M): void;\r\n    public release(name: string, bundle?: string) {\r\n        const bundleName = bundle || BundleName;\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        delete this.audioCache[soundName];\r\n        Core.inst.manager.loader.release({ bundle: bundleName, path: name, type: AudioClip });\r\n    }\r\n\r\n    /**\r\n     * 播放默认音乐\r\n     */\r\n    public playDefaultMusic(onPlay?: Function) {\r\n        if (this.defaultMusicName) {\r\n            this.playMusic({ name: <M>this.defaultMusicName, volume: this.defaultMusicVolume, onPlay });\r\n        } else {\r\n            this.warn('defaultMusicName 不存在');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放默认音效\r\n     */\r\n    public playDefaultEffect(onPlay?: (audioID: number) => void) {\r\n        if (this.defaultEffectName) {\r\n            this.playEffect({ name: <E>this.defaultEffectName, volume: this.defaultEffectVolume, onPlay });\r\n        } else {\r\n            this.warn('defaultEffectName 不存在');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置按钮点击播放的音效，优先级高于默认音效\r\n     * @param name 音效(如果为空，则使用默认音效)\r\n     * @param opts.volume 音量\r\n     * @param opts.interval 多少秒内不会重复播放\r\n     */\r\n    public setButtonEffect(target: Button, name?: E, opts?: {\r\n        volume: number,\r\n        interval: number\r\n    }) {\r\n        if (name) {\r\n            const { volume = 1, interval = 0 } = opts || {};\r\n            //@ts-ignore\r\n            target.node['useDefaultEffect'] = false;\r\n            target.node.targetOff(this);\r\n            target.node.on(Button.EventType.CLICK, function (this: SoundManager<E, M>) {\r\n                this.playEffect({ name, volume, interval });\r\n            }, this);\r\n        } else {\r\n            //@ts-ignore\r\n            target.node['useDefaultEffect'] = true;\r\n            target.node.targetOff(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param name 音效\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param loop 循环播放\r\n     * @param volume 音量\r\n     * @param interval 多少秒内不会重复播放\r\n     */\r\n    public playEffect({ name, volume, loop, interval, onEnded, onPlay, onError }: playEffect<E>): void;\r\n    public playEffect({ name, bundle, volume, loop, interval, onEnded, onPlay, onError }: playEffectWidthBundle): void;\r\n    public playEffect({ name, bundle, volume = 1, loop = false, interval = 0, onEnded, onPlay, onError }) {\r\n        if (!name) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n\r\n        const bundleName = bundle || BundleName;\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        // 静音不允许播放\r\n        if (this.isEffectMute) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n        // 正在播放中，不允许重复播放\r\n        if (this.effectInterval[soundName] && Date.now() < this.effectInterval[soundName]) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n\r\n        // 加载音乐\r\n        this.load(name, bundleName, (audioClip) => {\r\n            if (!isValid(this)) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 静音不允许播放\r\n            if (this.isEffectMute) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 正在播放中，不允许重复播放\r\n            if (this.effectInterval[soundName] && Date.now() < this.effectInterval[soundName]) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            if (!audioClip) {\r\n                this.error(`playEffect ${name} 不存在或加载失败`);\r\n                onError && onError();\r\n                return;\r\n            }\r\n\r\n            if (interval > 0) {\r\n                this.effectInterval[soundName] = Date.now() + interval * 1000;\r\n            }\r\n\r\n            AudioEngine.inst.playEffect(audioClip, volume, loop, onPlay, onEnded);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param name 音效\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param loop 循环播放\r\n     * @param volume 音量\r\n     * @param interval 多少秒内不会重复播放\r\n     * @returns 如果Promise返回值是null(非真)，则播放失败\r\n     */\r\n    public async playEffectAsync(params: playEffectAsync<E>): Promise<number>;\r\n    public async playEffectAsync(params: playEffectWidthBundleAsync): Promise<number>;\r\n    public async playEffectAsync(params: any): Promise<number> {\r\n        return new Promise((resolve) => {\r\n            this.playEffect({\r\n                ...params,\r\n                onPlay: (audioID) => {\r\n                    resolve(audioID);\r\n                },\r\n                onError: () => {\r\n                    resolve(null);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 暂停音效\r\n     * @param id \r\n     * @returns \r\n     */\r\n    public pauseEffect(id: number) {\r\n        return AudioEngine.inst.pauseEffect(id);\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音效\r\n     * @returns \r\n     */\r\n    public pauseAllEffects() {\r\n        return AudioEngine.inst.pauseAllEffects();\r\n    }\r\n\r\n    /**\r\n     * 恢复音效\r\n     * @param id \r\n     * @returns \r\n     */\r\n    public resumeEffect(id: number) {\r\n        return AudioEngine.inst.resumeEffect(id);\r\n    }\r\n\r\n    /**\r\n     * 恢复所有音效\r\n     * @returns \r\n     */\r\n    public resumeAllEffects() {\r\n        return AudioEngine.inst.resumeAllEffects();\r\n    }\r\n\r\n    /**\r\n     * 停止音效\r\n     * @param id \r\n     * @returns \r\n     */\r\n    public stopEffect(id: number) {\r\n        return AudioEngine.inst.stopEffect(id);\r\n    }\r\n\r\n    /**\r\n     * 停止所有音效\r\n     * @returns \r\n     */\r\n    public stopAllEffects() {\r\n        return AudioEngine.inst.stopAllEffects();\r\n    }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param volume 音量\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param force 是否强制重新播放\r\n     */\r\n    public playMusic(params: playMusic<M>): void;\r\n    public playMusic(params: playMusicWidthBundle): void;\r\n    public playMusic({ name, bundle, volume = 1, force = false, onPlay, onError }): void {\r\n        if (!name) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n\r\n        const bundleName = bundle || BundleName;\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        // 该音乐正在播放中\r\n        if (!force && this.playingMusic.id !== -1 && this.playingMusic.name === soundName) {\r\n            AudioEngine.inst.setMusicVolume(volume);\r\n            onPlay && onPlay();\r\n            return;\r\n        }\r\n\r\n        // 先停止当前音乐\r\n        this.stopMusic();\r\n\r\n        // 播放操作uuid\r\n        const uuid = this.createUUID();\r\n        this.playingMusic.uuid = uuid;\r\n        // 记录要播放音乐的名字\r\n        this.playingMusic.name = soundName;\r\n        // 记录要播放音乐的音量\r\n        this.playingMusic.volume = volume;\r\n        // 记录音乐状态\r\n        this.playingMusic.playing = true;\r\n        this.playingMusic.paused = false;\r\n\r\n        // 静音\r\n        if (this.isMusicMute) {\r\n            onPlay && onPlay();\r\n            return;\r\n        }\r\n\r\n        // 加载音乐\r\n        this.load(name, bundleName, (audioClip) => {\r\n            if (!isValid(this)) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 不合法\r\n            if (this.playingMusic.id !== -1) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            if (this.playingMusic.name !== soundName) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            if (this.playingMusic.uuid !== this.playingMusic.uuid) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 不存在\r\n            if (!audioClip) {\r\n                this.error(`playMusic ${name} 不存在或加载失败`);\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 静音\r\n            if (this.isMusicMute) {\r\n                onPlay && onPlay();\r\n                return;\r\n            }\r\n\r\n            this.playingMusic.id = AudioEngine.inst.playMusic(audioClip, volume, onPlay);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param volume 音量\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param force 是否强制重新播放\r\n     * @returns 如果Promise返回值是false，则播放失败\r\n     */\r\n    public playMusicAsync(params: playMusicAsync<M>): Promise<boolean>;\r\n    public playMusicAsync(params: playMusicWidthBundleAsync): Promise<boolean>;\r\n    public playMusicAsync(params: any): Promise<boolean> {\r\n        return new Promise((resolve) => {\r\n            this.playMusic({\r\n                ...params,\r\n                onPlay: () => {\r\n                    resolve(true);\r\n                },\r\n                onError: () => {\r\n                    resolve(false);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 重新播放音乐\r\n     */\r\n    public replayMusic(onPlay?: Function) {\r\n        if (!this.playingMusic.playing) return;\r\n        if (!this.playingMusic.name) return;\r\n        if (this.playingMusic.name.indexOf('://') > 0) {\r\n            const [bundle, name] = this.playingMusic.name.split('://');\r\n            this.playMusic({\r\n                name,\r\n                bundle,\r\n                volume: this.playingMusic.volume,\r\n                force: true,\r\n                onPlay\r\n            });\r\n        } else {\r\n            this.playMusic({\r\n                name: this.playingMusic.name as any,\r\n                volume: this.playingMusic.volume,\r\n                force: true,\r\n                onPlay\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停音乐\r\n     */\r\n    public pauseMusic() {\r\n        if (!this.playingMusic.playing) return false;\r\n        this.playingMusic.paused = true;\r\n        return AudioEngine.inst.pauseMusic();\r\n    }\r\n\r\n    /**\r\n     * 恢复音乐\r\n     */\r\n    public resumeMusic() {\r\n        if (!this.playingMusic.playing) return false;\r\n        this.playingMusic.paused = false;\r\n        return AudioEngine.inst.resumeMusic();\r\n    }\r\n\r\n    /**\r\n     * 停止音乐\r\n     */\r\n    public stopMusic() {\r\n        this.playingMusic.playing = false;\r\n        this.playingMusic.paused = false;\r\n        this.playingMusic.volume = 1;\r\n        this.playingMusic.name = '';\r\n        this.playingMusic.uuid = '';\r\n        this.playingMusic.id = -1;\r\n        return AudioEngine.inst.stopMusic();\r\n    }\r\n\r\n    /**\r\n     * 设置音乐静音\r\n     * @param mute 是否静音\r\n     * @param isCache 静音状态是否写入缓存(通过localstorage)\r\n     */\r\n    public setMusicMute(mute: boolean, isCache = false) {\r\n        isCache && storage.set(this.musicMuteCacheKey, mute);\r\n        AudioEngine.inst.setMusicMute(mute);\r\n        if (!mute && this.playingMusic.name) {\r\n            if (this.playingMusic.name.indexOf('://') > 0) {\r\n                const [bundle, name] = this.playingMusic.name.split('://');\r\n                this.playMusic({\r\n                    name,\r\n                    bundle,\r\n                    volume: this.playingMusic.volume,\r\n\r\n                });\r\n            } else {\r\n                this.playMusic({\r\n                    name: this.playingMusic.name as any,\r\n                    volume: this.playingMusic.volume\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 音乐是否正在播放\r\n     */\r\n    get isMusicPlaying() {\r\n        return this.playingMusic.playing;\r\n    }\r\n\r\n    /**\r\n     * 音乐是否暂停\r\n     */\r\n    get isMusicPaused() {\r\n        return this.playingMusic.paused;\r\n    }\r\n\r\n    /**\r\n     * 音乐是否静音\r\n     */\r\n    public get isMusicMute() {\r\n        return AudioEngine.inst.getMusicMute();\r\n    }\r\n\r\n    /**\r\n     * 设置音效静音\r\n     * @param mute 是否静音\r\n     * @param isCache 静音状态是否写入缓存(通过localstorage)\r\n     */\r\n    public setEffectMute(mute: boolean, isCache = false) {\r\n        AudioEngine.inst.setGlobalEffectsMute(mute);\r\n        isCache && storage.set(this.effectMuteCacheKey, mute);\r\n    }\r\n\r\n    /**\r\n     * 音效是否静音\r\n     */\r\n    public get isEffectMute() {\r\n        return AudioEngine.inst.getGlobalEffectsMute();\r\n    }\r\n\r\n    /**\r\n     * 设置音乐音量倍率\r\n     * @param scale \r\n     * @param isCache 音量倍率是否写入缓存(通过localstorage)\r\n     */\r\n    public setMusicVolumeScale(scale: number, isCache = false) {\r\n        AudioEngine.inst.setMusicVolumeScale(scale);\r\n        isCache && storage.set(this.musicVolumeScaleCacheKey, scale);\r\n    }\r\n\r\n    /**\r\n     * 音乐音量倍率\r\n     */\r\n    public get musicVolumeScale() {\r\n        return AudioEngine.inst.getMusicVolumeScale();\r\n    }\r\n\r\n    /**\r\n     * 设置音效音量倍率\r\n     * @param scale \r\n     * @param isCache 音量倍率是否写入缓存(通过localstorage)\r\n     */\r\n    public setEffectVolumeScale(scale: number, isCache = false) {\r\n        AudioEngine.inst.setGlobalEffectsVolumeScale(scale);\r\n        isCache && storage.set(this.effectVolumeScaleCacheKey, scale);\r\n    }\r\n\r\n    /**\r\n     * 音效音量倍率\r\n     */\r\n    public get effectVolumeScale() {\r\n        return AudioEngine.inst.getGlobalEffectsVolumeScale();\r\n    }\r\n}","import { error, js, log, sys } from 'cc';\r\n\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction encode(text: string, key: string) {\r\n    key = key || chars;\r\n    let encrypted = '';\r\n    for (let i = 0; i < text.length; i++) {\r\n        const charCode = text.charCodeAt(i) ^ key.charCodeAt(i % key.length);\r\n        encrypted += String.fromCharCode(charCode);\r\n    }\r\n    return encrypted;\r\n}\r\n\r\nfunction decode(encryptedText: string, key: string) {\r\n    key = key || chars;\r\n    let decrypted = '';\r\n    for (let i = 0; i < encryptedText.length; i++) {\r\n        const charCode = encryptedText.charCodeAt(i) ^ key.charCodeAt(i % key.length);\r\n        decrypted += String.fromCharCode(charCode);\r\n    }\r\n    return decrypted;\r\n}\r\n\r\nconst weekOfYear = function (curDate?: Date) {\r\n    /*\r\n     date1是当前日期\r\n     date2是当年第一天\r\n     d是当前日期是今年第多少天\r\n     用d + 当前年的第一天的周差距的和在除以7就是本年第几周\r\n     */\r\n    curDate = curDate || new Date();\r\n    let a = curDate.getFullYear();\r\n    let b = curDate.getMonth() + 1;\r\n    let c = curDate.getDate();\r\n\r\n    let date1 = new Date(a, b - 1, c), date2 = new Date(a, 0, 1),\r\n        d = Math.round((date1.valueOf() - date2.valueOf()) / 86400000);\r\n    return Math.ceil(\r\n        (d + ((date2.getDay() + 1) - 1)) / 7\r\n    );\r\n};\r\n\r\nconst getWeekUpdateTime = function () {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const week = weekOfYear(date);\r\n    return year + '' + week;\r\n};\r\n\r\nconst getDayUpdateTime = function (curDate?: Date) {\r\n    curDate = curDate || new Date();\r\n    return curDate.toLocaleDateString();\r\n};\r\n\r\nexport class Storage {\r\n    static setting: {\r\n        /**\r\n         * 加密密钥  \r\n         * - 如果需要加密内容，请设置密钥的值\r\n         */\r\n        secretKey: string\r\n    } = {\r\n            secretKey: ''\r\n        };\r\n\r\n    private _cache = {};\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    set(key: string, value: unknown) {\r\n        if (typeof key === 'string' && typeof value !== 'undefined') {\r\n            try {\r\n                const data = JSON.stringify(value);\r\n                if (Storage.setting.secretKey) {\r\n                    sys.localStorage.setItem(key, encode(data, Storage.setting.secretKey));\r\n                } else {\r\n                    sys.localStorage.setItem(key, data);\r\n                }\r\n                // 设置缓存\r\n                this._cache[key] = data;\r\n                return true;\r\n            } catch (err) { log(err); }\r\n        } else {\r\n            error('storage set error');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 返回值为undefined代表调用失败\r\n     */\r\n    get(key: string) {\r\n        // 先读取缓存\r\n        if (typeof this._cache[key] !== 'undefined') {\r\n            return JSON.parse(this._cache[key]);\r\n        }\r\n\r\n        let result = null;\r\n        try {\r\n            let data = sys.localStorage.getItem(key);\r\n            if (data && typeof data === 'string') {\r\n                if (Storage.setting.secretKey) data = decode(data, Storage.setting.secretKey);\r\n                // 设置缓存\r\n                this._cache[key] = data;\r\n                result = JSON.parse(data);\r\n            } else if (data !== '' && data !== null) {\r\n                result = undefined;\r\n            }\r\n        } catch (e) {\r\n            result = undefined;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    add(key: string, value: number = 1) {\r\n        let result = this.get(key);\r\n        if (result !== undefined) {\r\n            result = result || 0;\r\n            result += value;\r\n            if (this.set(key, result)) {\r\n                return result;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    remove(key: string) {\r\n        try {\r\n            sys.localStorage.removeItem(key);\r\n            delete this._cache[key];\r\n            return true;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    clear() {\r\n        try {\r\n            sys.localStorage.clear();\r\n            js.clear(this._cache);\r\n            return true;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置本周数据 [返回值为false代表调用失败]\r\n     * @param {Function} cb 当已存在本周的数据时，会根据cb的返回决定是否存储，true代表存储\r\n     */\r\n    setWeek(key: string, value: unknown, cb?: (oldValue: unknown, newValue: unknown) => boolean) {\r\n        const updateTime = getWeekUpdateTime();\r\n\r\n        if (cb) {\r\n            const data = this.getWeek(key);\r\n            if (data !== undefined) {\r\n                if (data === null || cb(data, value)) {\r\n                    return this.set(key, {\r\n                        data: value,\r\n                        updateTime: updateTime\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            return this.set(key, {\r\n                data: value,\r\n                updateTime: updateTime\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取本周数据 [返回值为undefined代表调用失败]\r\n     */\r\n    getWeek(key: string) {\r\n        const data = this.get(key);\r\n        if (data && data.updateTime == getWeekUpdateTime()) {\r\n            return data.data;\r\n        }\r\n        return data && null;\r\n    }\r\n\r\n    /**\r\n     * 设置本天数据 [返回值为false代表调用失败]\r\n     * @param {Function} cb 当已存在本天的数据时，会根据cb的返回决定是否存储，true代表存储\r\n     */\r\n    setDay(key: string, value: unknown, cb?: (oldValue: unknown, newValue: unknown) => boolean) {\r\n        const updateTime = getDayUpdateTime();\r\n\r\n        if (cb) {\r\n            const data = this.getDay(key);\r\n            if (data !== undefined) {\r\n                if (data === null || cb(data, value)) {\r\n                    return this.set(key, {\r\n                        data: value,\r\n                        updateTime: updateTime\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            return this.set(key, {\r\n                data: value,\r\n                updateTime: updateTime\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取本天数据 [返回值为undefined代表调用失败]\r\n     * @param {*} key \r\n     */\r\n    getDay(key: string) {\r\n        const data = this.get(key);\r\n        if (data && data.updateTime == getDayUpdateTime()) {\r\n            return data.data;\r\n        }\r\n        return data && null;\r\n    }\r\n}\r\n\r\nexport default new Storage();","interface IHandle {\r\n    (next: (data?: any) => boolean, retry: (timeout?: number) => Promise<boolean>, end: (data?: any) => boolean): void\r\n}\r\n\r\ninterface IFinish<T> {\r\n    (results?: T, success?: boolean): any\r\n}\r\n\r\nexport interface ITask<T extends Array<any> = any[]> {\r\n    readonly results: Readonly<T>;\r\n    size(): number;\r\n    add(handle: IHandle): this;\r\n    start(finish?: IFinish<T> | Function): this;\r\n    stop(): boolean;\r\n    isRunning(): boolean;\r\n}\r\n\r\n/**\r\n * 顺序执行\r\n */\r\nexport class Sync<T extends Array<any>> implements ITask<T> {\r\n    private running = false;\r\n    private index: number = -1;\r\n    private list: IHandle[] = [];\r\n    private finish: IFinish<T> | Function = null;\r\n\r\n    /**\r\n     * 每个handle的返回值，通过next或end存储\r\n     */\r\n    public results: T = [] as T;\r\n\r\n    /**\r\n     * 任务数量\r\n     * @returns \r\n     */\r\n    public size(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    /**\r\n     * 添加一个任务\r\n     * @param handle \r\n     * @returns \r\n     */\r\n    public add(handle: IHandle) {\r\n        this.list.push(handle);\r\n        this.results.push(undefined);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 开始执行所有任务\r\n     * @param finish 执行完毕回调\r\n     * @returns \r\n     */\r\n    public start(finish?: IFinish<T> | Function) {\r\n        if (this.running) {\r\n            return this;\r\n        }\r\n\r\n        this.running = true;\r\n        this.index = -1;\r\n        this.finish = finish;\r\n\r\n        this.next(this.index);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 停止所有任务\r\n     * @returns \r\n     */\r\n    public stop(): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否正在执行\r\n     * @returns \r\n     */\r\n    public isRunning() {\r\n        return this.running;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @returns \r\n     */\r\n    public isStop() {\r\n        return !this.running;\r\n    }\r\n\r\n    private end(data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (typeof data !== 'undefined') {\r\n            this.results[this.index] = data;\r\n        }\r\n\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, true);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private next(index: number, data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index !== this.index) return false;\r\n\r\n        if (typeof data !== 'undefined') {\r\n            this.results[this.index] = data;\r\n        }\r\n\r\n        if (++this.index < this.list.length) {\r\n            this.retry(this.index);\r\n        } else {\r\n            this.end();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private retry(index: number): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index !== this.index) return false;\r\n\r\n        const handle = this.list[index];\r\n        handle && handle(\r\n            (data?: any) => this.next(index, data),\r\n            (timeout = 0) => {\r\n                return new Promise(resolve => {\r\n                    if (timeout > 0) {\r\n                        setTimeout(() => {\r\n                            resolve(this.retry(index));\r\n                        }, timeout * 1000);\r\n                    } else {\r\n                        resolve(this.retry(index));\r\n                    }\r\n                });\r\n            },\r\n            (data?: any) => this.end(data)\r\n        );\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n/**\r\n * 同时执行\r\n */\r\nexport class ASync<T extends Array<any>> implements ITask<T> {\r\n    private running = false;\r\n    private count: number = 0;\r\n    private list: IHandle[] = [];\r\n    private finish: IFinish<T> | Function = null;\r\n\r\n    /**\r\n     * 每个handle的返回值，通过next或end存储\r\n     */\r\n    public results: T = [] as T;\r\n\r\n    /**\r\n     * 任务数量\r\n     * @returns \r\n     */\r\n    public size(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    /**\r\n     * 添加一个任务\r\n     * @param handle \r\n     * @returns \r\n     */\r\n    public add(handle: IHandle) {\r\n        this.list.push(handle);\r\n        this.results.push(undefined);\r\n\r\n        if (this.running) {\r\n            this.retry(this.list.length - 1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 开始执行所有任务\r\n     * @param finish 执行完毕回调\r\n     * @returns \r\n     */\r\n    public start(finish?: IFinish<T> | Function) {\r\n        if (this.running) {\r\n            return this;\r\n        }\r\n\r\n        this.running = true;\r\n        this.count = 0;\r\n        this.finish = finish;\r\n\r\n        if (this.list.length) {\r\n            for (let index = 0; index < this.list.length; index++) {\r\n                this.retry(index);\r\n            }\r\n        } else {\r\n            this.end && this.end(this.count);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 停止所有任务\r\n     * @returns \r\n     */\r\n    public stop(): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否正在执行\r\n     * @returns \r\n     */\r\n    public isRunning() {\r\n        return this.running;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @returns \r\n     */\r\n    public isStop() {\r\n        return !this.running;\r\n    }\r\n\r\n    private end(index: number, data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index >= 0 && index < this.results.length) {\r\n            if (this.results[index] || this.results[index] === null) return false;\r\n            this.results[index] = typeof data !== 'undefined' ? data : null;\r\n        }\r\n\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, true);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private next(index: number, data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index >= 0 && index < this.results.length) {\r\n            if (this.results[index] || this.results[index] === null) return false;\r\n            this.results[index] = typeof data !== 'undefined' ? data : null;\r\n        }\r\n\r\n        if (++this.count === this.list.length) {\r\n            this.end && this.end(this.count);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private retry(index: number): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        const handle = this.list[index];\r\n        handle && handle(\r\n            (data?: any) => this.next(index, data),\r\n            (timeout = 0) => {\r\n                return new Promise(resolve => {\r\n                    if (timeout > 0) {\r\n                        setTimeout(() => {\r\n                            resolve(this.retry(index));\r\n                        }, timeout * 1000);\r\n                    } else {\r\n                        resolve(this.retry(index));\r\n                    }\r\n                });\r\n            },\r\n            (data?: any) => this.end(index, data)\r\n        );\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class Any<T extends Array<any>> implements ITask<T> {\r\n    private task = new Sync();\r\n\r\n    /**\r\n     * 每个handle的返回值，通过next或end存储\r\n     */\r\n    public get results(): T {\r\n        return this.task.results as T;\r\n    }\r\n\r\n    /**\r\n     * 任务数量\r\n     * @returns \r\n     */\r\n    public size() {\r\n        return this.task.size();\r\n    }\r\n\r\n    /**\r\n     * 添加一个任务\r\n     * @param handle \r\n     * @returns \r\n     */\r\n    public add(handles: IHandle | IHandle[]) {\r\n        if (handles instanceof Array) {\r\n            const async = new ASync();\r\n            handles.forEach(handle => async.add(handle));\r\n            this.task.add(async.start.bind(async));\r\n        } else {\r\n            this.task.add(handles);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 开始执行所有任务\r\n     * @param finish 执行完毕回调\r\n     * @returns \r\n     */\r\n    public start(finish?: IFinish<T> | Function) {\r\n        this.task.start(finish);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 停止所有任务\r\n     * @returns \r\n     */\r\n    public stop() {\r\n        return this.task.stop();\r\n    }\r\n\r\n    /**\r\n     * 是否正在执行\r\n     * @returns \r\n     */\r\n    public isRunning() {\r\n        return this.task.isRunning();\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @returns \r\n     */\r\n    public isStop() {\r\n        return this.task.isStop();\r\n    }\r\n}\r\n\r\ninterface IExecuteCallBack {\r\n    (retry: (timeout?: number) => void): void\r\n}\r\n\r\nconst task = {\r\n    /**\r\n     * 任务顺序执行\r\n     */\r\n    createSync<T extends Array<any>>(): Sync<T> {\r\n        return new Sync<T>();\r\n    },\r\n\r\n    /**\r\n     * 任务同时执行\r\n     */\r\n    createASync<T extends Array<any>>(): ASync<T> {\r\n        return new ASync<T>();\r\n    },\r\n\r\n    /**\r\n     * 根据参数指定执行顺序\r\n     * @example\r\n     * createAny()\r\n     * .add(1).add(2).add(3).add(4)\r\n     * .add([5,6,7])\r\n     * .add(8)\r\n     * 执行顺序，1，2，3，4依次执行，然后同时执行5，6，7，最后执行8\r\n     */\r\n    createAny<T extends Array<any>>() {\r\n        return new Any<T>();\r\n    },\r\n\r\n    /**\r\n     * 执行单个任务\r\n     */\r\n    execute(fun: IExecuteCallBack, retryMax = -1, retryFinish?: Function) {\r\n        fun(function retry(timeout = 0) {\r\n            if (retryMax === 0) return retryFinish && retryFinish();\r\n            retryMax = retryMax > 0 ? retryMax - 1 : retryMax;\r\n            if (timeout > 0) {\r\n                setTimeout(() => task.execute(fun, retryMax, retryFinish), timeout * 1000);\r\n            } else {\r\n                task.execute(fun, retryMax, retryFinish);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default task;","import { _decorator } from 'cc';\r\nimport BaseManager from '../../base/BaseManager';\r\nconst { ccclass } = _decorator;\r\n\r\ntype ICallback = (...args: any[]) => any;\r\n\r\nclass DailyTimer {\r\n    // 获取当前时间相对于当日零点的毫秒数\r\n    private static getDayTimeMs(date: Date): number {\r\n        return (\r\n            date.getHours() * 3600 +\r\n            date.getMinutes() * 60 +\r\n            date.getSeconds()\r\n        ) * 1000 + date.getMilliseconds();\r\n    }\r\n\r\n    // 静态方法解析时间为毫秒数\r\n    private static parseTimeToMs(h: number, m: number, s: number): number {\r\n        return ((h * 3600 + m * 60 + s) * 1000) % 86400000;\r\n    }\r\n\r\n    private readonly startMs: number;  // 起始时间毫秒数（相对于当日零点）\r\n    private readonly endMs: number;    // 结束时间毫秒数\r\n\r\n    // 用于检查当前时间是否可触发回调\r\n    private checkDay = 0;\r\n\r\n    constructor(\r\n        time: string,\r\n        public readonly callback: ICallback,\r\n        public readonly target?: unknown,\r\n        public readonly once: boolean = false\r\n    ) {\r\n        // 使用解构赋值提高可读性\r\n        const [startSegment, endSegment = startSegment] = time.split('-');\r\n\r\n        // 开始时间\r\n        const [startH = 0, startM = 0, startS = 0] = startSegment.split(':').map(\r\n            part => Math.max(0, parseInt(part, 10) || 0)\r\n        );\r\n        this.startMs = DailyTimer.parseTimeToMs(startH, startM, startS);\r\n\r\n        // 结束时间\r\n        const [endH = 0, endM = 0, endS = 0] = endSegment.split(':').map(\r\n            part => Math.max(0, parseInt(part, 10) || 0)\r\n        );\r\n        this.endMs = DailyTimer.parseTimeToMs(endH, endM, endS);\r\n        // 结束时间与开始时间不能相同\r\n        if (this.endMs === this.startMs) {\r\n            if (startM === 0 && startS === 0) {\r\n                this.endMs = DailyTimer.parseTimeToMs(startH + 1, startM, startS);\r\n            } else if (startS === 0) {\r\n                this.endMs = DailyTimer.parseTimeToMs(startH, startM + 1, startS);\r\n            } else {\r\n                this.endMs = DailyTimer.parseTimeToMs(startH, startM, startS + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取当前时间是否在时间范围内\r\n    private isInRange(now: Date): boolean {\r\n        const currentMs = DailyTimer.getDayTimeMs(now);\r\n\r\n        // 处理跨天时间段（如 23:00-01:00）\r\n        return this.startMs <= this.endMs\r\n            ? currentMs >= this.startMs && currentMs < this.endMs\r\n            : currentMs >= this.startMs || currentMs < this.endMs;\r\n    }\r\n\r\n    update(now: Date): boolean {\r\n        const dateDay = now.getDay();\r\n\r\n        if (this.checkDay === dateDay) return false;\r\n        if (!this.isInRange(now)) return false;\r\n\r\n        this.checkDay = dateDay;\r\n        this.callback.call(this.target);\r\n\r\n        return this.once;\r\n    }\r\n}\r\n\r\nclass IntervalTimer {\r\n    private elapsed: number = 0;\r\n\r\n    constructor(\r\n        public readonly interval: number,\r\n        public readonly callback: ICallback,\r\n        public readonly target?: unknown,\r\n        public readonly once: boolean = false\r\n    ) { }\r\n\r\n    update(dt: number): boolean {\r\n        this.elapsed += dt;\r\n        let completed = false;\r\n\r\n        // 处理可能多次触发的情况（当dt > interval时）\r\n        while (this.elapsed >= this.interval) {\r\n            this.callback.call(this.target);\r\n            this.elapsed -= this.interval;\r\n\r\n            if (this.once) {\r\n                completed = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return completed;\r\n    }\r\n}\r\n\r\nclass Timer {\r\n    static update(timer: Timer, dt: number) {\r\n        return timer.update(dt);\r\n    }\r\n\r\n    private intervalTimer: IntervalTimer[] = [];\r\n\r\n    /**\r\n     * 注册定时器\r\n     * @param interval \r\n     * @param callback \r\n     * @param target \r\n     * @param once \r\n     */\r\n    register(\r\n        interval: number,\r\n        callback: ICallback,\r\n        target?: unknown,\r\n        once?: boolean\r\n    ): void {\r\n        const timer = new IntervalTimer(interval, callback, target, once || false);\r\n        this.intervalTimer.push(timer);\r\n    }\r\n\r\n    /**\r\n     * 取消定时器\r\n     * @param callback \r\n     * @param target \r\n     */\r\n    unregister(callback: ICallback, target?: unknown): void {\r\n        if (typeof target === 'undefined') {\r\n            this.intervalTimer = this.intervalTimer.filter(\r\n                timer => timer.callback !== callback\r\n            );\r\n        } else {\r\n            this.intervalTimer = this.intervalTimer.filter(\r\n                timer => !(timer.callback === callback && timer.target === target)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消所有定时器\r\n     */\r\n    unregisterAll() {\r\n        this.intervalTimer = [];\r\n    }\r\n\r\n    private dailyTimers: DailyTimer[] = [];\r\n\r\n    /**\r\n     * 注册每日触发器\r\n     * @param time 24小时制,精确到秒\r\n     * \r\n     * @example\r\n     * registerDailyTrigger('16', ...) 等同于 registerDailyTrigger('16-17', ...)\r\n     * registerDailyTrigger('8-9:00', ...) 等同于 registerDailyTrigger('8', ...)\r\n     * registerDailyTrigger('8:00:01-24', ...)\r\n     */\r\n    registerDailyTrigger(\r\n        time: string,\r\n        callback: ICallback,\r\n        target?: unknown,\r\n        once?: boolean\r\n    ) {\r\n        const timer = new DailyTimer(time, callback, target, once || false);\r\n        this.dailyTimers.push(timer);\r\n    }\r\n\r\n    /**\r\n     * 取消每日触发器\r\n     */\r\n    unregisterDailyTrigger(callback: ICallback, target?: unknown) {\r\n        if (typeof target === 'undefined') {\r\n            this.dailyTimers = this.dailyTimers.filter(\r\n                timer => timer.callback !== callback\r\n            );\r\n        } else {\r\n            this.dailyTimers = this.dailyTimers.filter(\r\n                timer => !(timer.callback === callback && timer.target === target)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消所有每日触发器\r\n     */\r\n    unregisterAllDailyTrigger() {\r\n        this.dailyTimers = [];\r\n    }\r\n\r\n    /**\r\n     * 清除所有定时器和触发器\r\n     */\r\n    clear() {\r\n        this.intervalTimer = [];\r\n        this.dailyTimers = [];\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        for (let index = 0; index < this.intervalTimer.length; index++) {\r\n            const timer = this.intervalTimer[index];\r\n            if (timer.update(dt)) {\r\n                this.intervalTimer.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n\r\n        const date = new Date();\r\n        for (let index = 0; index < this.dailyTimers.length; index++) {\r\n            const timer = this.dailyTimers[index];\r\n            if (timer.update(date)) {\r\n                this.dailyTimers.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@ccclass('TimerManager')\r\nexport default class TimerManager extends BaseManager {\r\n    private timers: Map<string | number, Timer> = new Map();\r\n\r\n    /**\r\n     * 清除所有定时器\r\n     */\r\n    clear() {\r\n        this.timers.forEach((timer) => {\r\n            timer.clear();\r\n        });\r\n        this.timers.clear();\r\n    }\r\n\r\n    /**\r\n     * 删除定时器\r\n     * @param key 定时器key\r\n     */\r\n    delete(key: string | number) {\r\n        const timer = this.timers.get(key);\r\n        if (!timer) return;\r\n\r\n        this.timers.delete(key);\r\n        timer.clear();\r\n    }\r\n\r\n    /**\r\n     * 获取定时器\r\n     * @param key 定时器key\r\n     */\r\n    get(key: string | number): Timer {\r\n        if (this.timers.has(key)) {\r\n            return this.timers.get(key);\r\n        }\r\n\r\n        const timer = new Timer();\r\n        this.timers.set(key, timer);\r\n        return timer;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        this.timers.forEach((timer) => {\r\n            Timer.update(timer, dt);\r\n        });\r\n    }\r\n}\r\n","import { Asset, AssetManager, Camera, Canvas, Component, Event, Layers, Node, Prefab, RenderTexture, ResolutionPolicy, Scene, SceneAsset, Settings, UITransform, Widget, _decorator, director, instantiate, isValid, js, screen, settings, size, view } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport { IMiniViewName, IViewName } from '../../../../../assets/app-builtin/app-admin/executor';\r\nimport Core from '../../Core';\r\nimport BaseManager from '../../base/BaseManager';\r\nimport BaseView, { IHideParamOnHide, IShade, IShowParamAttr, IShowParamOnHide, IShowParamOnShow, IViewType, ViewType } from '../../base/BaseView';\r\nimport UIMgrLoading from './comp/UIMgrLoading';\r\nimport UIMgrShade from './comp/UIMgrShade';\r\nimport UIMgrToast from './comp/UIMgrToast';\r\nimport UIMgrZOrder from './comp/UIMgrZOrder';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\ninterface IShowParams<T, IShow = any, IShowReturn = any, IHideReturn = any> {\r\n    /**UI名 */\r\n    name: T,\r\n    /**\r\n     * 数据\r\n     * - 被onShow接收\r\n     */\r\n    data?: IShow,\r\n    /**\r\n     * 是否将UI显示在最上 \r\n     * - 默认true\r\n     */\r\n    top?: boolean,\r\n    /**\r\n     * 队列模式，一个UI关闭后，是否展示下一个UI\r\n     * - join: 排队 \r\n     * - jump: 插队(到首位)\r\n     */\r\n    queue?: 'join' | 'jump',\r\n    /**静默 默认false(不显示加载loading，也不屏蔽触摸) */\r\n    silent?: boolean,\r\n    /**UI触发onShow后 */\r\n    onShow?: IShowParamOnShow<IShowReturn>,\r\n    /**UI触发onHide后 */\r\n    onHide?: IShowParamOnHide<IHideReturn>,\r\n    /**当code的值为ErrorCode.LogicError时，如果返回true，则自动重试 */\r\n    onError?: (result: string, code: ErrorCode) => true | void,\r\n    /**\r\n     * @private\r\n     * @deprecated\r\n     */\r\n    attr?: IShowParamAttr,\r\n}\r\n\r\ninterface IShowAsyncParams<T, IShow = any, IShowReturn = any> {\r\n    /**UI名 */\r\n    name: T,\r\n    /**\r\n     * 数据\r\n     * - 被onShow接收\r\n     */\r\n    data?: IShow,\r\n    /**\r\n     * 是否将UI显示在最上 \r\n     * - 默认true\r\n     */\r\n    top?: boolean,\r\n    /**\r\n     * 队列模式，一个UI关闭后，是否展示下一个UI\r\n     * - join: 排队 \r\n     * - jump: 插队(到首位)\r\n     */\r\n    queue?: 'join' | 'jump',\r\n    /**静默 默认false(不显示加载loading，也不屏蔽触摸) */\r\n    silent?: boolean,\r\n    /**UI触发onShow后 */\r\n    onShow?: IShowParamOnShow<IShowReturn>,\r\n    /**当code的值为ErrorCode.LogicError时，如果返回true，则自动重试 */\r\n    onError?: (result: string, code: ErrorCode) => true | void,\r\n    /**\r\n     * @private\r\n     * @deprecated\r\n     */\r\n    attr?: IShowParamAttr,\r\n}\r\n\r\ninterface IHideParams<T, IHide = any, IHideReturn = any> {\r\n    name: T,\r\n    data?: IHide,\r\n    onHide?: IHideParamOnHide<IHideReturn>\r\n}\r\n\r\nconst UIScene = 'UIScene';\r\nconst UserInterfacePath = 'UserInterface';\r\nconst ViewTypes = [ViewType.Page, ViewType.Paper, ViewType.Pop, ViewType.Top];\r\n\r\nconst BlockEvents = [\r\n    Node.EventType.TOUCH_START, Node.EventType.TOUCH_MOVE, Node.EventType.TOUCH_END, Node.EventType.TOUCH_CANCEL,\r\n    Node.EventType.MOUSE_DOWN, Node.EventType.MOUSE_MOVE, Node.EventType.MOUSE_UP,\r\n    Node.EventType.MOUSE_ENTER, Node.EventType.MOUSE_LEAVE, Node.EventType.MOUSE_WHEEL\r\n];\r\n\r\n/**\r\n * 错误码\r\n */\r\nenum ErrorCode {\r\n    /**加载失败 */\r\n    LoadError,\r\n    /**beforeShow返回错误 */\r\n    LogicError,\r\n    /**UI无效(UI的isViewValid返回false) */\r\n    InvalidError,\r\n}\r\n\r\n/**\r\n * 界面名字枚举\r\n */\r\nconst ViewName: { [key in IViewName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\n/**\r\n * 子界面名字枚举\r\n */\r\nconst MiniViewName: { [key in IMiniViewName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\n/**\r\n * 将串式命名转成驼峰命名\r\n * @param str 串式字符串\r\n * @param lower 首字母是否小写(默认大写)\r\n * @returns \r\n */\r\nfunction stringCase(str: string, lower = false) {\r\n    str = str.replace(/-/g, '_');\r\n    const arr = str.split('_');\r\n\r\n    return arr.map(function (str, index) {\r\n        if (index === 0 && lower) {\r\n            return str.charAt(0).toLocaleLowerCase() + str.slice(1);\r\n        }\r\n        return str.charAt(0).toLocaleUpperCase() + str.slice(1);\r\n    }).join('');\r\n}\r\n\r\n/**\r\n * 将驼峰命名转成串式命名\r\n * @param str 驼峰字符串\r\n * @returns \r\n */\r\nfunction stringCaseNegate(str: string) {\r\n    return str.replace(/[A-Z]/g, (searchStr, startIndex) => {\r\n        if (startIndex === 0) {\r\n            return searchStr.toLocaleLowerCase();\r\n        } else {\r\n            return '-' + searchStr.toLocaleLowerCase();\r\n        }\r\n    });\r\n}\r\n\r\n@ccclass('UIManager')\r\nexport default class UIManager<UIName extends string, MiniName extends string> extends BaseManager {\r\n    /**静态设置 */\r\n    static setting: {\r\n        /**预加载列表，会在UI初始化阶段进行 */\r\n        preload?: (IViewName | IMiniViewName | Array<IViewName | IMiniViewName>)[],\r\n        /**默认UI，框架初始化完毕后会自动加载 */\r\n        defaultUI?: IViewName,\r\n        /**给默认UI传递的数据 */\r\n        defaultData?: any,\r\n        /**弹窗背景遮罩的参数 */\r\n        shade?: IShade,\r\n        /**\r\n         * 是否自动适配分辨率策略\r\n         * - 开启后会弃用当前的适配策略，并根据实际设备分辨率与设计分辨率的比值，计算出新的适配策略(宽适配或高适配)，保证游戏区域不会被裁减只会扩边\r\n         *   - 当实际设备分辨率「高/宽」>= 设计分辨率「高/宽」时，为宽适配\r\n         *   - 当实际设备分辨率「高/宽」< 设计分辨率「高/宽」时，为高适配\r\n         */\r\n        autoFit?: boolean,\r\n    } = {};\r\n\r\n    /**错误码 */\r\n    static ErrorCode = ErrorCode;\r\n\r\n    /**界面名字枚举 */\r\n    static ViewName = ViewName;\r\n\r\n    /**子界面名字枚举 */\r\n    static MiniViewName = MiniViewName;\r\n\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: '位置: app://manager/ui/prefab/UIMgrLoading'\r\n    })\r\n    private loadingPre: Prefab = null;\r\n\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: '位置: app://manager/ui/prefab/UIMgrShade'\r\n    })\r\n    private shadePre: Prefab = null;\r\n\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: '位置: app://manager/ui/prefab/UIMgrToast'\r\n    })\r\n    private toastPre: Prefab = null;\r\n\r\n    // UI根节点\r\n    private UserInterface: Node = null;\r\n\r\n    // 加载和遮罩节点\r\n    private loading: Node = null;\r\n    private shade: Node = null;\r\n    private toast: Node = null;\r\n\r\n    private defaultUI: UIName = null;\r\n    private defaultData: string = '';\r\n\r\n    private currScene: string = '';\r\n    private currPage: BaseView = null;\r\n    private currFocus: BaseView = null;\r\n\r\n    // 预制体缓存\r\n    private prefabCache: { [name in string]: Prefab } = {};\r\n    private sceneCache: { [name in string]: SceneAsset } = {};\r\n\r\n    // 全局触摸有效\r\n    private touchEnabled: boolean = true;\r\n\r\n    // 记录触摸屏蔽\r\n    private touchMaskMap = new Map<string, boolean>();\r\n    // 记录展示加载\r\n    private showLoadingMap = new Map<string, boolean>();\r\n\r\n    // 记录正在加载中的有效的ui\r\n    private uiLoadingMap: Map<UIName, string[]> = new Map();\r\n    // 记录正在展示中的有效的ui\r\n    private uiShowingMap: Map<BaseView, UIName> = new Map();\r\n\r\n    private showQueue: IShowParams<UIName>[] = [];\r\n\r\n    /**UI根节点 */\r\n    public get root() {\r\n        return this.node.parent.parent;\r\n    }\r\n\r\n    /**相机 */\r\n    public get camera() {\r\n        return this.canvas.cameraComponent;\r\n    }\r\n\r\n    /**画布*/\r\n    public get canvas() {\r\n        return this.root.getComponent(Canvas);\r\n    }\r\n\r\n    protected init(finish: Function) {\r\n        const setting = UIManager.setting;\r\n\r\n        this.defaultUI = setting.defaultUI as UIName;\r\n        this.defaultData = setting.defaultData;\r\n\r\n        super.init(finish);\r\n\r\n        // 预加载,符合AnyTask规则\r\n        if (setting.preload?.length) {\r\n            const task = Core.inst.lib.task.createAny();\r\n            setting.preload.forEach((preload) => {\r\n                if (preload instanceof Array) {\r\n                    task.add(preload.map(name => {\r\n                        return next => this.preload(name as any, next);\r\n                    }));\r\n                } else {\r\n                    task.add(next => this.preload(preload as any, next));\r\n                }\r\n            });\r\n            task.start();\r\n        }\r\n    }\r\n\r\n    protected onLoad() {\r\n        this.UserInterface = this.root.getChildByName(UserInterfacePath);\r\n\r\n        this.root.getComponentsInChildren(Camera).forEach(camera => {\r\n            // 避免camera.priority<0的情况，否则会造成渲染异常\r\n            if (camera.priority < 0) camera.priority = 0;\r\n            // 避免camera.far<=camera.near的情况，否则会造成渲染异常\r\n            if (camera.far <= camera.near) camera.far = camera.near + 1;\r\n        });\r\n        director.addPersistRootNode(this.root);\r\n\r\n        this.createTypeRoot();\r\n\r\n        this.shade = instantiate(this.shadePre);\r\n        this.shade.parent = this.UserInterface;\r\n        this.shade.active = false;\r\n        this.shade.getComponent(Widget).target = this.root;\r\n\r\n        this.loading = instantiate(this.loadingPre);\r\n        this.loading.parent = this.node;\r\n        this.loading.active = false;\r\n\r\n        // toast是后面加的，需要做容错\r\n        if (this.toastPre) {\r\n            this.toast = instantiate(this.toastPre);\r\n            this.toast.parent = this.node;\r\n        }\r\n\r\n        // 自动适配分辨率策略\r\n        if (UIManager.setting.autoFit) {\r\n            const designResolution = settings.querySettings(Settings.Category.SCREEN, 'designResolution') as { width: number, height: number, policy: number };\r\n            const windowSize = size(screen.windowSize);\r\n            let resolutionPolicy = designResolution.policy;\r\n            const autoFitResolutionPolicy = function () {\r\n                if (windowSize.width / windowSize.height > designResolution.width / designResolution.height) {\r\n                    if (resolutionPolicy === ResolutionPolicy.FIXED_HEIGHT) return;\r\n                    view.setResolutionPolicy(ResolutionPolicy.FIXED_HEIGHT);\r\n                    resolutionPolicy = ResolutionPolicy.FIXED_HEIGHT;\r\n                } else {\r\n                    if (resolutionPolicy === ResolutionPolicy.FIXED_WIDTH) return;\r\n                    view.setResolutionPolicy(ResolutionPolicy.FIXED_WIDTH);\r\n                    resolutionPolicy = ResolutionPolicy.FIXED_WIDTH;\r\n                }\r\n            };\r\n            autoFitResolutionPolicy();\r\n            this.schedule(() => {\r\n                if (windowSize.equals(screen.windowSize)) return;\r\n                windowSize.set(screen.windowSize);\r\n                autoFitResolutionPolicy();\r\n            }, 0.5);\r\n        }\r\n    }\r\n\r\n    private createTypeRoot() {\r\n        ViewTypes.forEach((type) => {\r\n            const d2 = new Node(type);\r\n            d2.layer = Layers.Enum.UI_2D;\r\n            d2.addComponent(UIMgrZOrder);\r\n            d2.parent = this.UserInterface;\r\n            d2.addComponent(UITransform);\r\n            const widget = d2.addComponent(Widget);\r\n            widget.isAlignBottom = true;\r\n            widget.isAlignLeft = true;\r\n            widget.isAlignRight = true;\r\n            widget.isAlignTop = true;\r\n            widget.top = 0;\r\n            widget.left = 0;\r\n            widget.right = 0;\r\n            widget.bottom = 0;\r\n            widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n\r\n            if (DEV) {\r\n                d2.on(Node.EventType.CHILD_ADDED, (child: Node) => {\r\n                    if (!child) return;\r\n                    if (child === this.shade) return;\r\n                    if (this.getBaseView(child)) return;\r\n                    this.warn(`${UserInterfacePath}/${type}下非必要请不要添加非UI节点:`, child?.name);\r\n                }, this);\r\n            }\r\n        });\r\n    }\r\n\r\n    private addTouchMaskListener() {\r\n        if (!this.touchEnabled) return;\r\n        if (this.touchMaskMap.size > 0) return;\r\n\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            this.root.on(BlockEvents[i], this.stopPropagation, this, true);\r\n        }\r\n    }\r\n\r\n    private removeTouchMaskListener() {\r\n        if (!this.touchEnabled) return;\r\n        if (this.touchMaskMap.size > 0) return;\r\n\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            this.root.off(BlockEvents[i], this.stopPropagation, this, true);\r\n        }\r\n    }\r\n\r\n    private stopPropagation(event: Event) {\r\n        if (!this.touchEnabled || this.touchMaskMap.size > 0) {\r\n            event.propagationStopped = true;\r\n            if (event.type !== Node.EventType.MOUSE_MOVE) {\r\n                this.log('屏蔽触摸');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取一个节点上的BaseView组件, 获取不到返回null\r\n     */\r\n    private getBaseView(node: Node): BaseView {\r\n        if (!node) return null;\r\n        return node.components.find(component => component instanceof BaseView) as BaseView;\r\n    }\r\n\r\n    /**\r\n     * 在所有父节点中找到一个最近的view组件\r\n     * @param target \r\n     * @returns \r\n     */\r\n    private getViewInParents(target: Node) {\r\n        let node = target;\r\n        let com: BaseView = null;\r\n\r\n        while (node.parent && !(node.parent instanceof Scene)) {\r\n            com = this.getBaseView(node.parent);\r\n            if (!com) {\r\n                node = node.parent;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return com;\r\n    }\r\n\r\n    /**\r\n     * 在子节点中找到一个最近的view组件\r\n     * @param target \r\n     * @returns \r\n     */\r\n    private getViewInChildren(target: Node) {\r\n        for (let index = 0; index < target.children.length; index++) {\r\n            const node = target.children[index];\r\n            const com = this.getBaseView(node);\r\n            if (com) return com;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取它的脚本类\r\n     */\r\n    private getUIClass(name: string): typeof BaseView {\r\n        return js.getClassByName(name) as (typeof BaseView);\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取UI路径\r\n     * @param name ui名字\r\n     * @returns \r\n     */\r\n    private getUIPath(name: string) {\r\n        return name;\r\n    }\r\n\r\n    /**\r\n     * 获取前缀\r\n     * @param name    ui名字\r\n     */\r\n    private getUIPrefix(name: string): ViewType {\r\n        for (let index = 0; index < ViewTypes.length; index++) {\r\n            const typeName = ViewTypes[index];\r\n            if (name.indexOf(typeName) === 0) {\r\n                return typeName;\r\n            }\r\n        }\r\n        this.error('getUIPrefix', `${name}`);\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字查询父节点\r\n     * @param name    ui名字\r\n     */\r\n    private getUIParent(name: string): Node {\r\n        if (this.currScene === name) {\r\n            return director.getScene();\r\n        }\r\n\r\n        const prefix = this.getUIPrefix(name);\r\n        for (let index = 0; index < ViewTypes.length; index++) {\r\n            const viewType = ViewTypes[index];\r\n            if (viewType === prefix) {\r\n                return this.UserInterface.getChildByName(viewType);\r\n            }\r\n        }\r\n\r\n        this.error('getUIParent', `找不到${name}对应的Parent`);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取场景内的节点\r\n     * @param name    ui名字\r\n     */\r\n    private getUIInScene(name: string): Node;\r\n    private getUIInScene(name: string, multiple: false): Node;\r\n    private getUIInScene(name: string, multiple: true): Node[];\r\n    private getUIInScene(name: string, multiple = false) {\r\n        const parent = this.getUIParent(name);\r\n\r\n        if (multiple) {\r\n            const result = parent.children.filter(node => node.name === name);\r\n            if (result.length) return result.filter(node => isValid(node, true));\r\n        } else {\r\n            const result = parent.children.find(node => node.name === name);\r\n            if (result) return isValid(result, true) ? result : null;\r\n        }\r\n\r\n        return multiple ? [] : null;\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取展示中的节点\r\n     * @param name    ui名字\r\n     */\r\n    private getUIInShowing(name: string): Node;\r\n    private getUIInShowing(name: string, multiple: false): Node;\r\n    private getUIInShowing(name: string, multiple: true): Node[];\r\n    private getUIInShowing(name: string, multiple = false) {\r\n        if (multiple) {\r\n            const result: Node[] = [];\r\n            this.uiShowingMap.forEach((_name, com) => {\r\n                if (_name === name) result.push(com.node);\r\n            });\r\n            return result;\r\n        } else {\r\n            let result: Node = null;\r\n            this.uiShowingMap.forEach((_name, com) => {\r\n                if (!result && _name === name) result = com.node;\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取UI骨架Bundle名字\r\n     * @deprecated 将会移除，请改为其它方案\r\n     */\r\n    public getNativeBundleName(uiName: UIName | MiniName) {\r\n        // 兼容旧版本\r\n        const oldBundleName = `app-view_${uiName}`;\r\n        const projectBundles = settings.querySettings(Settings.Category.ASSETS, 'projectBundles') as string[];\r\n        if (projectBundles && projectBundles.indexOf(oldBundleName) >= 0) {\r\n            return oldBundleName;\r\n        }\r\n\r\n        return stringCaseNegate(uiName);\r\n    }\r\n\r\n    /**\r\n     * 获取UI资源Bundle名字\r\n     * @deprecated 将会移除，请改为其它方案\r\n     */\r\n    public getResBundleName(uiName: UIName | MiniName) {\r\n        // 兼容旧版本\r\n        const oldBundleName = `app-view_${uiName}_Res`;\r\n        const projectBundles = settings.querySettings(Settings.Category.ASSETS, 'projectBundles') as string[];\r\n        if (projectBundles && projectBundles.indexOf(oldBundleName) >= 0) {\r\n            return oldBundleName;\r\n        }\r\n\r\n        return `${stringCaseNegate(uiName)}-res`;\r\n    }\r\n\r\n    /**\r\n     * 初始化Bundle\r\n     */\r\n    private initBundle(name: UIName | MiniName, onFinish: (result: [AssetManager.Bundle, AssetManager.Bundle]) => any) {\r\n        Core.inst.lib.task.createASync<[AssetManager.Bundle, AssetManager.Bundle]>()\r\n            .add((next) => {\r\n                Core.inst.manager.loader.loadBundle({\r\n                    bundle: this.getNativeBundleName(name),\r\n                    onComplete: next\r\n                });\r\n            })\r\n            .add((next) => {\r\n                Core.inst.manager.loader.loadBundle({\r\n                    bundle: this.getResBundleName(name),\r\n                    onComplete: next\r\n                });\r\n            })\r\n            .start(onFinish);\r\n    }\r\n\r\n    /**\r\n     * 安装UI\r\n     */\r\n    private installUI(name: UIName | MiniName, complete?: (result: Prefab | SceneAsset | null) => any, progress?: (finish: number, total: number, item: AssetManager.RequestItem) => void) {\r\n        if (this.sceneCache[name]) {\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(this.sceneCache[name]);\r\n            });\r\n            return;\r\n        } else if (this.prefabCache[name]) {\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(this.prefabCache[name]);\r\n            });\r\n            return;\r\n        }\r\n\r\n        const task = Core.inst.lib.task.createSync<[[AssetManager.Bundle, AssetManager.Bundle], Prefab | SceneAsset]>()\r\n            .add(next => {\r\n                this.initBundle(name, next);\r\n            })\r\n            .add((next) => {\r\n                // 失败\r\n                const uiBundles = task.results[0];\r\n                if (!uiBundles || !uiBundles[0] || !uiBundles[1]) return next(null);\r\n\r\n                const isScene = uiBundles[0].getSceneInfo(name);\r\n                Core.inst.manager.loader.load({\r\n                    bundle: this.getNativeBundleName(name),\r\n                    path: this.getUIPath(name),\r\n                    type: isScene ? SceneAsset : Prefab,\r\n                    onProgress: progress,\r\n                    onComplete: next\r\n                });\r\n            })\r\n            .start((results) => {\r\n                if (!isValid(this)) return;\r\n                // 验证缓存\r\n                const cache = this.sceneCache[name] || this.prefabCache[name];\r\n                if (cache) {\r\n                    return complete && complete(cache);\r\n                }\r\n                // 验证有效\r\n                const asset = results[1];\r\n                if (!asset) {\r\n                    return complete && complete(null);\r\n                }\r\n                // 添加引用计数\r\n                asset.addRef();\r\n                // 添加缓存\r\n                if (asset instanceof Prefab) {\r\n                    this.prefabCache[name] = asset;\r\n                } else {\r\n                    this.sceneCache[name] = asset;\r\n                }\r\n                this.log(`加载: ${name}`);\r\n                return complete && complete(asset);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 卸载UI\r\n     */\r\n    private uninstallUI(name: UIName | MiniName) {\r\n        if (this.sceneCache[name]) {\r\n            // 释放引用计数\r\n            this.sceneCache[name].decRef();\r\n            // 删除缓存\r\n            delete this.sceneCache[name];\r\n        } else if (this.prefabCache[name]) {\r\n            // 释放引用计数\r\n            this.prefabCache[name].decRef();\r\n            // 删除缓存\r\n            delete this.prefabCache[name];\r\n        }\r\n\r\n        const resBundle = this.getResBundleName(name);\r\n        const naBundle = this.getNativeBundleName(name);\r\n        Core.inst.manager.loader.releaseAll(resBundle);\r\n        Core.inst.manager.loader.releaseAll(naBundle);\r\n        Core.inst.manager.loader.removeBundle(resBundle);\r\n        Core.inst.manager.loader.removeBundle(naBundle);\r\n        this.log(`卸载: ${name}`);\r\n    }\r\n\r\n    /**\r\n     * 加载ui内部资源\r\n     */\r\n    public loadRes<T extends typeof Asset>(target: Component, path: string, type: T, callback?: (item: InstanceType<T> | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.load({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: callback\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.load({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: callback\r\n                });\r\n            } else {\r\n                this.error('loadRes', target.name, path);\r\n                callback && callback(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载ui内部资源\r\n     */\r\n    public preloadRes<T extends typeof Asset>(target: Component | UIName | MiniName, path: string, type: T, complete?: (item: AssetManager.RequestItem[] | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.preload({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: complete\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.preload({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: complete\r\n                });\r\n            } else {\r\n                this.error('preloadRes', target.name, path);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载ui内部资源\r\n     */\r\n    public loadResDir<T extends typeof Asset>(target: Component, path: string, type: T, callback?: (items: InstanceType<T>[] | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.loadDir({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: callback\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.loadDir({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: callback\r\n                });\r\n            } else {\r\n                this.error('loadResDir', target.name, path);\r\n                callback && callback([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载ui内部资源\r\n     */\r\n    public preloadResDir<T extends typeof Asset>(target: Component | UIName | MiniName, path: string, type: T, complete?: (item: AssetManager.RequestItem[] | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.preloadDir({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: complete\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.preloadDir({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: complete\r\n                });\r\n            } else {\r\n                this.error('preloadResDir', target.name, path);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载UI\r\n     */\r\n    public preload(name: UIName | MiniName, complete?: (item: AssetManager.RequestItem[] | null) => any) {\r\n        // 验证name是否为真\r\n        if (!name) {\r\n            this.error('preload', 'fail');\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.initBundle(name, ([naBundle]) => {\r\n            const isScene = naBundle.getSceneInfo(name);\r\n            Core.inst.manager.loader.preload({\r\n                bundle: this.getNativeBundleName(name),\r\n                path: this.getUIPath(name),\r\n                type: isScene ? SceneAsset : Prefab,\r\n                onComplete: complete\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载UI\r\n     */\r\n    public load(name: UIName | MiniName): void;\r\n    public load(name: UIName | MiniName, complete: (result: Prefab | SceneAsset | null) => any): void;\r\n    public load(name: UIName | MiniName, progress: (finish: number, total: number, item: AssetManager.RequestItem) => void, complete: (result: Prefab | SceneAsset | null) => any): void;\r\n    public load(name: UIName | MiniName, ...args: Function[]): void {\r\n        const progress = (args[1] && args[0]) as (finish: number, total: number, item: AssetManager.RequestItem) => void;\r\n        const complete = (args[1] || args[0]) as (result: any) => any;\r\n\r\n        // 验证name是否为真\r\n        if (!name) {\r\n            this.error('load', 'fail');\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 异步加载\r\n        this.installUI(name, (result) => {\r\n            if (!result) return complete && complete(null);\r\n            return complete && complete(result);\r\n        }, progress);\r\n    }\r\n\r\n    /**\r\n     * 销毁UI，释放资源\r\n     * - 直接销毁，不管是否是show状态\r\n     * - 此流程一定是同步的\r\n     */\r\n    public release(nameOrCom: UIName | MiniName | BaseView) {\r\n        const uiName = typeof nameOrCom === 'string' ? nameOrCom : nameOrCom.viewName;\r\n\r\n        if (!uiName) {\r\n            this.error('release', `${nameOrCom} fail`);\r\n            return;\r\n        }\r\n\r\n        // 传入字符串是释放所有\r\n        if (typeof nameOrCom === 'string') {\r\n            this.getUIInScene(uiName, true).forEach((node) => {\r\n                const com = this.getBaseView(node);\r\n                if (!com) {\r\n                    this.error('release', `${uiName}不存在BaseView组件`);\r\n                    return;\r\n                }\r\n\r\n                if (com.isShow) {\r\n                    this.warn('release', `${uiName}正处于show状态, 此处将直接销毁`);\r\n                }\r\n                if (com === this.currPage) {\r\n                    this.currPage = null;\r\n                }\r\n                if (com === this.currFocus) {\r\n                    this.currFocus = null;\r\n                }\r\n\r\n                this.uiShowingMap.delete(com);\r\n\r\n                if (node && isValid(node, true)) {\r\n                    node.parent = null;\r\n                    node.destroy();\r\n                }\r\n            });\r\n        }\r\n        // 传入组件是释放单个\r\n        else {\r\n            if (nameOrCom.isShow) {\r\n                this.warn('release', `${uiName}正处于show状态, 此处将直接销毁`);\r\n            }\r\n            if (nameOrCom === this.currPage) {\r\n                this.currPage = null;\r\n            }\r\n            if (nameOrCom === this.currFocus) {\r\n                this.currFocus = null;\r\n            }\r\n\r\n            this.uiShowingMap.delete(nameOrCom);\r\n\r\n            const node = nameOrCom.node;\r\n            if (node && isValid(node, true)) {\r\n                node.parent = null;\r\n                node.destroy();\r\n            }\r\n        }\r\n\r\n        // 当全部释放时才清除缓存\r\n        const nodes = this.getUIInScene(uiName, true);\r\n        if (nodes.length === 0 || nodes.every(node => !isValid(node, true))) {\r\n            this.uninstallUI(uiName as UIName | MiniName);\r\n            this.log(`释放资源: ${uiName}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁全部UI，释放资源\r\n     * - 直接销毁，不管是否是show状态\r\n     * - 此流程一定是同步的\r\n     */\r\n    public releaseAll(exclude?: UIName[]) {\r\n        Object.keys(this.prefabCache).forEach((name: UIName) => {\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            this.release(name);\r\n        });\r\n        Object.keys(this.sceneCache).forEach((name: UIName) => {\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            this.release(name);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 检查UI是否有效\r\n     * - -1: 加载失败\r\n     * - 0: UI无效\r\n     * - 1: UI有效\r\n     */\r\n    private checkUIValid(name: UIName | MiniName, data: any, callback: (valid: -1 | 0 | 1) => any) {\r\n        this.installUI(name, (result) => {\r\n            if (!result) return callback(-1);\r\n            const View = this.getUIClass(name);\r\n            if (!View) return callback(0);\r\n            if (!View.isViewValid) return callback(1);\r\n            View.isViewValid((valid: boolean) => {\r\n                callback(valid ? 1 : 0);\r\n            }, data);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 更新阴影的层级及显示\r\n     */\r\n    public refreshShade() {\r\n        // 借助refreshShade实现onFocus、onLostFocus(onFocus不会被每次都触发，只有产生变化时才触发)\r\n        let onFocus = false;\r\n        // 倒序遍历uiRoots\r\n        let uiRoots = this.UserInterface.children;\r\n        for (let index = uiRoots.length - 1; index >= 0; index--) {\r\n            const uiRoot = uiRoots[index];\r\n            if (uiRoot !== this.shade && uiRoot !== this.loading) {\r\n                // 倒序遍历uiRoot\r\n                let children = uiRoot.children;\r\n                for (let i = children.length - 1; i >= 0; i--) {\r\n                    const node = children[i];\r\n                    if (node === this.shade) continue;\r\n\r\n                    const com = this.getBaseView(node);\r\n                    if (!com) continue;\r\n\r\n                    // 触发onFocus\r\n                    if (!onFocus && com.isCaptureFocus && com.isShow) {\r\n                        onFocus = true;\r\n                        if (this.currFocus !== com) {\r\n                            isValid(this.currFocus, true) && this.currFocus.constructor.prototype.focus.call(this.currFocus, false);\r\n                            this.currFocus = com;\r\n                            this.currFocus.constructor.prototype.focus.call(this.currFocus, true);\r\n                        }\r\n                    }\r\n                    // 添加遮罩\r\n                    if (com.isNeedShade && com.isShow) {\r\n                        const shadeSetting = Object.assign({}, UIManager.setting.shade, com.constructor.prototype.onShade.call(com));\r\n                        if (shadeSetting.blur) {\r\n                            this.shade.getComponent(UIMgrShade).init(0, 255, 255, 0, true);\r\n                        } else {\r\n                            this.shade.getComponent(UIMgrShade).init(\r\n                                typeof shadeSetting.delay !== 'number' ? 0 : shadeSetting.delay,\r\n                                typeof shadeSetting.begin !== 'number' ? 60 : shadeSetting.begin,\r\n                                typeof shadeSetting.end !== 'number' ? 180 : shadeSetting.end,\r\n                                typeof shadeSetting.speed !== 'number' ? 100 : shadeSetting.speed,\r\n                                false,\r\n                            );\r\n                        }\r\n                        this.shade.layer = node.layer;\r\n                        this.shade.parent = uiRoot;\r\n                        this.shade.active = true;\r\n                        // 以z坐标来代替2.x时代的zIndex\r\n                        this.shade.setPosition(this.shade.position.x, this.shade.position.y, node.position.z);\r\n\r\n                        let shadeIndex = this.shade.getSiblingIndex();\r\n                        let nodeIndex = node.getSiblingIndex();\r\n                        if (shadeIndex > nodeIndex) {\r\n                            this.shade.setSiblingIndex(nodeIndex);\r\n                        } else {\r\n                            this.shade.setSiblingIndex(nodeIndex - 1);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.shade.active = false;\r\n        this.shade.getComponent(UIMgrShade).clear();\r\n        if (!onFocus) {\r\n            isValid(this.currFocus, true) && this.currFocus.constructor.prototype.focus.call(this.currFocus, false);\r\n            this.currFocus = null;\r\n        }\r\n    }\r\n\r\n    // 解析prefab\r\n    private parsingPrefab(prefab: Prefab, name: string) {\r\n        if (!prefab) return null;\r\n\r\n        const node = instantiate(prefab);\r\n\r\n        node.active = false;\r\n        if (node.name !== name) {\r\n            this.warn('parsingPrefab', `节点名与UI名不一致, 已重置为UI名: ${this.getUIPath(name)}`);\r\n            node.name = name;\r\n        }\r\n\r\n        node.parent = this.getUIParent(name);\r\n        node.getComponent(Widget)?.updateAlignment();\r\n        return node;\r\n    }\r\n\r\n    // 解析scene\r\n    private parsingScene(asset: SceneAsset, name: string) {\r\n        if (!asset || !asset.scene) return null;\r\n\r\n        if (asset.scene.name !== name) {\r\n            this.warn('parsingScene', `场景名与UI名不一致, 已重置为UI名: ${this.getUIPath(name)}`);\r\n            asset.scene.name = name;\r\n        }\r\n\r\n        const view = this.getViewInChildren(asset.scene);\r\n        if (!view) {\r\n            this.error('parsingScene', `解析场景时未查询到根节点存在BaseView: ${this.getUIPath(name)}`);\r\n            return null;\r\n        }\r\n\r\n        view.node.active = false;\r\n        if (view.node.name !== name) {\r\n            this.warn('parsingScene', `节点名与UI名不一致, 已重置为UI名: ${this.getUIPath(name)}`);\r\n            view.node.name = name;\r\n        }\r\n        return view.node;\r\n    }\r\n\r\n    private addUILoadingUuid(name: UIName, loadingUuid?: string) {\r\n        const uuid = loadingUuid || this.createUUID();\r\n        if (!this.uiLoadingMap.has(name)) {\r\n            this.uiLoadingMap.set(name, [uuid]);\r\n        } else {\r\n            this.uiLoadingMap.get(name).push(uuid);\r\n        }\r\n        return uuid;\r\n    }\r\n\r\n    private removeUILoadingUuid(name: UIName, uuid: string) {\r\n        if (!this.uiLoadingMap.has(name)) return false;\r\n        const index = this.uiLoadingMap.get(name).indexOf(uuid);\r\n        if (index === -1) return false;\r\n        this.uiLoadingMap.get(name).splice(index, 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 创建UI\r\n     */\r\n    private createUI(name: UIName, silent: boolean, callback: (node: Node, scene?: Scene) => any) {\r\n        // 生成一个UI加载的UUID\r\n        const loadingUuid = silent ? '' : this.showLoading();\r\n        const uiLoadingUuid = this.addUILoadingUuid(name, loadingUuid);\r\n\r\n        // 验证name\r\n        if (!name) {\r\n            setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                // 验证本次加载是否有效\r\n                if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                    return this.hideLoading(loadingUuid);\r\n                }\r\n                callback(null);\r\n                this.hideLoading(loadingUuid);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 判断是否已经存在节点并且是单例模式\r\n        const node = this.getUIInScene(name);\r\n        if (isValid(node, true) && this.getBaseView(node).isSingleton === true) {\r\n            setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n\r\n                // 验证本次加载是否有效\r\n                if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                    return this.hideLoading(loadingUuid);\r\n                }\r\n\r\n                // 验证节点是否有效\r\n                if (isValid(node, true)) {\r\n                    if (this.currScene === name) {\r\n                        callback(node, director.getScene());\r\n                    } else {\r\n                        callback(node);\r\n                    }\r\n                    this.hideLoading(loadingUuid);\r\n                } else {\r\n                    this.createUI(name, silent, callback);\r\n                    this.hideLoading(loadingUuid);\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 加载UI\r\n        this.load(name, (asset) => {\r\n            if (!isValid(this)) return;\r\n\r\n            // 验证本次加载是否有效\r\n            if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                return this.hideLoading(loadingUuid);\r\n            }\r\n\r\n            // 是场景\r\n            if (asset instanceof SceneAsset) {\r\n                callback(this.parsingScene(asset, name), asset.scene);\r\n                this.hideLoading(loadingUuid);\r\n                return;\r\n            }\r\n\r\n            // 验证是否是单例(一个单例会有被同时load多次的情况，因为判断一个ui是否是单例，必须要至少实例化一个后才能获取)\r\n            const node = this.getUIInScene(name);\r\n            if (!isValid(node, true) || this.getBaseView(node).isSingleton === false) {\r\n                callback(this.parsingPrefab(asset, name));\r\n                this.hideLoading(loadingUuid);\r\n            } else {\r\n                callback(node);\r\n                this.hideLoading(loadingUuid);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 展示默认View\r\n     */\r\n    public showDefault(onShow?: (result?: any) => any) {\r\n        if (this.defaultUI) {\r\n            this.show({\r\n                name: this.defaultUI,\r\n                data: this.defaultData,\r\n                onShow\r\n            });\r\n        } else {\r\n            Core.inst.manager.ui.showToast('请先设置首界面\\n在setting.ts中修改defaultUI', 100);\r\n            onShow && onShow();\r\n            this.warn('defaultUI不存在，请在setting.ts中修改');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否展示了(包括加载中和队列中)\r\n     */\r\n    public isShow(name: UIName) {\r\n        return !!this.getUIInShowing(name) ||\r\n            this.isInQueue(name) ||\r\n            this.isLoading(name);\r\n    }\r\n\r\n    /**\r\n     * 是否在队列中\r\n     */\r\n    public isInQueue(name: UIName) {\r\n        return !!this.showQueue.find((v) => { return v.name == name; });\r\n    }\r\n\r\n    /**\r\n     * 是否在加载中\r\n     */\r\n    public isLoading(name: UIName) {\r\n        return this.uiLoadingMap.has(name) && this.uiLoadingMap.get(name).length > 0;\r\n    }\r\n\r\n    /**\r\n     * 放入队列\r\n     */\r\n    private putInShowQueue(data: IShowParams<UIName>) {\r\n        if (data.queue === 'join' || this.showQueue.length === 0) {\r\n            this.showQueue.push(data);\r\n        } else {\r\n            this.showQueue.splice(1, 0, data);\r\n        }\r\n        if (this.showQueue.length === 1) {\r\n            this.consumeShowQueue();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 消耗队列\r\n     */\r\n    private consumeShowQueue() {\r\n        if (this.showQueue.length === 0) return;\r\n        const data = this.showQueue[0];\r\n        this.show({\r\n            name: data.name,\r\n            data: data.data,\r\n            onShow: data.onShow,\r\n            onHide: (result: any) => {\r\n                data.onHide && data.onHide(result);\r\n                this.showQueue.shift();\r\n                this.consumeShowQueue();\r\n            },\r\n            onError: data.onError ? (error: string, code: 0 | 1) => {\r\n                const ret = data.onError(error, code);\r\n                this.showQueue.shift();\r\n                this.consumeShowQueue();\r\n                return ret;\r\n            } : undefined,\r\n            top: data.top,\r\n            attr: data.attr,\r\n            silent: data.silent\r\n        });\r\n    }\r\n\r\n    private showUI(params: IShowParams<UIName>) {\r\n        const { name, data, onShow, onHide, onError, top = true, attr = null, silent = false } = params;\r\n\r\n        this.createUI(name, silent, (node, scene) => {\r\n            if (!node) {\r\n                this.error('show', `${name} 不存在或加载失败`);\r\n                // 「没有指定onError」或「onError返回true」会自动发起重试\r\n                if (onError && onError(`${name} 不存在或加载失败`, UIManager.ErrorCode.LoadError) !== true) {\r\n                    return;\r\n                }\r\n                this.scheduleOnce(() => this.showUI(params), 1);\r\n                if (!silent) this.showLoading(1);\r\n                return;\r\n            }\r\n\r\n            !scene && top && node.setSiblingIndex(-1);\r\n\r\n            const com = this.getBaseView(node);\r\n            this.uiShowingMap.set(com, name);\r\n            com.constructor.prototype.show.call(com, data, attr,\r\n                // onShow\r\n                (result: any) => {\r\n                    this.uiShowingMap.set(com, name);\r\n                    onShow && onShow(result);\r\n                },\r\n                // onHide\r\n                (result: any) => {\r\n                    this.uiShowingMap.delete(com);\r\n                    onHide && onHide(result);\r\n                },\r\n                // beforeShow\r\n                (error: string) => {\r\n                    if (error) {\r\n                        this.uiShowingMap.delete(com);\r\n                        onError && onError(error, UIManager.ErrorCode.LogicError);\r\n                    } else if (BaseView.isPage(name)) {\r\n                        this.uiShowingMap.set(com, name);\r\n                        const oldCom = this.currPage;\r\n                        this.currPage = com;\r\n                        if (isValid(oldCom, true) && oldCom !== com && oldCom.isShow) {\r\n                            oldCom.constructor.prototype.hide.call(oldCom, { name });\r\n                        }\r\n                        if (scene) {\r\n                            if (oldCom !== com) {\r\n                                this.currScene = name;\r\n                                director.runSceneImmediate(scene, null, () => {\r\n                                    this.log(`切换场景: ${name}`);\r\n                                });\r\n                            }\r\n                        } else if (this.currScene !== UIScene) {\r\n                            this.currScene = UIScene;\r\n                            const scene = new Scene(UIScene);\r\n                            scene.autoReleaseAssets = true;\r\n                            director.runSceneImmediate(scene, null, () => {\r\n                                this.log(`切换场景: ${UIScene}`);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 展示一个UI\r\n     * - 此流程一定是异步的\r\n     */\r\n    public show<UI extends BaseView>(params\r\n        // @ts-ignore\r\n        : IShowParams<UIName, Parameters<UI['onShow']>[0], ReturnType<UI['onShow']>, ReturnType<UI['onHide']>>) {\r\n        const { name, data, queue, onError, silent = false } = params;\r\n\r\n        // 加入队列中\r\n        if (queue) {\r\n            this.putInShowQueue(params);\r\n            return;\r\n        }\r\n\r\n        this.log(`show: ${name}`);\r\n\r\n        // 生成一个UI加载的UUID\r\n        const loadingUuid = silent ? '' : this.showLoading();\r\n        const uiLoadingUuid = this.addUILoadingUuid(name, loadingUuid);\r\n        // 判断ui是否有效\r\n        Core.inst.lib.task.execute((retry) => {\r\n            this.checkUIValid(name, data, (valid) => {\r\n                // 验证本次加载是否有效\r\n                if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                    this.hideLoading(loadingUuid);\r\n                    return;\r\n                }\r\n\r\n                // 加载失败\r\n                if (valid === -1) {\r\n                    this.error('show', `${name} 不存在或加载失败`);\r\n                    // 「没有指定onError」或「onError返回true」会自动发起重试\r\n                    if (onError && onError(`${name} 不存在或加载失败`, UIManager.ErrorCode.LoadError) !== true) {\r\n                        return this.hideLoading(loadingUuid);\r\n                    }\r\n                    return retry(1);\r\n                }\r\n\r\n                // ui无效\r\n                if (valid === 0) {\r\n                    this.warn('show', `${name} 无效`);\r\n                    this.uninstallUI(name);\r\n                    onError && onError(`${name} 无效`, UIManager.ErrorCode.InvalidError);\r\n                    this.hideLoading(loadingUuid);\r\n                    return;\r\n                }\r\n\r\n                this.showUI(params);\r\n                this.hideLoading(loadingUuid);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 展示一个UI\r\n     * - 此流程一定是异步的\r\n     */\r\n    public showAsync<UI extends BaseView>(params\r\n        // @ts-ignore\r\n        : IShowAsyncParams<UIName, Parameters<UI['onShow']>[0], ReturnType<UI['onShow']>>): Promise<ReturnType<UI['onHide']>> {\r\n        return new Promise((resolve) => {\r\n            this.show({\r\n                ...params,\r\n                onHide(result) {\r\n                    resolve(result);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 关闭View\r\n     * - 此流程一定是同步的\r\n     */\r\n    public hide<UI extends BaseView>({ name, data, onHide }\r\n        // @ts-ignore\r\n        : IHideParams<UIName, Parameters<UI['onHide']>[0], ReturnType<UI['onHide']>>) {\r\n        const nodes = this.getUIInShowing(name, true);\r\n\r\n        this.log(`hide: ${name}`);\r\n\r\n        if (nodes.length === 0) {\r\n            if (!this.uiLoadingMap.has(name) || this.uiLoadingMap.get(name).length === 0) {\r\n                return this.warn('hide', `${name} 不存在`);\r\n            }\r\n        }\r\n\r\n        if (this.uiLoadingMap.has(name)) {\r\n            this.uiLoadingMap.get(name).forEach((loadingUuid) => this.hideLoading(loadingUuid));\r\n            this.uiLoadingMap.get(name).length = 0;\r\n        }\r\n\r\n        for (let index = nodes.length - 1; index >= 0; index--) {\r\n            const node = nodes[index];\r\n            const com = this.getBaseView(node);\r\n\r\n            if (this.currPage === com) {\r\n                this.currPage = null;\r\n            }\r\n\r\n            com.constructor.prototype.hide.call(com, data, onHide);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从顶部关闭一个View(不会重复关闭节点)\r\n     * - 此流程一定是同步的\r\n     */\r\n    public pop<UI extends BaseView>({ name, data, onHide }\r\n        // @ts-ignore\r\n        : IHideParams<UIName, Parameters<UI['onHide']>[0], ReturnType<UI['onHide']>>) {\r\n        const nodes = this.getUIInShowing(name, true);\r\n\r\n        if (this.uiLoadingMap.has(name) && this.uiLoadingMap.get(name).length) {\r\n            const loadingUuid = this.uiLoadingMap.get(name).pop();\r\n            this.hideLoading(loadingUuid);\r\n            this.log(`pop: ${name}`);\r\n            return;\r\n        }\r\n\r\n        if (nodes.length) {\r\n            const node = nodes.pop();\r\n            const com = this.getBaseView(node);\r\n\r\n            if (this.currPage === com) {\r\n                this.currPage = null;\r\n            }\r\n\r\n            com.constructor.prototype.hide.call(com, data, onHide);\r\n            this.log(`pop: ${name}`);\r\n            return;\r\n        }\r\n\r\n        this.warn('pop', `${name} 不存在`);\r\n    }\r\n\r\n    /**\r\n     * 从底部关闭一个View(不会重复关闭节点)\r\n     * - 此流程一定是同步的\r\n     */\r\n    public shift<UI extends BaseView>({ name, data, onHide }\r\n        // @ts-ignore\r\n        : IHideParams<UIName, Parameters<UI['onHide']>[0], ReturnType<UI['onHide']>>) {\r\n        const nodes = this.getUIInShowing(name, true);\r\n\r\n        if (nodes.length) {\r\n            const node = nodes[0];\r\n            const com = this.getBaseView(node);\r\n\r\n            if (this.currPage === com) {\r\n                this.currPage = null;\r\n            }\r\n\r\n            com.constructor.prototype.hide.call(com, data, onHide);\r\n            this.log(`shift: ${name}`);\r\n            return;\r\n        }\r\n\r\n        if (this.uiLoadingMap.has(name) && this.uiLoadingMap.get(name).length) {\r\n            const loadingUuid = this.uiLoadingMap.get(name).shift();\r\n            this.hideLoading(loadingUuid);\r\n            this.log(`shift: ${name}`);\r\n            return;\r\n        }\r\n\r\n        this.warn('shift', `${name} 不存在`);\r\n    }\r\n\r\n    /**\r\n     * 关闭全部View\r\n     * - 不关闭展示中的Page(加载中的会停止)\r\n     * - 此流程一定是同步的\r\n     */\r\n    public hideAll({ data, exclude }: { data?: any, exclude?: UIName[] } = {}): void {\r\n        this.log('hideAll');\r\n        // 展示中的\r\n        this.uiShowingMap.forEach((name, com) => {\r\n            if (BaseView.isPaper(name)) return;\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            if (com === this.currPage) return;\r\n            com.constructor.prototype.hide.call(com, data);\r\n        });\r\n        // 加载中的\r\n        this.uiLoadingMap.forEach((value, name) => {\r\n            if (BaseView.isPaper(name)) return;\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            value.forEach((loadingUuid) => this.hideLoading(loadingUuid));\r\n            value.length = 0;\r\n        });\r\n    }\r\n\r\n    public showLoading(timeout = 0) {\r\n        this.loading.active = true;\r\n        this.loading.setSiblingIndex(-1);\r\n        if (this.loading.getComponent(UIMgrLoading)) {\r\n            this.loading.getComponent(UIMgrLoading).init();\r\n        } else {\r\n            // 兼容旧版本\r\n            this.loading.getComponentInChildren(UIMgrLoading)?.init();\r\n        }\r\n        const uuid = this.createUUID();\r\n        this.showLoadingMap.set(uuid, true);\r\n        if (timeout > 0) this.scheduleOnce(() => {\r\n            this.hideLoading(uuid);\r\n        }, timeout);\r\n        return uuid;\r\n    }\r\n\r\n    public hideLoading(uuid: string) {\r\n        if (!uuid) return;\r\n        this.showLoadingMap.delete(uuid);\r\n        if (this.showLoadingMap.size === 0) {\r\n            if (this.loading.getComponent(UIMgrLoading)) {\r\n                this.loading.getComponent(UIMgrLoading).clear();\r\n            } else {\r\n                // 兼容旧版本\r\n                this.loading.getComponentInChildren(UIMgrLoading)?.clear();\r\n            }\r\n            this.loading.active = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加触摸屏蔽\r\n     */\r\n    public addTouchMask(timeout = 0) {\r\n        this.addTouchMaskListener();\r\n        const uuid = this.createUUID();\r\n        this.touchMaskMap.set(uuid, true);\r\n        if (timeout > 0) this.scheduleOnce(() => {\r\n            this.removeTouchMask(uuid);\r\n        }, timeout);\r\n        return uuid;\r\n    }\r\n\r\n    /**\r\n     * 移除触摸屏蔽\r\n     * @param uuid addTouchMask的返回值\r\n     */\r\n    public removeTouchMask(uuid: string) {\r\n        if (!uuid) return;\r\n        this.touchMaskMap.delete(uuid);\r\n        this.removeTouchMaskListener();\r\n    }\r\n\r\n    /**\r\n     * 显示Toast\r\n     * @param message 文本\r\n     * @param timeout 持续时间(秒)，默认2秒\r\n     */\r\n    public showToast(message: string, timeout?: number) {\r\n        if (!this.toast) {\r\n            return this.error('showToast', '请确认首场景中「Canvas/Manager/UIManager」的「Toast Pre」属性存在');\r\n        }\r\n        this.toast.setSiblingIndex(-1);\r\n        this.toast.getComponent(UIMgrToast).add({\r\n            message, timeout\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 清理Toast\r\n     */\r\n    public clearToast() {\r\n        if (!this.toast) return;\r\n        this.toast.getComponent(UIMgrToast).clear();\r\n    }\r\n\r\n    /**\r\n     * 设置触摸是否启用\r\n     * @param enabled 是否启用\r\n     */\r\n    public setTouchEnabled(enabled: boolean) {\r\n        if (enabled) {\r\n            this.touchEnabled = true;\r\n            this.removeTouchMaskListener();\r\n        } else {\r\n            this.addTouchMaskListener();\r\n            this.touchEnabled = false;\r\n        }\r\n        this.warn('setTouchEnabled', this.touchEnabled);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public onUserInterface(...args: Parameters<Node['on']>) {\r\n        Node.prototype.on.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public onceUserInterface(...args: Parameters<Node['once']>) {\r\n        Node.prototype.once.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public offUserInterface(...args: Parameters<Node['off']>) {\r\n        Node.prototype.off.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public targetOffUserInterface(...args: Parameters<Node['targetOff']>) {\r\n        Node.prototype.targetOff.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 立即给2DUI的子节点排序\r\n     */\r\n    public sortUserInterface(name: IViewType) {\r\n        this.UserInterface\r\n            ?.getChildByName(name)\r\n            ?.getComponent(UIMgrZOrder)\r\n            ?.updateZOrder();\r\n    }\r\n\r\n    /**\r\n     * 屏幕截图\r\n     * - 需要在Director.EVENT_BEFORE_RENDER事件中调用\r\n     * @example\r\n     * director.once(Director.EVENT_BEFORE_RENDER, () => {\r\n     *   const renderTexture = new RenderTexture();\r\n     *   const size = view.getVisibleSize();\r\n     *   renderTexture.reset({ width: size.width, height: size.height });\r\n     *   app.manager.ui.screenshot(renderTexture);\r\n     * });\r\n     */\r\n    public screenshot(renderTexture: RenderTexture, opts?: {\r\n        /**摄像机筛选 */\r\n        cameraFilter?: (camera: Camera) => boolean;\r\n        /**摄像机列表 */\r\n        cameraList?: Camera[];\r\n    }) {\r\n        const cameras = opts?.cameraList || director.getScene().getComponentsInChildren(Camera);\r\n\r\n        const cameraList = cameras.sort((a, b) => a.priority - b.priority)\r\n            .filter(camera => {\r\n                if (!camera.enabledInHierarchy) return false;\r\n                if (camera.targetTexture) return false;\r\n                return opts?.cameraFilter ? opts.cameraFilter(camera) : true;\r\n            });\r\n        const cameraList2 = cameraList.map(camera => camera.camera);\r\n\r\n        cameraList.forEach(camera => {\r\n            camera.targetTexture = renderTexture;\r\n        });\r\n        director.root.pipeline.render(cameraList2);\r\n        cameraList.forEach(camera => {\r\n            camera.targetTexture = null;\r\n        });\r\n\r\n        return renderTexture;\r\n    }\r\n}","import { Component, Graphics, Node, Size, UITransform, _decorator } from 'cc';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrLoading')\r\n@requireComponent(UITransform)\r\nexport default class UIMgrLoading extends Component {\r\n    @property(Node)\r\n    private loading: Node;\r\n\r\n    @property({ tooltip: '动画的尺寸' })\r\n    private size: Size = new Size(60, 60);\r\n\r\n    @property({ tooltip: '等待几秒后开始动画' })\r\n    private delay = 0;\r\n\r\n    private progress = 0;\r\n    private ringScale = 1;\r\n    private reverse = false;\r\n\r\n    private angleSpeed = 120;\r\n    private ringSpeed = 0.02;\r\n\r\n    private inited = false;\r\n    private drawing = false;\r\n    private timedown = 0;\r\n\r\n    init() {\r\n        if (this.inited) return;\r\n        this.inited = true;\r\n\r\n        this.progress = 0;\r\n        this.ringScale = 1;\r\n        this.loading.angle = 0;\r\n        this.reverse = false;\r\n\r\n        this.drawing = false;\r\n        this.timedown = this.delay;\r\n        this.loading.getComponent(Graphics).clear();\r\n    }\r\n\r\n    clear() {\r\n        this.inited = false;\r\n        this.drawing = false;\r\n    }\r\n\r\n    /**\r\n     * 需要重写\r\n     */\r\n    private onDraw() {\r\n        const graphics = this.loading.getComponent(Graphics);\r\n        const uiTransform = this.loading.getComponent(UITransform);\r\n\r\n        const centerX = this.size.width * (0.5 - uiTransform.anchorX);\r\n        const centerY = this.size.height * (0.5 - uiTransform.anchorY);\r\n\r\n        const r = Math.min(this.size.width / 2, this.size.height / 2);\r\n\r\n        const allPI = Math.PI;\r\n        const offst = 0;\r\n\r\n        graphics.clear();\r\n        if (this.reverse) {\r\n            const start = 0.5 * Math.PI + offst;\r\n            const end = 0.5 * Math.PI + this.progress * 2 * allPI + offst;\r\n            graphics.arc(centerX, centerY, r, start, end, true);\r\n        } else {\r\n            const start = 0.5 * Math.PI - offst;\r\n            const end = 0.5 * Math.PI - this.progress * 2 * allPI - offst;\r\n            graphics.arc(centerX, centerY, r, start, end, false);\r\n        }\r\n        graphics.stroke();\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (!this.inited) return;\r\n\r\n        // 倒计时\r\n        if (!this.drawing) {\r\n            if (this.timedown > 0) {\r\n                this.timedown -= dt;\r\n            }\r\n            if (this.timedown <= 0) {\r\n                this.drawing = true;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 旋转\r\n        this.loading.angle -= this.angleSpeed * dt;\r\n        if (this.loading.angle >= 360 || this.loading.angle <= -360) {\r\n            this.loading.angle = this.loading.angle % 360;\r\n        }\r\n\r\n        // 进度\r\n        if (this.ringScale > 0) {\r\n            this.progress = Math.min(1, this.progress + this.ringSpeed * this.ringScale);\r\n\r\n            if (this.progress == 1) {\r\n                this.ringScale = -1;\r\n                this.reverse = !this.reverse;\r\n            }\r\n        } else {\r\n            this.progress = Math.max(0, this.progress + this.ringSpeed * this.ringScale);\r\n\r\n            if (this.progress == 0) {\r\n                this.ringScale = 1;\r\n                this.reverse = !this.reverse;\r\n            }\r\n        }\r\n\r\n        this.onDraw();\r\n    }\r\n}\r\n","import { Camera, Color, Component, Director, Material, RenderTexture, Sprite, SpriteFrame, UIOpacity, UITransform, _decorator, director } from 'cc';\r\nimport Core from '../../../Core';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrShade')\r\n@requireComponent(Sprite)\r\n@requireComponent(UIOpacity)\r\nexport default class UIMgrShade extends Component {\r\n    @property(Material)\r\n    private blurMaterial: Material = null;\r\n\r\n    @property(SpriteFrame)\r\n    private shadeFrame: SpriteFrame = null;\r\n\r\n    @property\r\n    private _delay = 0;\r\n    @property\r\n    get delay() { return this._delay; }\r\n    set delay(v) { this._delay = Math.max(v, 0); }\r\n\r\n    @property\r\n    private _begin = 0;\r\n    @property\r\n    get begin() { return this._begin; }\r\n    set begin(v) { if (v >= 0 && v <= 255) this._begin = v; }\r\n\r\n    @property\r\n    private _end = 255;\r\n    @property\r\n    get end() { return this._end; }\r\n    set end(v) { if (v >= 0 && v <= 255) this._end = v; }\r\n\r\n    @property\r\n    private _speed = 10;\r\n    @property\r\n    get speed() {\r\n        if (this.begin == this.end) {\r\n            return 0;\r\n        } else if (this.begin > this.end) {\r\n            return this._speed > 0 ? -this._speed : this._speed;\r\n        } else {\r\n            return this._speed >= 0 ? this._speed : -this._speed;\r\n        }\r\n    }\r\n    set speed(v) { this._speed = v; }\r\n\r\n    private get sprite() {\r\n        return this.node.getComponent(Sprite);\r\n    }\r\n    private get opacity() {\r\n        return this.node.getComponent(UIOpacity);\r\n    }\r\n\r\n    private inited = false;\r\n    private drawing = false;\r\n    private timedown = 0;\r\n\r\n    private blurFrame: SpriteFrame = null;\r\n\r\n    init(delay: number, begin: number, end: number, speed: number, blur: boolean) {\r\n        if (blur) {\r\n            director.targetOff(this);\r\n            this.inited = false;\r\n            this.drawing = false;\r\n\r\n            this.sprite.color = Color.WHITE;\r\n            this.sprite.customMaterial = null;\r\n            this.sprite.spriteFrame = this.blurFrame;\r\n            if (this.blurFrame) this.blurFrame.flipUVY = false;\r\n\r\n            let count = 0;\r\n            const cameras = director.getScene().getComponentsInChildren(Camera);\r\n            director.on(Director.EVENT_BEFORE_RENDER, () => {\r\n                count++;\r\n\r\n                const renderTexture = new RenderTexture();\r\n                const size = this.node.getComponent(UITransform);\r\n                renderTexture.reset({ width: size.width / 2, height: size.height / 2 });\r\n                renderTexture.addRef();\r\n\r\n                Core.inst.manager.ui.screenshot(renderTexture, {\r\n                    cameraList: cameras\r\n                });\r\n\r\n                if (count === 1) {\r\n                    this.blurFrame = new SpriteFrame();\r\n                    this.blurFrame?.texture?.decRef();\r\n                    this.blurFrame.texture = renderTexture;\r\n                    this.blurFrame.flipUVY = true;\r\n                    this.sprite.spriteFrame = this.blurFrame;\r\n                    this.sprite.customMaterial = this.blurMaterial;\r\n                    this.blurMaterial.setProperty('blurLevel', 2);\r\n                    return;\r\n                }\r\n\r\n                if (count === 5) {\r\n                    director.targetOff(this);\r\n                    this.sprite.spriteFrame.flipUVY = false;\r\n                    this.sprite.customMaterial = null;\r\n                    return;\r\n                }\r\n\r\n                this.blurFrame?.texture?.decRef();\r\n                this.blurFrame.texture = renderTexture;\r\n                this.blurFrame.flipUVY = true;\r\n                this.sprite.spriteFrame = this.blurFrame;\r\n                this.sprite.customMaterial = this.blurMaterial;\r\n                this.blurMaterial.setProperty('blurLevel', count === 2 ? 3 : 1);\r\n            }, this);\r\n        } else {\r\n            director.targetOff(this);\r\n            this.sprite.spriteFrame = this.shadeFrame;\r\n            this.sprite.color = Color.BLACK;\r\n            this.sprite.customMaterial = null;\r\n        }\r\n\r\n        this.delay = delay;\r\n        this.begin = begin;\r\n        this.end = end;\r\n        this.speed = speed;\r\n        this.drawing = true;\r\n\r\n        if (this.inited) return;\r\n        this.inited = true;\r\n        this.timedown = this.delay;\r\n        // 初始透明度\r\n        this.opacity.opacity = this.timedown > 0 ? 0 : this.begin;\r\n    }\r\n\r\n    clear() {\r\n        this.inited = false;\r\n        this.drawing = false;\r\n        director.targetOff(this);\r\n        this.blurFrame?.texture?.decRef();\r\n        this.blurFrame?.destroy();\r\n        this.blurFrame = null;\r\n        this.sprite.spriteFrame = null;\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (!this.inited) return;\r\n        if (!this.drawing) return;\r\n\r\n        if (this.timedown > 0) {\r\n            this.timedown -= dt;\r\n            if (this.timedown > 0) return;\r\n            // 初始透明度\r\n            this.opacity.opacity = this.begin;\r\n        }\r\n\r\n        const uiOpacity = this.opacity;\r\n        if (this.speed > 0) {\r\n            uiOpacity.opacity += this.speed * dt;\r\n            if (uiOpacity.opacity > this.end) {\r\n                uiOpacity.opacity = this.end;\r\n            }\r\n        } else if (this.speed < 0) {\r\n            uiOpacity.opacity += this.speed * dt;\r\n            if (uiOpacity.opacity < this.end) {\r\n                uiOpacity.opacity = this.end;\r\n            }\r\n        }\r\n        if (uiOpacity.opacity == this.end) {\r\n            this.drawing = false;\r\n        }\r\n    }\r\n}\r\n","import { Component, NodePool, Prefab, Tween, UIOpacity, UITransform, _decorator, instantiate, tween, view } from 'cc';\r\nimport UIMgrToastCell from './UIMgrToastCell';\r\nconst { property, ccclass, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrToast')\r\n@requireComponent(UITransform)\r\nexport default class UIMgrToast extends Component {\r\n    @property(Prefab)\r\n    private cell: Prefab = null;\r\n\r\n    /**每条信息显示几秒 */\r\n    private lifeTime = 2;\r\n\r\n    /**消失时花费几秒渐隐 */\r\n    private outTime = 0.2;\r\n\r\n    /**挤压基础速度 */\r\n    private squeezeSpeed = 200;\r\n\r\n    /**节点缓存池子 */\r\n    private pool = new NodePool();\r\n\r\n    add(data: {\r\n        message: string,\r\n        timeout?: number\r\n    }) {\r\n        const cell = this.pool.get() || instantiate(this.cell);\r\n        cell.setPosition(0, 0, 0);\r\n        cell.parent = this.node;\r\n        cell.active = true;\r\n\r\n        cell.getComponent(UIMgrToastCell).init(data.message);\r\n\r\n        cell.getComponent(UIOpacity).opacity = 255;\r\n        tween(cell.getComponent(UIOpacity))\r\n            .delay(data.timeout || this.lifeTime)\r\n            .to(this.outTime, { opacity: 0 })\r\n            .call(() => {\r\n                this.pool.put(cell);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    clear() {\r\n        const children = this.node.children;\r\n        for (let index = children.length - 1; index >= 0; index--) {\r\n            Tween.stopAllByTarget(children[index].getComponent(UIOpacity));\r\n            children[index].destroy();\r\n        }\r\n    }\r\n\r\n    get size() {\r\n        return this.node.children.length;\r\n    }\r\n\r\n    protected onDestroy() {\r\n        this.pool.clear();\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        const children = this.node.children;\r\n        for (let index = children.length - 1, recovery = false; index >= 0; index--) {\r\n            const zero = index === children.length - 1;\r\n            const curr = children[index];\r\n\r\n            // 直接触发回收逻辑\r\n            if (recovery) {\r\n                Tween.stopAllByTarget(curr.getComponent(UIOpacity));\r\n                this.pool.put(curr);\r\n                continue;\r\n            }\r\n\r\n            if (zero) {\r\n                const currUT = curr.getComponent(UITransform);\r\n\r\n                const lastMaxY = 0 - currUT.height / 2;\r\n                const currMinY = curr.position.y + lastMaxY;\r\n\r\n                if (currMinY > lastMaxY) {\r\n                    // 存在空隙\r\n                    const addLen = Math.max(-this.squeezeSpeed * dt * (children.length - index), lastMaxY - currMinY);\r\n                    curr.setPosition(curr.position.x, curr.position.y + addLen, curr.position.z);\r\n                }\r\n            } else {\r\n                const last = children[index + 1];\r\n                const currUT = curr.getComponent(UITransform);\r\n                const lastUT = last.getComponent(UITransform);\r\n\r\n                const currMinY = curr.position.y - currUT.height / 2 - 6;//6像素的间隔\r\n                const lastMaxY = last.position.y + lastUT.height / 2;\r\n\r\n                if (currMinY < lastMaxY) {\r\n                    // 存在重叠\r\n                    const addLen = Math.min(this.squeezeSpeed * dt * (children.length - index - 1), lastMaxY - currMinY);\r\n                    curr.setPosition(curr.position.x, curr.position.y + addLen, curr.position.z);\r\n                    const winSize = view.getVisibleSize();\r\n                    if (currMinY > winSize.height / 2) {\r\n                        // 触发回收逻辑\r\n                        recovery = true;\r\n                        Tween.stopAllByTarget(curr.getComponent(UIOpacity));\r\n                        this.pool.put(curr);\r\n                    }\r\n                } else if (currMinY > lastMaxY) {\r\n                    // 存在空隙\r\n                    const addLen = Math.max(-this.squeezeSpeed * dt * (children.length - index), lastMaxY - currMinY);\r\n                    curr.setPosition(curr.position.x, curr.position.y + addLen, curr.position.z);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Component, Label, UIOpacity, UITransform, _decorator } from 'cc';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrToastCell')\r\n@requireComponent(UIOpacity)\r\n@requireComponent(UITransform)\r\nexport default class UIMgrToastCell extends Component {\r\n    @property(Label)\r\n    private title: Label = null;\r\n\r\n    init(title: string) {\r\n        if (title.split('\\n').find((v) => v.length > 30)) {\r\n            this.title.overflow = Label.Overflow.RESIZE_HEIGHT;\r\n            this.title.getComponent(UITransform).width = 600;\r\n        } else {\r\n            this.title.overflow = Label.Overflow.NONE;\r\n        }\r\n        this.title.string = title;\r\n        this.title.updateRenderData(true);\r\n    }\r\n\r\n    unuse() {\r\n        this.title.string = '';\r\n    }\r\n}\r\n\r\n","import { _decorator, Component, Director, director, Node } from 'cc';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('UIMgrZOrder')\r\nexport default class UIMgrZOrder extends Component {\r\n    private zOrder = false;\r\n    private tempArr: Node[] = [];\r\n\r\n    protected onLoad() {\r\n        this.checkUpdateZOrder();\r\n        this.node.on(Node.EventType.CHILD_ADDED, this.onChildAdded, this);\r\n        this.node.on(Node.EventType.CHILD_REMOVED, this.onChildRemoveed, this);\r\n        if (Node.EventType.CHILDREN_ORDER_CHANGED) {\r\n            this.node.on(Node.EventType.CHILDREN_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        } else {\r\n            this.node.on(Node.EventType.SIBLING_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        }\r\n    }\r\n\r\n    protected onDestroy() {\r\n        director.off(Director.EVENT_AFTER_UPDATE, this.updateZOrder, this);\r\n        this.node.off(Node.EventType.CHILD_ADDED, this.onChildAdded, this);\r\n        this.node.off(Node.EventType.CHILD_REMOVED, this.onChildRemoveed, this);\r\n        if (Node.EventType.CHILDREN_ORDER_CHANGED) {\r\n            this.node.off(Node.EventType.CHILDREN_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        } else {\r\n            this.node.off(Node.EventType.SIBLING_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        }\r\n    }\r\n\r\n    private onChildAdded(child: Node) {\r\n        this.checkUpdateZOrder();\r\n        child.on(Node.EventType.TRANSFORM_CHANGED, this.checkUpdateZOrder, this);\r\n    }\r\n\r\n    private onChildRemoveed(child: Node) {\r\n        child.off(Node.EventType.TRANSFORM_CHANGED, this.checkUpdateZOrder, this);\r\n    }\r\n\r\n    private checkUpdateZOrder() {\r\n        if (this.zOrder) return;\r\n        this.zOrder = true;\r\n        director.once(Director.EVENT_AFTER_UPDATE, this.updateZOrder, this);\r\n    }\r\n\r\n    /**\r\n     * 更新节点树排序\r\n     */\r\n    public updateZOrder() {\r\n        if (!this.zOrder) return;\r\n        Array.prototype.push.apply(this.tempArr, this.node.children);\r\n        this.tempArr\r\n            .sort((a, b) => {\r\n                return (a.position.z - b.position.z)\r\n                    || (a.getSiblingIndex() - b.getSiblingIndex());\r\n            })\r\n            .forEach((child, index) => {\r\n                child.setSiblingIndex(index);\r\n            });\r\n\r\n        // 一定要放到最后再设置false，\r\n        // 避免更新过程中设置siblingIndex，\r\n        // 导致无限重复调用\r\n        this.zOrder = false;\r\n        this.tempArr.length = 0;\r\n    }\r\n}\r\n\r\n"]}