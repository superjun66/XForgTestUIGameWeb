{"version":3,"sources":["../file:/D:/XForgTestUIGame/assets/app/file:/D:/XForgTestUIGame/assets/app/app.ts","../file:/D:/XForgTestUIGame/assets/app-appinit/view/file:/D:/XForgTestUIGame/assets/app-appinit/view/AppInit.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/Audio.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/AudioEngine.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/AudioManager.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/base/file:/D:/XForgTestUIGame/extensions/app/assets/base/BaseAppInit.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/base/file:/D:/XForgTestUIGame/extensions/app/assets/base/BaseControl.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/base/file:/D:/XForgTestUIGame/extensions/app/assets/base/BaseController.ts","../file:/D:/XForgTestUIGame/assets/res-native/data/file:/D:/XForgTestUIGame/assets/res-native/data/BaseData.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/base/file:/D:/XForgTestUIGame/extensions/app/assets/base/BaseManager.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/base/file:/D:/XForgTestUIGame/extensions/app/assets/base/BaseModel.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/base/file:/D:/XForgTestUIGame/extensions/app/assets/base/BaseView.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/file:/D:/XForgTestUIGame/extensions/app/assets/Core.ts","../file:/D:/CocosDashboard_1.0.9/Creator/Creator/3.8.3/resources/resources/3d/engine/editor/assets/tools/file:/D:/CocosDashboard_1.0.9/Creator/Creator/3.8.3/resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/lib/debug/file:/D:/XForgTestUIGame/extensions/app/assets/lib/debug/debug.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/event/file:/D:/XForgTestUIGame/extensions/app/assets/manager/event/EventManager.ts","../file:/D:/XForgTestUIGame/assets/app/file:/D:/XForgTestUIGame/assets/app/handle.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/JmClickComponent.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/JmHorizontalListView.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/JmListView.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/JmListViewItem.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/JmNodePoolMgr.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/JmRefreshFooter.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/JmRefreshHeader.ts","../file:/D:/XForgTestUIGame/assets/res-native/data/file:/D:/XForgTestUIGame/assets/res-native/data/JmRoomData.ts","../file:/D:/XForgTestUIGame/assets/res-native/manager/file:/D:/XForgTestUIGame/assets/res-native/manager/JmRoomDataMgr.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/loader/file:/D:/XForgTestUIGame/extensions/app/assets/manager/loader/LoaderManager.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/lib/logger/file:/D:/XForgTestUIGame/extensions/app/assets/lib/logger/logger.ts","../file:/D:/XForgTestUIGame/assets/res-native/tool/file:/D:/XForgTestUIGame/assets/res-native/tool/RefreshOrLoadState.ts","../file:/D:/XForgTestUIGame/assets/app/file:/D:/XForgTestUIGame/assets/app/setting.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/file:/D:/XForgTestUIGame/extensions/app/assets/manager/sound/SoundManager.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/lib/storage/file:/D:/XForgTestUIGame/extensions/app/assets/lib/storage/storage.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/lib/task/file:/D:/XForgTestUIGame/extensions/app/assets/lib/task/task.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/timer/file:/D:/XForgTestUIGame/extensions/app/assets/manager/timer/TimerManager.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/UIManager.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/UIMgrLoading.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/UIMgrShade.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/UIMgrToast.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/UIMgrToastCell.ts","../file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/file:/D:/XForgTestUIGame/extensions/app/assets/manager/ui/comp/UIMgrZOrder.ts"],"names":["App","_Core","call","_inheritsLoose","_createClass","key","get","this","_inst","Core","app","inst","cccInited","game","once","Game","EVENT_ENGINE_INITED","appInited","EventType","EVENT_APPINIT_FINISHED","_RF","pop","ccclass","_decorator","property","_dec","_dec2","Sprite","_descriptor","_applyDecoratedDescriptor","_class2","_BaseAppInit","AppInit","_this","_len","arguments","length","args","Array","_key","apply","concat","_initializerDefineProperty","_assertThisInitialized","_proto","prototype","onLoad","Manager","Util","InitLayout","self","IsIphoneX","manager","loader","load","bundle","path","type","SpriteFrame","onComplete","asset","console","log","bg","getComponent","spriteFrame","IsIpad","onFinish","BaseAppInit","configurable","enumerable","writable","initializer","_class","Audio","volume","volumeScale","mute","endedCallback","startedCallback","_playing","_paused","audioSource","node","Node","addComponent","AudioSource","on","ENDED","onAudioEnded","STARTED","onAudioStarted","play","clip","onEnded","onStarted","playing","paused","stop","emit","pause","resume","setVolume","scale","getVolume","setVolumeScale","getVolumeScale","setLoop","loop","getLoop","setMute","getMute","clear","destroy","set","value","AudioEngine","audioID","endedCallbackMap","Map","effectMap","music","musicMute","musicVolumeScale","effectMute","effectVolumeScale","playEffect","audioClip","audio","AudioManager","getAudio","putAudio","callback","stopEffect","id","_this$effectMap$get","stopAllEffects","forEach","pauseEffect","_this$effectMap$get2","pauseAllEffects","resumeEffect","_this$effectMap$get3","resumeAllEffects","setEffectMute","_this$effectMap$get4","getEffectMute","_this$effectMap$get5","setEffectVolume","_this$effectMap$get6","getEffectVolume","_this$effectMap$get7","setAllEffectsVolume","setEffectVolumeScale","_this$effectMap$get8","getEffectVolumeScale","_this$effectMap$get9","setGlobalEffectsVolumeScale","getGlobalEffectsVolumeScale","setGlobalEffectsMute","getGlobalEffectsMute","playMusic","stopMusic","pauseMusic","resumeMusic","setMusicVolume","getMusicVolume","setMusicVolumeScale","_this$music","getMusicVolumeScale","setMusicMute","_this$music2","getMusicMute","setEndedCallback","_this$music3","has","pauseAll","resumeAll","stopAll","audioArray","push","AdminBundleName","ModelBundleName","ControlBundleName","ControllerBundleName","ManagerBundleName","_Component","_base_mgr_completed","_base_user_completed","_base_inited","_base_finished","startInit","_this2","projectBundles","settings","querySettings","Settings","Category","ASSETS","lib","task","createAny","add","next","retry","indexOf","assetManager","preloadAny","url","ext","err","loadBundle","start","onProgress","_base_total","BaseManager","init","getBundle","innerNextInit","onUserInit","_base_completed","innerFinished","_this3","Sound","setting","defaultEffectName","playDefaultEffect","e","target","ui","onceUserInterface","TOUCH_END","event","Button","setTimeout","isValid","sound","eventPhase","EventTouch","CAPTURING_PHASE","onEnable","TOUCH_START","onDisable","off","showDefault","defaultMusicName","onTouch","_this4","isMusicPlaying","isMusicPaused","replayMusic","offUserInterface","onUserInterface","playDefaultMusic","nextInit","getUserAssetNum","completed","total","Math","max","getTotalAssetNum","_base_mgr_total","_base_user_total","min","Component","Event","_class5","_SuperBaseControl","BaseControl","_base_inst","SuperBaseControl","CallbackInfo","CallbackList","callbacks","size","index","info","splice","remove","removeByCallback","removeByTarget","EventEmitter","listeners","_proto2","cb","toString","targetOff","Object","hasOwnProperty","t","_proto3","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_SuperBaseController","BaseController","SuperBaseController","Proxy","_key6","Logger","create","name","uuid","UUID","Date","now","loadError","_base_event","EventTarget","_base_manager_name","js","getClassName","slice","managerName","constructor","toLocaleLowerCase","resetInEditor","widget","Widget","isAlignBottom","isAlignLeft","isAlignRight","isAlignTop","top","left","right","bottom","alignMode","AlignMode","ON_WINDOW_RESIZE","onInited","onFinished","finish","createUUID","_this$_base_event","data","count","sysMgrCount","getDirWithPath","Prefab","item","endsWith","getUserAssetUrls","pathArr","progress","complete","urls","totalAsset","completeAsset","userMgrList","sysMgrList","timer","initSysMgrTask","createASync","loadUserMgrTask","UserManagerRoot","root","getChildByPath","prefab","basename","instantiate","parent","active","EVENT_SYS_MANAGER_INITED","initUserMgrTask","EVENT_USER_MANAGER_INITED","EVENT_MANAGER_INITED","EVENT_MANAGER_FINISHED","window","bind","toLocaleString","warn","error","disallowMultiple","BlockEvents","TOUCH_MOVE","TOUCH_CANCEL","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","MOUSE_ENTER","MOUSE_LEAVE","MOUSE_WHEEL","HideEvent","Enum","ViewType","ViewState","Group","displayOrder","Infinity","style","PaperAllToOwner","_dec3","group","tooltip","_dec4","_dec5","visible","is3D","_dec6","isPage","_dec7","_class3","BaseView","_base_view_created","_base_view_state","Hid","_base_view_name","_base_touch_enable","_base_show_hide_delays","_base_mini_show","Set","_descriptor2","_descriptor3","_descriptor4","_descriptor5","miniViews","BindControl","Control","_BaseView","BindController","Controller","_class4","_dec8","_BaseView2","isViewValid","Page","isPaper","Paper","isPaperAll","PaperAll","isPop","Pop","isTop","Top","is2D","Scene","viewName","director","getScene","isMiniViewShow","setTouchEnabled","enabled","blockPropagation","blockInput","propagationStopped","stopPropagation","propagationImmediateStopped","onBaseViewCreate","uiTransform","UITransform","hitTest","i","hideAllMiniViews","hide","hideMiniViews","_ref","views","sortUserInterface","showMiniViews","_ref2","onShow","onHide","typeName","createSync","_loop","names","createMixMiniViewsTask","_this5","filter","baseName","aSync","result","scheduleOnce","_this5$_base_mini_sho","show","silent","attr","zIndex","_this5$_base_mini_sho2","owner","onError","code","_this5$_base_mini_sho3","UI","ErrorCode","LoadError","setNodeAttr","setPosition","position","x","y","siblingIndex","setSiblingIndex","beforeShow","_this6","Showed","changeState","BeforeShow","isNextCalled","Showing","refreshShade","shift","BeforeHide","beforeHide","Hiding","hideEvent","release","focus","boo","onFocus","onLostFocus","loadRes","preloadRes","loadResDir","preloadResDir","setFont","Font","font","setSpine","sp","SkeletonData","skeletonData","setSprite","onShade","_hideEvent","_singleton","_captureFocus","_Core$inst","_shade","_Core$inst2","_blockInput","singleton","captureFocus","shade","getOwnPropertyDescriptor","Lib","storage","debug","logger","Config","Data","Store","controller","eventTarget","EventMap","Director","EVENT_RESET","config","store","getClassById","setClassAlias","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","Canvas","halfScreenWidth","width","halfScreenHeight","height","miscNode","getChildByName","buttonNode","titleNode","newLabel","EnableAllCompositeModeButton","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","Toggle","TOGGLE","toggleSingleMode","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","update","deltaTime","obj","prop","getter","object","_i","_Object$keys","keys","defineProperty","setter","define","_BaseManager","EventManager","events","rootName","JmClickComponent","performClick","startPos","OnClickTouchEnd","onDestroy","getType","getLocation","pos","subtract","onItemClick","menu","requireComponent","ScrollView","JmHorizontalListView","_descriptor6","_descriptor7","footerController","onPullLeftToLoad","hasMore","scrollView","footer","footerWidth","_touchStartX","_touchStartFromLeft","footerHolderWidth","isUserTouched","loadingState","RefreshOrLoadState","NONE","componentName","showingViews","recycledViews","itemViewDirty","itemViewWidths","_data","_dirty","_sizeDirty","_checkRight","content","anchorX","anchorY","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","getLocationX","floor","getScrollOffset","getData","setData","setComponentName","updateSize","vertical","horizontal","getNormalContentWidth","getContentWidth","pullLeftToLoadEnabled","getItemPosOffset","getItemCount","leftOffset","rightOffset","sum","getItemWidthWithSpacing","undefined","itemWidth","spacing","getListLeftRightVisiblePos","scrollX","isVisible","_this$getListLeftRigh","leftVisibleX","rightVisibleX","itemLeftX","itemRightX","dt","child","getItemView","component","updateItem","getItemWidth","addChild","recycleChild","checkFooterView","isRight","scrollToOffset","Vec2","getMaxScrollOffset","footerView","JmRefreshFooter","setState","viewBottomY","contentBottomY","footerOffset","removeFromParent","itemView","itemPrefab","onScrollEvent","sender","SCROLLING","startPullLeftLoad","markChildrenDirty","notifyChange","checkRight","notifyItemChange","updateHeight","setPullLeftToLoadListener","listener","REFRESHING","offset","maxOffset","ceil","updateLoadingState","onLoadComplete","COMPLETE","state","onLoadingStateChange","newState","JmListView","_descriptor8","_descriptor9","_descriptor10","headerController","onPullDownToRefresh","_descriptor11","_descriptor12","_descriptor13","onPullUpToLoad","header","headerHeight","footerHeight","_touchStartY","_touchStartFromTop","refreshState","footerHolderHeight","itemViewHeights","_checkBottom","extraData","elastic","bounceDuration","pullDownToRefreshEnabled","cancelInnerEvents","getLocationY","offsetY","checkPullDownRefresh","onScrollOffset","startPullDownRefresh","newHeight","getNormalContentHeight","getContentHeight","pullUpToLoadEnabled","refreshFooterShow","setTopMargin","num","topMargin","bottomMargin","getItemHeightWithSpacing","itemHeight","getListTopBottomVisiblePos","scrollY","halfHeight","bottomVisibleY","_this$getListTopBotto","topVisibleY","itemTopY","itemBottomY","checkHeaderView","isBottom","headerView","JmRefreshHeader","checkPullUpLoad","checkBottom","emptyView","sys","getNetworkType","NetworkType","noNetworkImg","emptyPic","emptyImg","setPullUpToLoadListener","setPullDownToRefreshListener","updateRefreshState","READY_TO_REFRESH","pullDownRefresh","stopAutoScroll","onRefreshComplete","scrollToTop","EMPTY","stopPullDownRefresh","COMPLETING","onRefreshStateChange","setExtraData","getExtraData","handleSuccess","isLoadMore","listView","newData","isArray","handleFailure","loadMore","Orientation","JmListViewItem","itemId","onTouchEvent","dstx","abs","dsty","getItemHeight","JmNodePool","_NodePool","_cellPfb","NodePool","JmNodePoolMgr","InitNodePool","poolKey","cellPfb","poolHandlerComp","DestroyPool","pool","_nodePoolData","GetCell","GetPool","PutCell","put","IdentityCellPool","loading","Skeleton","_state","refreshSpine","_BaseData","JmRoomData","_roomData","initRoomData","roomData","updateRoomData","updateRoomProperty","k","v","getIdentities","getIdentity","getRoomNum","getSeats","BaseData","JmRoomDataMgr","OnReceiveServerData","serverData","InitRoomsData","len","InitRoomData","roomKey","GetRoom","CreateRoom","InitCurrentRoom","CleanRooms","_offset","_roomsData","_roomCfg","_roomsKeys","_gameState","CleanRoom","room","GetOffSet","GetRoomByRoomKey","GetRoomNum","_currentRoomKey","GetRoomIdentities","GetRoomIdentity","GetRoomSeats","InitCurrentRoomProto","_roomCount","_currentRoomData","_joinRoomsList","unshift","JSON","stringify","_isOwner","GetCurrentRoomInfo","GetCurrentRoomKey","SetCurrentNullRoomKey","SetRoomDayOrNight","currentType","GetRoomDayOrNight","delRoomCfg","setRoomCfg","vule","getRoomCfg","getRoomCount","setRoomCount","setGameState","getGameState","setGameDay","bol","_isDay","getGameDay","setOwner","isOwner","getLoadKey","_loadKey","setLoadKey","REGEX","Command","command","cache","Loader","assetMap","loadingMap","preload","params","preloadDir","version","_extends","addRef","decRef","loadAsync","Promise","resolve","loadDir","results","assets","loadDirAsync","loadRemote","loadRemoteAsync","onFail","onSuccess","imageAsset","createWithImage","releaseAll","assetList","LoaderManager","handle","_this7","res","Texture2D","TextureCube","SceneAsset","_this8","_this9","_ref3","_assetManager$getBund","_bundle","Asset","ctor","releaseUnused","_assetManager$getBund2","releaseUnusedAssets","_ref4","loadBundleAsync","_this11","removeBundle","b","reloadBundle","_ref5","_assetManager$cacheMa","_this12","baseUrl","configUrl","test","downloader","remoteServerAddress","cacheManager","removeCache","ab","AssetManager","Bundle","json","base","reloadBundleAsync","_this13","_ref6","_this14","_this15","empty","level","styleColor","title","titleColor","UIManager","defaultUI","autoFit","delay","begin","end","speed","blur","SoundManager","localStorage","setItem","getItem","parse","MusicName","EffectName","BundleName","musicMuteCacheKey","effectMuteCacheKey","musicVolumeScaleCacheKey","effectVolumeScaleCacheKey","defaultMusicVolume","defaultEffectVolume","audioCache","effectInterval","playingMusic","_setting$preload","AudioClip","EVENT_HIDE","EVENT_SHOW","bundleName","Function","_ref7","soundName","onPlay","setButtonEffect","opts","_ref8","_ref8$volume","_ref8$interval","interval","_ref9","_ref9$volume","_ref9$loop","_ref9$interval","isEffectMute","playEffectAsync","_playEffectAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","abrupt","_x","_ref10","_ref10$volume","_ref10$force","force","isMusicMute","playMusicAsync","_this$playingMusic$na","split","isCache","_this$playingMusic$na2","chars","getWeekUpdateTime","curDate","a","c","date1","date2","d","date","getFullYear","getMonth","getDate","round","valueOf","getDay","getDayUpdateTime","toLocaleDateString","Storage","_cache","secretKey","text","encrypted","charCode","charCodeAt","fromCharCode","encode","encryptedText","decrypted","decode","removeItem","setWeek","updateTime","getWeek","setDay","Sync","running","list","isRunning","isStop","timeout","ASync","Any","handles","async","execute","fun","retryMax","retryFinish","DailyTimer","time","startMs","endMs","checkDay","_time$split","startSegment","_time$split$","endSegment","_startSegment$split$m","map","part","parseInt","_startSegment$split$m2","startH","_startSegment$split$m3","startM","_startSegment$split$m4","startS","parseTimeToMs","_endSegment$split$map","_endSegment$split$map2","endH","_endSegment$split$map3","endM","_endSegment$split$map4","endS","getDayTimeMs","getHours","getMinutes","getSeconds","getMilliseconds","h","m","s","isInRange","currentMs","dateDay","IntervalTimer","elapsed","Timer","intervalTimer","dailyTimers","register","unregister","unregisterAll","registerDailyTrigger","unregisterDailyTrigger","unregisterAllDailyTrigger","TimerManager","timers","_proto4","UIScene","ViewTypes","ViewName","MiniViewName","stringCaseNegate","str","replace","searchStr","startIndex","UserInterface","toast","defaultData","currScene","currPage","currFocus","prefabCache","sceneCache","touchEnabled","touchMaskMap","showLoadingMap","uiLoadingMap","uiShowingMap","showQueue","getComponentsInChildren","Camera","camera","priority","far","near","addPersistRootNode","createTypeRoot","shadePre","loadingPre","toastPre","designResolution","SCREEN","windowSize","screen","resolutionPolicy","policy","autoFitResolutionPolicy","ResolutionPolicy","FIXED_HEIGHT","view","setResolutionPolicy","FIXED_WIDTH","schedule","equals","d2","layer","Layers","UI_2D","UIMgrZOrder","addTouchMaskListener","removeTouchMaskListener","getBaseView","components","find","getViewInParents","com","getViewInChildren","children","getUIClass","getClassByName","getUIPath","getUIPrefix","getUIParent","prefix","viewType","getUIInScene","multiple","getUIInShowing","_name","getNativeBundleName","uiName","oldBundleName","getResBundleName","initBundle","installUI","uiBundles","isScene","getSceneInfo","uninstallUI","resBundle","naBundle","nameOrCom","isShow","nodes","every","exclude","checkUIValid","View","valid","uiRoots","uiRoot","isCaptureFocus","isNeedShade","shadeSetting","assign","UIMgrShade","z","shadeIndex","getSiblingIndex","nodeIndex","parsingPrefab","_node$getComponent","updateAlignment","parsingScene","scene","addUILoadingUuid","loadingUuid","removeUILoadingUuid","createUI","_this10","showLoading","uiLoadingUuid","isSingleton","hideLoading","showToast","isInQueue","isLoading","putInShowQueue","queue","consumeShowQueue","ret","showUI","_params$top","_params$attr","_params$silent","LogicError","oldCom","runSceneImmediate","autoReleaseAssets","_params$silent2","InvalidError","showAsync","hideAll","_temp","_this16","_this$loading$getComp","_this17","UIMgrLoading","_this$loading$getComp2","addTouchMask","_this18","removeTouchMask","message","UIMgrToast","clearToast","targetOffUserInterface","_this$UserInterface","updateZOrder","screenshot","renderTexture","cameraList","sort","enabledInHierarchy","targetTexture","cameraFilter","cameraList2","pipeline","render","canvas","cameraComponent","ringScale","reverse","angleSpeed","ringSpeed","inited","drawing","timedown","angle","Graphics","onDraw","graphics","centerX","centerY","r","allPI","PI","arc","stroke","Size","UIOpacity","Material","blurFrame","sprite","customMaterial","flipUVY","cameras","EVENT_BEFORE_RENDER","_this2$blurFrame2","_this2$blurFrame","RenderTexture","reset","texture","blurMaterial","setProperty","shadeFrame","opacity","_this$blurFrame","_this$blurFrame2","uiOpacity","_delay","_begin","_end","_speed","lifeTime","outTime","squeezeSpeed","cell","UIMgrToastCell","tween","to","Tween","stopAllByTarget","recovery","zero","curr","lastMaxY","currMinY","addLen","last","currUT","lastUT","getVisibleSize","Overflow","RESIZE_HEIGHT","updateRenderData","unuse","zOrder","tempArr","checkUpdateZOrder","CHILD_ADDED","onChildAdded","CHILD_REMOVED","onChildRemoveed","CHILDREN_ORDER_CHANGED","SIBLING_ORDER_CHANGED","EVENT_AFTER_UPDATE","TRANSFORM_CHANGED"],"mappings":"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","file":"all.js","sourcesContent":["import { Game, game } from 'cc';\r\nimport { DEBUG, DEV, EDITOR } from 'cc/env';\r\nimport Core from '../../extensions/app/assets/Core';\r\nimport { IApp } from '../app-builtin/app-admin/executor';\r\nimport { appInited, appReady, cccInited, cccReady } from './handle';\r\n\r\nexport class App extends Core<IApp> {\r\n    protected static _inst: App = null;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new App();\r\n        return this._inst;\r\n    }\r\n\r\n    private constructor() {\r\n        super();\r\n    }\r\n}\r\n\r\nexport const app = App.inst;\r\n\r\nif (DEBUG) {\r\n    //@ts-ignore\r\n    window['app'] = app;\r\n    //@ts-ignore\r\n    window['App'] = App;\r\n}\r\n\r\nif (!EDITOR || DEV) {\r\n    cccReady && cccReady(app);\r\n    appReady && appReady(app);\r\n    cccInited && game.once(Game.EVENT_ENGINE_INITED, function () { cccInited(app); });\r\n    appInited && app.once(App.EventType.EVENT_APPINIT_FINISHED, function () { appInited(app); });\r\n}","import { Sprite, SpriteFrame, _decorator } from 'cc';\r\nimport BaseAppInit from '../../../extensions/app/assets/base/BaseAppInit';\r\nimport { app } from '../../app/app';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AppInit')\r\nexport class AppInit extends BaseAppInit {\r\n    // @property(Button)\r\n    // login: Button;\r\n    @property(Sprite)\r\n    bg: Sprite;\r\n\r\n    // /**\r\n    // * 获得用户资源总量，这里返回几，就需要用户自行调用几次nextInit\r\n    // */\r\n    // protected getUserAssetNum(): number {\r\n    //     return 1;\r\n    // }\r\n\r\n    // protected onUserInit() {\r\n    //     this.login.node.active = true;\r\n    //     this.login.node.on(Button.EventType.CLICK, async () => {\r\n    //         // 登录\r\n    //         const uuid = app.manager.ui.showLoading();\r\n    //         await app.store.user.login();\r\n    //         app.manager.ui.hideLoading(uuid);\r\n    //         app.manager.ui.showToast('登录成功');\r\n    //         // 下一步\r\n    //         this.nextInit();\r\n    //     });\r\n    // }\r\n\r\n    onLoad() {\r\n        // this.login.node.active = false;\r\n        app.Manager.Util.InitLayout();\r\n        let self = this;\r\n        if (app.Manager.Util.IsIphoneX()) {\r\n            app.manager.loader.load({\r\n                bundle: '', // 不传入bundle，默认为resources\r\n                path: 'bj_liuhai/spriteFrame',\r\n                type: SpriteFrame,\r\n                onComplete(asset) {\r\n                    console.log('加载资源完成', asset);\r\n                    self.bg.getComponent(Sprite).spriteFrame = asset;\r\n                }\r\n            })\r\n        }\r\n        else if (app.Manager.Util.IsIpad()) {\r\n            app.manager.loader.load({\r\n                bundle: '', // 不传入bundle，默认为resources\r\n                path: 'home/bj_pad/spriteFrame',\r\n                type: SpriteFrame,\r\n                onComplete(asset) {\r\n                    console.log('加载资源完成', asset);\r\n                    self.bg.getComponent(Sprite).spriteFrame = asset;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onFinish() {\r\n    //     // 执行完成操作\r\n    //     this.node.destroy();\r\n    }\r\n}","import { AudioClip, AudioSource, Node } from 'cc';\r\n\r\nexport default class Audio {\r\n    private volume = 1;\r\n    private volumeScale = 1;\r\n    private mute = false;\r\n    private endedCallback: Function = null;\r\n    private startedCallback: Function = null;\r\n\r\n    private _playing = false;\r\n    public get playing() {\r\n        return this._playing;\r\n    }\r\n    private set playing(value) {\r\n        this._playing = value;\r\n    }\r\n\r\n    private _paused = false;\r\n    public get paused() {\r\n        return this._paused;\r\n    }\r\n    private set paused(value) {\r\n        this._paused = value;\r\n    }\r\n\r\n    private audioSource: AudioSource = null;\r\n    constructor() {\r\n        const node = new Node('audio');\r\n        this.audioSource = node.addComponent(AudioSource);\r\n        node.on(AudioSource.EventType.ENDED, this.onAudioEnded, this);\r\n        node.on(AudioSource.EventType.STARTED, this.onAudioStarted, this);\r\n    }\r\n\r\n    private onAudioEnded() {\r\n        if (this.endedCallback) {\r\n            const endedCallback = this.endedCallback;\r\n            this.endedCallback = null;\r\n            endedCallback();\r\n        }\r\n    }\r\n\r\n    private onAudioStarted() {\r\n        if (this.startedCallback) {\r\n            const startedCallback = this.startedCallback;\r\n            this.startedCallback = null;\r\n            startedCallback();\r\n        }\r\n    }\r\n\r\n    play(clip: AudioClip, onEnded: Function = null, onStarted: Function = null) {\r\n        this.audioSource.clip = clip;\r\n        this.endedCallback = onEnded;\r\n        this.startedCallback = onStarted;\r\n        this.audioSource.play();\r\n        this.playing = true;\r\n        this.paused = false;\r\n        return this;\r\n    }\r\n\r\n    stop() {\r\n        this.playing = false;\r\n        this.paused = false;\r\n        this.audioSource.stop();\r\n        this.audioSource.node.emit(AudioSource.EventType.ENDED);\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        if (!this.playing) return this;\r\n\r\n        this.paused = true;\r\n        this.audioSource.pause();\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        if (!this.playing) return this;\r\n        if (!this.paused) return this;\r\n\r\n        this.paused = false;\r\n        this.audioSource.play();\r\n        return this;\r\n    }\r\n\r\n    setVolume(volume = 1, scale?: number) {\r\n        this.volume = volume;\r\n        if (typeof scale === 'number') this.volumeScale = scale;\r\n        this.audioSource.volume = volume * this.volumeScale * (this.mute ? 0 : 1);\r\n        return this;\r\n    }\r\n\r\n    getVolume() {\r\n        return this.volume;\r\n    }\r\n\r\n    setVolumeScale(scale = 1) {\r\n        this.volumeScale = scale;\r\n        this.audioSource.volume = this.volume * scale * (this.mute ? 0 : 1);\r\n        return this;\r\n    }\r\n\r\n    getVolumeScale() {\r\n        return this.volumeScale;\r\n    }\r\n\r\n    setLoop(loop: boolean) {\r\n        this.audioSource.loop = loop;\r\n        return this;\r\n    }\r\n\r\n    getLoop() {\r\n        return this.audioSource.loop;\r\n    }\r\n\r\n    setMute(mute = true) {\r\n        this.mute = mute;\r\n        this.setVolume(this.volume);\r\n        return this;\r\n    }\r\n\r\n    getMute() {\r\n        return this.mute;\r\n    }\r\n\r\n    onEnded(endedCallback: Function) {\r\n        this.endedCallback = endedCallback;\r\n        return this;\r\n    }\r\n\r\n    clear() {\r\n        this.volume = 1;\r\n        this.volumeScale = 1;\r\n        this.mute = false;\r\n        this.paused = false;\r\n        this.endedCallback = null;\r\n        this.startedCallback = null;\r\n        if (this.audioSource) {\r\n            this.audioSource.stop();\r\n            this.audioSource.volume = 1;\r\n            this.audioSource.clip = null;\r\n            this.audioSource.loop = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n        this.audioSource.destroy();\r\n        this.audioSource.node.destroy();\r\n        this.audioSource = null;\r\n    }\r\n}","import { AudioClip } from 'cc';\r\nimport Audio from './Audio';\r\nimport AudioManager from './AudioManager';\r\n\r\nexport default class AudioEngine {\r\n    private static _inst: AudioEngine = null;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new AudioEngine();\r\n        return this._inst;\r\n    }\r\n    private constructor() { }\r\n\r\n    /**effect的id从1开始，music的id始终为0 */\r\n    private audioID = 1;\r\n    private endedCallbackMap: Map<number, Function> = new Map();\r\n    private effectMap: Map<number, Audio> = new Map();\r\n    private music: Audio = null;\r\n\r\n    private musicMute = false;\r\n    private musicVolumeScale = 1;\r\n\r\n    private effectMute = false;\r\n    private effectVolumeScale = 1;\r\n\r\n    ////////////////////////////////\r\n    // 音效                        //\r\n    ////////////////////////////////\r\n    playEffect(audioClip: AudioClip, volume = 1, loop = false, onStarted: (audioID: number) => any = null, onEnded: Function = null) {\r\n        if (this.audioID > 100000) this.audioID = 1;\r\n\r\n        const audioID = this.audioID++;\r\n        const audio = AudioManager.inst.getAudio();\r\n        this.effectMap.set(audioID, audio);\r\n        if (onEnded) this.endedCallbackMap.set(audioID, onEnded);\r\n\r\n        audio.setLoop(loop)\r\n            .setMute(this.effectMute)\r\n            .setVolume(volume, this.effectVolumeScale)\r\n            .play(audioClip, () => {\r\n                AudioManager.inst.putAudio(audio);\r\n                this.effectMap.delete(audioID);\r\n                const callback = this.endedCallbackMap.get(audioID);\r\n                if (callback) {\r\n                    this.endedCallbackMap.delete(audioID);\r\n                    callback();\r\n                }\r\n            }, () => {\r\n                onStarted && onStarted(audioID);\r\n            });\r\n\r\n        return audioID;\r\n    }\r\n\r\n    stopEffect(id: number) {\r\n        return !!this.effectMap.get(id)?.stop();\r\n    }\r\n\r\n    stopAllEffects() {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.stop();\r\n        });\r\n    }\r\n\r\n    pauseEffect(id: number) {\r\n        return !!this.effectMap.get(id)?.pause();\r\n    }\r\n\r\n    pauseAllEffects() {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.pause();\r\n        });\r\n    }\r\n\r\n    resumeEffect(id: number) {\r\n        return !!this.effectMap.get(id)?.resume();\r\n    }\r\n\r\n    resumeAllEffects() {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.resume();\r\n        });\r\n    }\r\n\r\n    setEffectMute(id: number, mute: boolean) {\r\n        return !!this.effectMap.get(id)?.setMute(mute);\r\n    }\r\n\r\n    getEffectMute(id: number) {\r\n        return !!this.effectMap.get(id)?.getMute();\r\n    }\r\n\r\n    setEffectVolume(id: number, volume: number) {\r\n        return !!this.effectMap.get(id)?.setVolume(volume);\r\n    }\r\n\r\n    getEffectVolume(id: number) {\r\n        return this.effectMap.get(id)?.getVolume() || 0;\r\n    }\r\n\r\n    setAllEffectsVolume(volume: number) {\r\n        this.effectMap.forEach((audio) => {\r\n            audio.setVolume(volume);\r\n        });\r\n    }\r\n\r\n    setEffectVolumeScale(id: number, volume: number) {\r\n        return !!this.effectMap.get(id)?.setVolumeScale(volume);\r\n    }\r\n\r\n    getEffectVolumeScale(id: number) {\r\n        return this.effectMap.get(id)?.getVolumeScale() || 0;\r\n    }\r\n\r\n    setGlobalEffectsVolumeScale(scale: number) {\r\n        this.effectVolumeScale = scale;\r\n        this.effectMap.forEach((audio) => {\r\n            audio.setVolumeScale(scale);\r\n        });\r\n    }\r\n\r\n    getGlobalEffectsVolumeScale() {\r\n        return this.effectVolumeScale;\r\n    }\r\n\r\n    setGlobalEffectsMute(mute: boolean) {\r\n        this.effectMute = mute;\r\n        this.effectMap.forEach((audio) => {\r\n            audio.setMute(mute);\r\n        });\r\n    }\r\n\r\n    getGlobalEffectsMute() {\r\n        return this.effectMute;\r\n    }\r\n\r\n    ////////////////////////////////\r\n    // 音乐                        //\r\n    ////////////////////////////////\r\n    playMusic(audioClip: AudioClip, volume = 1, onStarted: Function = null) {\r\n        this.stopMusic();\r\n\r\n        this.music = AudioManager.inst.getAudio();\r\n        this.music\r\n            .setLoop(true)\r\n            .setMute(this.musicMute)\r\n            .setVolume(volume, this.musicVolumeScale)\r\n            .play(audioClip, null, onStarted);\r\n\r\n        return 0;\r\n    }\r\n\r\n    stopMusic() {\r\n        if (!this.music) return false;\r\n        this.music.destroy();\r\n        this.music = null;\r\n        return true;\r\n    }\r\n\r\n    pauseMusic() {\r\n        if (!this.music) return false;\r\n        this.music.pause();\r\n        return true;\r\n    }\r\n\r\n    resumeMusic() {\r\n        if (!this.music) return false;\r\n        this.music.resume();\r\n        return true;\r\n    }\r\n\r\n    setMusicVolume(volume: number) {\r\n        if (!this.music) return false;\r\n        this.music.setVolume(volume);\r\n        return true;\r\n    }\r\n\r\n    getMusicVolume() {\r\n        if (!this.music) return -1;\r\n        return this.music.getVolume();\r\n    }\r\n\r\n    setMusicVolumeScale(scale: number) {\r\n        this.musicVolumeScale = scale;\r\n        this.music?.setVolumeScale(scale);\r\n        return true;\r\n    }\r\n\r\n    getMusicVolumeScale() {\r\n        return this.musicVolumeScale;\r\n    }\r\n\r\n    setMusicMute(mute: boolean) {\r\n        this.musicMute = mute;\r\n        this.music?.setMute(mute);\r\n        return true;\r\n    }\r\n\r\n    getMusicMute() {\r\n        return this.musicMute;\r\n    }\r\n\r\n    ////////////////////////////////\r\n    // 通用                        //\r\n    ////////////////////////////////\r\n    setEndedCallback(audioID: number, callback: Function) {\r\n        if (audioID === 0) {\r\n            return !!this.music?.onEnded(callback);\r\n        } else {\r\n            if (this.effectMap.has(audioID)) {\r\n                this.endedCallbackMap.set(audioID, callback);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    stop(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.stopMusic();\r\n        } else {\r\n            return this.stopEffect(audioID);\r\n        }\r\n    }\r\n\r\n    pause(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.pauseMusic();\r\n        } else {\r\n            return this.pauseEffect(audioID);\r\n        }\r\n    }\r\n\r\n    resume(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.resumeMusic();\r\n        } else {\r\n            return this.resumeEffect(audioID);\r\n        }\r\n    }\r\n\r\n    pauseAll() {\r\n        this.pauseMusic();\r\n        this.pauseAllEffects();\r\n    }\r\n\r\n    resumeAll() {\r\n        this.resumeMusic();\r\n        this.resumeAllEffects();\r\n    }\r\n\r\n    stopAll() {\r\n        this.stopMusic();\r\n        this.stopAllEffects();\r\n    }\r\n\r\n    setVolume(audioID: number, volume: number) {\r\n        if (audioID === 0) {\r\n            return this.setMusicVolume(volume);\r\n        } else {\r\n            return this.setEffectVolume(audioID, volume);\r\n        }\r\n    }\r\n\r\n    getVolume(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.getMusicVolume();\r\n        } else {\r\n            return this.getEffectVolume(audioID);\r\n        }\r\n    }\r\n\r\n    setVolumeScale(audioID: number, scale: number) {\r\n        if (audioID === 0) {\r\n            return this.setMusicVolumeScale(scale);\r\n        } else {\r\n            return this.setEffectVolumeScale(audioID, scale);\r\n        }\r\n    }\r\n\r\n    getVolumeScale(audioID: number) {\r\n        if (audioID === 0) {\r\n            return this.getMusicVolumeScale();\r\n        } else {\r\n            return this.getEffectVolumeScale(audioID);\r\n        }\r\n    }\r\n}","import Audio from './Audio';\r\n\r\nexport default class AudioManager {\r\n    private static _inst: AudioManager = null;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new AudioManager();\r\n        return this._inst;\r\n    }\r\n    private constructor() { }\r\n\r\n    private audioArray: Audio[] = [];\r\n\r\n    getAudio() {\r\n        if (this.audioArray.length) {\r\n            return this.audioArray.pop();\r\n        }\r\n        return new Audio();\r\n    }\r\n\r\n    putAudio(audio: Audio) {\r\n        audio.clear();\r\n        this.audioArray.push(audio);\r\n    }\r\n}","import { Button, Component, EventTouch, Node, Settings, _decorator, assetManager, isValid, settings, warn } from 'cc';\r\nimport { EDITOR } from 'cc/env';\r\nimport Core from '../Core';\r\nimport BaseManager from './BaseManager';\r\nconst { ccclass } = _decorator;\r\n\r\nconst AdminBundleName = 'app-admin';\r\nconst ModelBundleName = 'app-model';\r\nconst ControlBundleName = 'app-control';\r\nconst ControllerBundleName = 'app-controller';\r\nconst ManagerBundleName = 'app-manager';\r\nconst DontRewriteFuns = ['startInit', 'nextInit'];\r\n\r\n@ccclass('BaseAppInit')\r\nexport default abstract class BaseAppInit extends Component {\r\n    private get _base_mgr_total() {\r\n        return Math.max(0, BaseManager.getTotalAssetNum(assetManager.getBundle(ManagerBundleName)));\r\n    }\r\n    private get _base_user_total() {\r\n        return Math.max(0, this.getUserAssetNum());\r\n    }\r\n    private get _base_total() {\r\n        return this._base_mgr_total + this._base_user_total;\r\n    }\r\n\r\n    private _base_mgr_completed = 0;\r\n    private _base_user_completed = 0;\r\n    private get _base_completed() {\r\n        return this._base_mgr_completed + Math.min(this._base_user_total, this._base_user_completed);\r\n    }\r\n\r\n    private _base_inited = false;\r\n    private _base_finished = false;\r\n\r\n    constructor() {\r\n        super();\r\n        if (EDITOR) {\r\n            DontRewriteFuns.forEach((funName) => {\r\n                if (BaseAppInit.prototype[funName] !== this[funName]) {\r\n                    warn(`[AppInit] 不应该重写父类方法{${funName}}`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * [避免重写] 开始初始化\r\n     */\r\n    protected startInit() {\r\n        const projectBundles = settings.querySettings(Settings.Category.ASSETS, 'projectBundles') as string[];\r\n        Core.inst.lib.task.createAny()\r\n            // 预加载control、model、admin、manager\r\n            .add([\r\n                (next, retry) => {\r\n                    // 预加载control(废弃)\r\n                    if (projectBundles.indexOf(ControlBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ControlBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载controller\r\n                    if (projectBundles.indexOf(ControllerBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ControllerBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载model\r\n                    if (projectBundles.indexOf(ModelBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ModelBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载admin\r\n                    if (projectBundles.indexOf(AdminBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: AdminBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                },\r\n                (next, retry) => {\r\n                    // 预加载manage\r\n                    if (projectBundles.indexOf(ManagerBundleName) === -1) return next();\r\n                    assetManager.preloadAny({ url: ManagerBundleName }, { ext: 'bundle' }, null, (err) => {\r\n                        if (err) return retry(0.1);\r\n                        next();\r\n                    });\r\n                }\r\n            ])\r\n            // 加载control(废弃)\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ControlBundleName) === -1) return next();\r\n                assetManager.loadBundle(ControlBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载controller\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ControllerBundleName) === -1) return next();\r\n                assetManager.loadBundle(ControllerBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载model\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ModelBundleName) === -1) return next();\r\n                assetManager.loadBundle(ModelBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载admin\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(AdminBundleName) === -1) return next();\r\n                assetManager.loadBundle(AdminBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            // 加载manager\r\n            .add((next, retry) => {\r\n                if (projectBundles.indexOf(ManagerBundleName) === -1) return next();\r\n                assetManager.loadBundle(ManagerBundleName, (err) => {\r\n                    if (err) return retry(0.1);\r\n                    next();\r\n                });\r\n            })\r\n            .start(() => {\r\n                this._base_inited = true;\r\n                this.onProgress(0, this._base_total);\r\n\r\n                // 初始化app, 使用complete来实现onUserInit的切换以确保manager已完全加载\r\n                BaseManager.init(\r\n                    assetManager.getBundle(ManagerBundleName),\r\n                    () => {\r\n                        this.innerNextInit();\r\n                    },\r\n                    () => {\r\n                        this.onUserInit();\r\n                        if (this._base_completed < this._base_total) return;\r\n                        // 全部加载完成\r\n                        this.innerFinished();\r\n                    }\r\n                );\r\n            });\r\n    }\r\n\r\n    /**\r\n     * [不可重写] 用于内部初始化完成\r\n     */\r\n    private innerFinished() {\r\n        if (this._base_finished) return;\r\n        this._base_finished = true;\r\n        Core.emit(Core.EventType.EVENT_APPINIT_FINISHED);\r\n        // 默认音效(Button点击触发, 这个方案可以正常触发input事件)\r\n        if (Core.inst.Manager.Sound.setting.defaultEffectName) {\r\n            const playDefaultEffect = function (e: EventTouch) {\r\n                // SoundManager.setButtonEffect会将Button所在节点的useDefaultEffect设为false\r\n                if (e.target['useDefaultEffect'] === false) return;\r\n                Core.inst.manager.ui.onceUserInterface(Node.EventType.TOUCH_END, function (event: EventTouch) {\r\n                    if (!event.target.getComponent(Button)) return;\r\n                    setTimeout(() => {\r\n                        if (!isValid(Core.inst.manager.sound)) return;\r\n                        // 如果是scrollView中的button，在滑动后不播放点击音效\r\n                        if (event.eventPhase === EventTouch.CAPTURING_PHASE) return;\r\n                        Core.inst.manager.sound.playDefaultEffect();\r\n                    });\r\n                }, null, true);\r\n            };\r\n            const onEnable = Button.prototype.onEnable;\r\n            Button.prototype.onEnable = function () {\r\n                onEnable.call(this);\r\n                this.node.on(Node.EventType.TOUCH_START, playDefaultEffect);\r\n            };\r\n            const onDisable = Button.prototype.onDisable;\r\n            Button.prototype.onDisable = function () {\r\n                this.node.off(Node.EventType.TOUCH_START, playDefaultEffect);\r\n                onDisable.call(this);\r\n            };\r\n        }\r\n        return Core.inst.manager.ui.showDefault(() => {\r\n            // 初始化完成\r\n            this.onFinish();\r\n            // 默认音乐(默认播放)\r\n            if (Core.inst.Manager.Sound.setting.defaultMusicName) {\r\n                const onTouch = function () {\r\n                    if (!isValid(Core.inst.manager.sound)) return;\r\n                    if (Core.inst.manager.sound.isMusicPlaying && !Core.inst.manager.sound.isMusicPaused) {\r\n                        Core.inst.manager.sound.replayMusic(() => {\r\n                            Core.inst.manager.ui.offUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                        });\r\n                    } else {\r\n                        Core.inst.manager.ui.offUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                    }\r\n                };\r\n                Core.inst.manager.ui.onUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                Core.inst.manager.sound.playDefaultMusic(() => {\r\n                    Core.inst.manager.ui.offUserInterface(Node.EventType.TOUCH_START, onTouch, this, true);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * [不可重写] 用于内部初始化\r\n     */\r\n    private innerNextInit() {\r\n        // 完成+1\r\n        this._base_mgr_completed += 1;\r\n        // 进度回调\r\n        this.onProgress(this._base_completed, this._base_total);\r\n    }\r\n\r\n    /**\r\n     * [避免重写] 初始化下一步，用户部分每完成一步需要调用一次\r\n     */\r\n    protected nextInit(): any {\r\n        if (this._base_finished) return;\r\n\r\n        if (!this._base_inited) {\r\n            // 完成+1\r\n            this._base_user_completed += 1;\r\n            // 进度回调\r\n            this.onProgress(this._base_completed, this._base_total);\r\n            return;\r\n        }\r\n\r\n        // 完成+1\r\n        this._base_user_completed += 1;\r\n        // 进度回调\r\n        this.onProgress(this._base_completed, this._base_total);\r\n\r\n        // 全部加载完成\r\n        if (this._base_completed >= this._base_total) {\r\n            this.innerFinished();\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////////////////////////////////////////        以下可重写        ////////////////////////////////////////////\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * [可以重写] 默认start调用startInit，可以重写后自定义时机\r\n     */\r\n    protected start(): any { this.startInit(); }\r\n\r\n    /**\r\n     * [可以重写] 获得用户资源总量，这里返回几，就需要用户自行调用几次nextInit\r\n     */\r\n    protected getUserAssetNum(): number { return 0; }\r\n\r\n    /**\r\n     * [可以重写] 用户初始化函数，会在框架初始化完成后调用\r\n     */\r\n    protected onUserInit(): any { return 0; }\r\n\r\n    /**\r\n     * [可以重写] 监听进度\r\n     * @param {Number} completed\r\n     * @param {Number} total\r\n     */\r\n    protected onProgress(completed: number, total: number): any { return completed / total; }\r\n\r\n    /**\r\n     * [可以重写] 初始化完成\r\n     */\r\n    protected onFinish() { }\r\n}","class CallbackInfo {\r\n    public callback: Function = null;\r\n    public target: unknown = null;\r\n    public once = false;\r\n\r\n    public constructor(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callback = callback;\r\n        this.target = target;\r\n        this.once = once;\r\n    }\r\n}\r\n\r\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : any;\r\ntype AnyFunc = (...args: any[]) => any;\r\n\r\nclass CallbackList {\r\n    private callbacks: CallbackInfo[] = [];\r\n\r\n    public size() {\r\n        return this.callbacks.length;\r\n    }\r\n\r\n    public add(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callbacks.push(new CallbackInfo(callback, target, once));\r\n    }\r\n\r\n    public emit(args: any[]) {\r\n        for (let index = 0; index < this.callbacks.length; index++) {\r\n            const info = this.callbacks[index];\r\n            // 先移除\r\n            if (info.once) {\r\n                this.callbacks.splice(index, 1);\r\n                --index;\r\n            }\r\n            if (info.callback) {\r\n                info.callback.apply(info.target, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    public call(args: any[]) {\r\n        if (this.callbacks.length === 0) return;\r\n        const info = this.callbacks[0];\r\n\r\n        // 先移除\r\n        if (info.once) this.callbacks.splice(0, 1);\r\n        if (!info.callback) return;\r\n\r\n        return info.callback.apply(info.target, args);\r\n    }\r\n\r\n    public remove(callback: Function, target: unknown = null) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback || info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByCallback(callback: Function) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByTarget(target: unknown) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass EventEmitter {\r\n    private listeners: { [key in string]: CallbackList } = {};\r\n\r\n    public on(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target);\r\n    }\r\n\r\n    public once(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target, true);\r\n    }\r\n\r\n    public off(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) return;\r\n\r\n        this.listeners[event].remove(cb, target);\r\n    }\r\n\r\n    public targetOff(target?: unknown) {\r\n        if (!target) return;\r\n\r\n        for (const key in this.listeners) {\r\n            if (Object.prototype.hasOwnProperty.call(this.listeners, key)) {\r\n                const element = this.listeners[key];\r\n                element.removeByTarget(target);\r\n            }\r\n        }\r\n    }\r\n\r\n    public emit(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        this.listeners[event].emit(args);\r\n    }\r\n\r\n    public call(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        return this.listeners[event].call(args);\r\n    }\r\n}\r\n\r\nexport interface IBaseControl<C, E, T extends { [key in keyof E]?: AnyFunc }> {\r\n    readonly inst: Readonly<C>\r\n\r\n    //用于类型提示推导////////////////\r\n    new(): SuperBaseControl<E, T>//\r\n    ///////////////////////////////\r\n}\r\n\r\nclass SuperBaseControl<E, T extends { [key in keyof E]?: AnyFunc }> {\r\n    //用于类型提示推导//\r\n    private e: E;////\r\n    private t: T;////\r\n    /////////////////\r\n\r\n    private event = new EventEmitter();\r\n\r\n    protected call<K extends keyof E & keyof T>(key: E[K], ...args: Parameters<T[K]>): ReturnType<T[K]> {\r\n        return this.event.call.call(this.event, key, args);\r\n    }\r\n\r\n    protected emit<K extends keyof E & keyof T>(key: E[K], ...args: Parameters<T[K]>): void {\r\n        return this.event.emit.call(this.event, key, args);\r\n    }\r\n\r\n    private on(...args: any[]): void {\r\n        return this.event.on.apply(this.event, args);\r\n    }\r\n\r\n    private once(...args: any[]): void {\r\n        return this.event.once.apply(this.event, args);\r\n    }\r\n\r\n    private off(...args: any[]): void {\r\n        return this.event.off.apply(this.event, args);\r\n    }\r\n\r\n    private targetOff(target: any): void {\r\n        return this.event.targetOff.call(this.event, target);\r\n    }\r\n}\r\n\r\n/**\r\n * @deprecated 废弃，请使用Controller代替Control\r\n */\r\nexport default function BaseControl<C, E = any, T extends { [key in keyof E & string]?: AnyFunc } = any>(Event?: E) {\r\n    return class BaseControl extends SuperBaseControl<E, T> {\r\n        public static Event = Event;\r\n\r\n        private static _base_inst: Readonly<C> = null;\r\n        public static get inst() {\r\n            if (this._base_inst === null) {\r\n                this._base_inst = new this() as C;\r\n            }\r\n            return this._base_inst;\r\n        }\r\n    };\r\n}","import { DEV } from 'cc/env';\r\nimport { IReadOnly } from '../../../../assets/app-builtin/app-admin/executor';\r\nimport { Logger } from '../lib/logger/logger';\r\n\r\nclass CallbackInfo {\r\n    public callback: Function = null;\r\n    public target: unknown = null;\r\n    public once = false;\r\n\r\n    public constructor(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callback = callback;\r\n        this.target = target;\r\n        this.once = once;\r\n    }\r\n}\r\n\r\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : any;\r\ntype AnyFunc = (...args: any[]) => any;\r\n\r\nclass CallbackList {\r\n    private callbacks: CallbackInfo[] = [];\r\n\r\n    public size() {\r\n        return this.callbacks.length;\r\n    }\r\n\r\n    public add(callback: Function, target: unknown = null, once: boolean = false) {\r\n        this.callbacks.push(new CallbackInfo(callback, target, once));\r\n    }\r\n\r\n    public emit(args: any[]) {\r\n        for (let index = 0; index < this.callbacks.length; index++) {\r\n            const info = this.callbacks[index];\r\n            // 先移除\r\n            if (info.once) {\r\n                this.callbacks.splice(index, 1);\r\n                --index;\r\n            }\r\n            if (info.callback) {\r\n                info.callback.apply(info.target, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    public call(args: any[]) {\r\n        if (this.callbacks.length === 0) return;\r\n        const info = this.callbacks[0];\r\n\r\n        // 先移除\r\n        if (info.once) this.callbacks.splice(0, 1);\r\n        if (!info.callback) return;\r\n\r\n        return info.callback.apply(info.target, args);\r\n    }\r\n\r\n    public remove(callback: Function, target: unknown = null) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback || info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByCallback(callback: Function) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.callback !== callback) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public removeByTarget(target: unknown) {\r\n        for (let index = this.callbacks.length - 1; index >= 0; index--) {\r\n            const info = this.callbacks[index];\r\n            if (info.target !== target) continue;\r\n            this.callbacks.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass EventEmitter {\r\n    private listeners: { [key in string]: CallbackList } = {};\r\n\r\n    public on(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target);\r\n    }\r\n\r\n    public once(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) this.listeners[event] = new CallbackList();\r\n        this.listeners[event].add(cb, target, true);\r\n    }\r\n\r\n    public off(event: string | number, cb: (...data: any[]) => void, target?: unknown) {\r\n        if (!event.toString() || !cb) return;\r\n        if (!this.listeners[event]) return;\r\n\r\n        this.listeners[event].remove(cb, target);\r\n    }\r\n\r\n    public targetOff(target?: unknown) {\r\n        if (!target) return;\r\n\r\n        for (const key in this.listeners) {\r\n            if (Object.prototype.hasOwnProperty.call(this.listeners, key)) {\r\n                const element = this.listeners[key];\r\n                element.removeByTarget(target);\r\n            }\r\n        }\r\n    }\r\n\r\n    public emit(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        this.listeners[event].emit(args);\r\n    }\r\n\r\n    public call(event: string | number, args: any[]) {\r\n        if (!event.toString()) return;\r\n        if (!this.listeners[event]) return;\r\n        return this.listeners[event].call(args);\r\n    }\r\n}\r\n\r\nexport interface IBaseController<C, T extends { [key in string]?: AnyFunc }> {\r\n    readonly inst: Readonly<C>\r\n\r\n    //用于类型提示推导////////////////\r\n    new(): SuperBaseController<T>//\r\n    ///////////////////////////////\r\n}\r\n\r\nclass SuperBaseController<T extends { [key in string]?: AnyFunc }> {\r\n    //用于类型提示推导//\r\n    private t: T;////\r\n    /////////////////\r\n\r\n    private event = new EventEmitter();\r\n\r\n    /**获取第一个事件回调的返回值 */\r\n    protected call<K extends keyof T>(key: K, ...args: Parameters<T[K]>): ReturnType<T[K]> {\r\n        return this.event.call.call(this.event, key, args);\r\n    }\r\n\r\n    /**发射事件 */\r\n    protected emit<K extends keyof T>(key: K, ...args: Parameters<T[K]>): void {\r\n        return this.event.emit.call(this.event, key, args);\r\n    }\r\n\r\n    private on(...args: any[]): void {\r\n        return this.event.on.apply(this.event, args);\r\n    }\r\n\r\n    private once(...args: any[]): void {\r\n        return this.event.once.apply(this.event, args);\r\n    }\r\n\r\n    private off(...args: any[]): void {\r\n        return this.event.off.apply(this.event, args);\r\n    }\r\n\r\n    private targetOff(target: any): void {\r\n        return this.event.targetOff.call(this.event, target);\r\n    }\r\n\r\n    /**打印日志 */\r\n    protected get log(): Function {\r\n        return Logger.create('log', '#4682b4', DEV ? `[${this['constructor'].name}] LOG` : `[${this['constructor'].name}] [LOG]`);\r\n    }\r\n\r\n    /**打印警告 */\r\n    protected get warn(): Function {\r\n        return Logger.create('warn', '#ff7f50', DEV ? `[${this['constructor'].name}] WARN` : `[${this['constructor'].name}] [WARN]`);\r\n    }\r\n\r\n    /**打印错误 */\r\n    protected get error(): Function {\r\n        return Logger.create('error', '#ff4757', DEV ? `[${this['constructor'].name}] ERROR` : `[${this['constructor'].name}] [ERROR]`);\r\n    }\r\n}\r\n\r\nexport default function BaseController<C, T extends { [key in string]?: AnyFunc } = any>() {\r\n    return class BaseController extends SuperBaseController<T> {\r\n        /**\r\n         * 控制器事件\r\n         */\r\n        public static Event: { [key in keyof T]: key } = new Proxy({} as any, {\r\n            get: function (target, key) {\r\n                if (target[key]) return target[key];\r\n                target[key] = key;\r\n                return key;\r\n            }\r\n        });\r\n\r\n        private static _base_inst: IReadOnly<C> = null;\r\n        /**\r\n         * 控制器单例\r\n         * - 尽量使用app.controller，可以避免因跨Bundle引用导致的问题，也可以避免Controller之间循环引用的问题\r\n         */\r\n        public static get inst() {\r\n            return this._base_inst;\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            BaseController._base_inst = this as any;\r\n        }\r\n    };\r\n}","/**\n * 基础数据类\n * */\n\nexport default class BaseData {\n    constructor() {\n        console.log(\"Load BaseData\");\n    }\n\n\n}","import { AssetManager, Component, EventTarget, Prefab, Widget, _decorator, error, instantiate, js, path, warn } from 'cc';\r\nimport { DEBUG, DEV, EDITOR } from 'cc/env';\r\nimport Core from '../Core';\r\nimport { Logger } from '../lib/logger/logger';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\nconst UserManagerPath = 'UserManager';\r\nconst DontRewriteFuns = ['emit', 'on', 'once', 'off', 'targetOff'];\r\n\r\nconst uuid = new class UUID {\r\n    private index = 0;\r\n\r\n    public create(): string {\r\n        if (this.index++ > 10000000) {\r\n            this.index = 0;\r\n        }\r\n        return `${Date.now()}-${this.index}`;\r\n    }\r\n};\r\n\r\nconst loadBegin = Logger.create('log', '#32cd32', DEV ? '[BaseManager] 下载开始' : '[BaseManager] [下载开始]');\r\n\r\nconst loadFinish = Logger.create('log', '#00ae9d', DEV ? '[BaseManager] 下载完成' : '[BaseManager] [下载完成]');\r\n\r\nconst loadError = Logger.create('log', '#ff4757', DEV ? '[BaseManager] 下载失败' : '[BaseManager] [下载失败]');\r\n\r\nconst initBegin = Logger.create('log', '#3e4145', DEV ? '[BaseManager] 初始化开始' : '[BaseManager] [初始化开始]');\r\n\r\nconst initFinish = Logger.create('log', '#008080', DEV ? '[BaseManager] 初始化完成' : '[BaseManager] [初始化完成]');\r\n\r\n@ccclass('BaseManager')\r\nexport default class BaseManager extends Component {\r\n    // 事件管理器\r\n    private _base_event: EventTarget = new EventTarget();\r\n\r\n    // manager名字\r\n    private _base_manager_name: string = js.getClassName(this);\r\n    public get managerName() {\r\n        return this._base_manager_name;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        if (EDITOR) {\r\n            DontRewriteFuns.forEach((funName) => {\r\n                if (BaseManager.prototype[funName] !== this[funName]) {\r\n                    warn(`[${this._base_manager_name}] 不应该重写父类方法{${funName}}`);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this._base_manager_name !== 'Manager' && this._base_manager_name.slice(-7) === 'Manager') {\r\n            const managerName = this._base_manager_name.slice(0, - 7);\r\n            Core.inst.Manager[managerName] = this.constructor;\r\n            Core.inst.manager[managerName.toLocaleLowerCase()] = this;\r\n        } else if (EDITOR) {\r\n            error(`[${this._base_manager_name}] manager命名错误(应为 xxxxManager 以Manager结尾)`);\r\n        } else if (DEBUG) {\r\n            error(`[${this._base_manager_name}] manager命名错误(应为 xxxxManager 以Manager结尾)`);\r\n        }\r\n    }\r\n\r\n    // 用来初始化组件或节点的一些属性，当该组件被第一次添加到节点上或用户点击了它的 Reset 菜单时调用。这个回调只会在编辑器下调用。\r\n    resetInEditor() {\r\n        const widget = this.node.getComponent(Widget) || this.node.addComponent(Widget);\r\n        widget.isAlignBottom = true;\r\n        widget.isAlignLeft = true;\r\n        widget.isAlignRight = true;\r\n        widget.isAlignTop = true;\r\n        widget.top = 0;\r\n        widget.left = 0;\r\n        widget.right = 0;\r\n        widget.bottom = 0;\r\n        widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n    }\r\n\r\n    /**\r\n     * [无序] 自身初始化完成, init执行完毕后被调用\r\n     */\r\n    protected onInited() {\r\n    }\r\n\r\n    /**\r\n     * [无序] 所有manager初始化完成\r\n     */\r\n    protected onFinished() {\r\n    }\r\n\r\n    /**\r\n     * [无序] 初始化manager，在初始化完成后，调用finish方法\r\n     * @param {Function} finish \r\n     */\r\n    protected init(finish?: Function) {\r\n        finish && finish();\r\n    }\r\n\r\n    protected createUUID() {\r\n        return uuid.create();\r\n    }\r\n\r\n    /**打印日志 */\r\n    protected get log() {\r\n        if (DEV) {\r\n            return window.console.log.bind(window.console,\r\n                '%c %s %c %s ',\r\n                'background:#4169e1; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid #4169e1; color: #fff; font-weight: normal;',\r\n                `[${this._base_manager_name}] LOG ${new Date().toLocaleString()}`,\r\n                'background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid #4169e1; color: #4169e1; font-weight: normal;'\r\n            );\r\n        }\r\n        return window.console.log.bind(window.console,\r\n            `[${this._base_manager_name}] [LOG] [${new Date().toLocaleString()}]`,\r\n        );\r\n    }\r\n\r\n    /**打印警告 */\r\n    protected get warn() {\r\n        if (DEV) {\r\n            return window.console.warn.bind(window.console,\r\n                '%c %s %c %s ',\r\n                'background:#ff7f50; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid #ff7f50; color: #fff; font-weight: normal;',\r\n                `[${this._base_manager_name}] WARN ${new Date().toLocaleString()}`,\r\n                'background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid #ff7f50; color: #ff7f50; font-weight: normal;'\r\n            );\r\n        }\r\n        return window.console.warn.bind(window.console,\r\n            `[${this._base_manager_name}] [WARN] [${new Date().toLocaleString()}]`,\r\n        );\r\n    }\r\n\r\n    /**打印错误 */\r\n    protected get error() {\r\n        if (DEV) {\r\n            return window.console.error.bind(window.console,\r\n                '%c %s %c %s ',\r\n                'background:#ff4757; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid #ff4757; color: #fff; font-weight: normal;',\r\n                `[${this._base_manager_name}] ERROR ${new Date().toLocaleString()}`,\r\n                'background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid #ff4757; color: #ff4757; font-weight: normal;'\r\n            );\r\n        }\r\n        return window.console.error.bind(window.console,\r\n            `[${this._base_manager_name}] [ERROR] [${new Date().toLocaleString()}]`,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件分发\r\n     */\r\n    public emit(event: string | number, ...data: any[]) {\r\n        this._base_event.emit(event as any, ...data);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件监听\r\n     */\r\n    public on(event: string | number, cb: (...any: any[]) => void, target?: any) {\r\n        this._base_event.on(event as any, cb, target);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件监听\r\n     */\r\n    public once(event: string | number, cb: (...any: any[]) => void, target?: any) {\r\n        this._base_event.once(event as any, cb, target);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件移除监听\r\n     */\r\n    public off(event: string | number, cb?: (...any: any[]) => void, target?: any) {\r\n        this._base_event.off(event as any, cb, target);\r\n    }\r\n\r\n    /**\r\n     * [系统内置] 事件移除监听\r\n     */\r\n    public targetOff(target: any) {\r\n        this._base_event.targetOff(target);\r\n    }\r\n\r\n    /***********************************静态***********************************/\r\n    /**\r\n     * 框架内置Manager的数量\r\n     * @private\r\n     */\r\n    public static get sysMgrCount() {\r\n        return 5;\r\n    }\r\n\r\n    /**\r\n     * 获得初始化资源的数量(包括sysMgrCount)\r\n     * @private\r\n     */\r\n    public static getTotalAssetNum(bundle: AssetManager.Bundle) {\r\n        let count = this.sysMgrCount;\r\n\r\n        if (!bundle) return count;\r\n\r\n        const array = bundle.getDirWithPath('/', Prefab) as { uuid: string, path: string, ctor: Function }[];\r\n\r\n        array.forEach(function (item) {\r\n            if (item.path.endsWith('Manager')) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * 获得初始化资源的数量\r\n     * @private\r\n     */\r\n    public static getUserAssetUrls(bundle: AssetManager.Bundle) {\r\n        const pathArr: string[] = [];\r\n\r\n        if (!bundle) return pathArr;\r\n\r\n        const array = bundle.getDirWithPath('/', Prefab) as { uuid: string, path: string, ctor: Function }[];\r\n\r\n        array.forEach(function (item) {\r\n            if (item.path.endsWith('Manager')) {\r\n                pathArr.push(item.path);\r\n            }\r\n        });\r\n\r\n        return pathArr;\r\n    }\r\n\r\n    /**\r\n     * 静态方法，初始化manager，该方法必须在场景初始化完毕之后调用\r\n     * @private\r\n     */\r\n    public static init(\r\n        bundle: AssetManager.Bundle,\r\n        progress: (completeAsset: Number, totalAsset: Number) => any,\r\n        complete: (totalAsset: Number) => any) {\r\n        const urls = this.getUserAssetUrls(bundle);\r\n\r\n        const totalAsset = urls.length + this.sysMgrCount;\r\n        let completeAsset = 0;\r\n\r\n        const onProgress = function (next: Function, manager: BaseManager) {\r\n            if (DEBUG) {\r\n                const startTime = window?.performance?.now ? performance.now() : Date.now();\r\n                initBegin(manager.managerName);\r\n                return function () {\r\n                    manager.onInited();\r\n                    if (DEBUG) {\r\n                        const endTime = window?.performance?.now ? performance.now() : Date.now();\r\n                        initFinish(`${manager.managerName} 耗时:${(endTime - startTime).toFixed(6)} ms`);\r\n                    }\r\n                    progress && progress(++completeAsset, totalAsset);\r\n                    next();\r\n                };\r\n            }\r\n            return function () {\r\n                manager.onInited();\r\n                progress && progress(++completeAsset, totalAsset);\r\n                next();\r\n            };\r\n        };\r\n\r\n        // 用户manager(动态添加)\r\n        const userMgrList: BaseManager[] = [];\r\n        // 系统manager(静态内置)\r\n        const sysMgrList: BaseManager[] = [Core.inst.manager.event, Core.inst.manager.timer, Core.inst.manager.loader, Core.inst.manager.ui, Core.inst.manager.sound] as any as BaseManager[];\r\n\r\n        // 初始化系统manager\r\n        const initSysMgrTask = Core.inst.lib.task.createASync();\r\n        sysMgrList.forEach(function (manager: BaseManager) {\r\n            initSysMgrTask.add(function (next) {\r\n                manager.init(onProgress(next, manager));\r\n            });\r\n        });\r\n\r\n        // 加载用户manager\r\n        const loadUserMgrTask = Core.inst.lib.task.createASync();\r\n        const UserManagerRoot = Core.inst.manager.ui.root.getChildByPath(UserManagerPath);\r\n        urls.forEach(function (url) {\r\n            loadUserMgrTask.add(function (next, retry) {\r\n                if (DEBUG) {\r\n                    const managerName = path.basename(url);\r\n                    const startTime = window?.performance?.now ? performance.now() : Date.now();\r\n                    loadBegin(managerName);\r\n                    bundle.load(url, Prefab, function (err, prefab: Prefab) {\r\n                        if (err || !prefab) {\r\n                            loadError(managerName, '重试...');\r\n                            retry(1);\r\n                        } else {\r\n                            const endTime = window?.performance?.now ? performance.now() : Date.now();\r\n                            loadFinish(`${managerName} 耗时:${(endTime - startTime).toFixed(6)} ms`);\r\n                            const node = instantiate(prefab);\r\n                            node.parent = UserManagerRoot;\r\n                            node.active = true;\r\n                            userMgrList.push(node.getComponent(BaseManager));\r\n                            next();\r\n                        }\r\n                    });\r\n                    return;\r\n                }\r\n                bundle.load(url, Prefab, function (err, prefab: Prefab) {\r\n                    if (err || !prefab) {\r\n                        loadError(path.basename(url), '重试...');\r\n                        retry(1);\r\n                    } else {\r\n                        const node = instantiate(prefab);\r\n                        node.parent = UserManagerRoot;\r\n                        node.active = true;\r\n                        userMgrList.push(node.getComponent(BaseManager));\r\n                        next();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        Core.inst.lib.task.createAny()\r\n            .add([\r\n                next => initSysMgrTask.start(next),\r\n                next => loadUserMgrTask.start(next),\r\n            ])\r\n            .add(function (next) {\r\n                Core.emit(Core.EventType.EVENT_SYS_MANAGER_INITED);\r\n                next();\r\n            })\r\n            .add(function (next) {\r\n                // 初始化用户manager\r\n                const initUserMgrTask = Core.inst.lib.task.createASync();\r\n                userMgrList.forEach(manager => {\r\n                    initUserMgrTask.add(function (next) {\r\n                        manager.init(onProgress(next, manager));\r\n                    });\r\n                });\r\n                initUserMgrTask.start(next);\r\n            })\r\n            .add(function (next) {\r\n                Core.emit(Core.EventType.EVENT_USER_MANAGER_INITED);\r\n                Core.emit(Core.EventType.EVENT_MANAGER_INITED);\r\n                next();\r\n            })\r\n            .add(function (next) {\r\n                // 所有manager初始化完成后，触发回调\r\n                sysMgrList.forEach(function (manager) {\r\n                    manager.onFinished();\r\n                });\r\n                userMgrList.forEach(function (manager) {\r\n                    manager.onFinished();\r\n                });\r\n                next();\r\n            })\r\n            .start(function () {\r\n                Core.emit(Core.EventType.EVENT_MANAGER_FINISHED);\r\n                complete && complete(totalAsset);\r\n            });\r\n    }\r\n\r\n}","// export type IModel<T> = {\r\n//     [P in keyof T]: T[P] extends Function\r\n//     ? '❌此处不能定义任何方法'\r\n//     : (\r\n//         T[P] extends Array<infer R>\r\n//         ? (\r\n//             R extends Function\r\n//             ? '❌此处不能定义任何方法'\r\n//             : T[P]\r\n//         )\r\n//         : T[P] // IModel<T[P]> 性能消耗大\r\n//     );\r\n// };\r\n\r\n// export type IStore<T> = {\r\n//     [P in keyof T]: T[P] extends Function\r\n//     ? T[P]\r\n//     : (\r\n//         T[P] extends Array<infer R>\r\n//         ? (\r\n//             R extends Function\r\n//             ? '❌此处不能定义任何方法'\r\n//             : IModel<T[P]>\r\n//         )\r\n//         : IModel<T[P]>\r\n//     );\r\n// };\r\n\r\nexport type IModel<T> = {\r\n    [P in keyof T]: T[P] extends Function\r\n    ? '❌此处不能定义任何方法'\r\n    : T[P];\r\n};\r\n\r\n// export type IStore<T> = {\r\n//     [P in keyof T]: T[P] extends Function\r\n//     ? T[P]\r\n//     : IModel<T[P]>;\r\n// };\r\n\r\nexport type IStore<T> = {\r\n    [P in keyof T]: T[P];\r\n};","import { Asset, Component, Enum, EventTouch, Font, Label, Node, Scene, Sprite, SpriteFrame, UITransform, Widget, _decorator, director, isValid, js, sp } from 'cc';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport { IMiniViewName, IMiniViewNames, IViewName } from '../../../../assets/app-builtin/app-admin/executor';\r\nimport Core from '../Core';\r\nimport { Logger } from '../lib/logger/logger';\r\nimport { IBaseControl } from './BaseControl';\r\nimport { IBaseController } from './BaseController';\r\n\r\nconst { ccclass, property, disallowMultiple } = _decorator;\r\n\r\nconst BlockEvents = [\r\n    Node.EventType.TOUCH_START, Node.EventType.TOUCH_MOVE, Node.EventType.TOUCH_END, Node.EventType.TOUCH_CANCEL,\r\n    Node.EventType.MOUSE_DOWN, Node.EventType.MOUSE_MOVE, Node.EventType.MOUSE_UP,\r\n    Node.EventType.MOUSE_ENTER, Node.EventType.MOUSE_LEAVE, Node.EventType.MOUSE_WHEEL\r\n];\r\n\r\nconst HideEvent = Enum({\r\n    destroy: 1,\r\n    active: 2\r\n});\r\n\r\nexport type IShade = {\r\n    /**等待 默认0秒 */\r\n    delay?: number,\r\n    /**开始透明度 默认60 */\r\n    begin?: number,\r\n    /**结束透明度 默认180 */\r\n    end?: number,\r\n    /**透明变化速度 默认100 */\r\n    speed?: number,\r\n    /**\r\n     * 毛玻璃效果 默认false\r\n     * - 开启后其它参数将无效\r\n     */\r\n    blur?: boolean,\r\n};\r\n\r\nexport interface IShowParamAttr {\r\n    zIndex?: number,\r\n    siblingIndex?: number,\r\n}\r\n\r\nexport interface IShowParamOnShow<T = any> {\r\n    (result: T): any\r\n}\r\n\r\nexport interface IShowParamOnHide<T = any> {\r\n    (result: T): any\r\n}\r\n\r\nexport interface IShowParamBeforeShow {\r\n    (error: string): any\r\n}\r\n\r\nexport interface IShowParamInnerLoad {\r\n    (name: string, path: string, type: { prototype: Asset }, callback: (result: Asset) => any): void\r\n}\r\n\r\nexport interface IHideParamOnHide<T = any> {\r\n    (result: T): any\r\n}\r\n\r\nexport type IViewType = 'Page' | 'Paper' | 'Pop' | 'Top';\r\n\r\nexport enum ViewType {\r\n    Page = 'Page',\r\n    Paper = 'Paper',\r\n    PaperAll = 'PaperAll',\r\n    Pop = 'Pop',\r\n    Top = 'Top'\r\n}\r\n\r\ninterface IMiniOnShow {\r\n    (name: IMiniViewName, data?: any): any\r\n}\r\ninterface IMiniOnHide {\r\n    (name: IMiniViewName, data?: any): any\r\n}\r\ninterface IMiniOnFinish {\r\n    (): any\r\n}\r\ntype IPick<T> = {\r\n    -readonly [P in keyof T]: T[P] extends Function\r\n    ? T[P]\r\n    : (T[P] extends Object\r\n        ? IPick<T[P]>\r\n        : T[P]);\r\n};\r\ninterface IBaseViewController<C, T extends { [key in string]: any }> {\r\n    new(): BaseView & {\r\n        readonly controller: IPick<C> & Readonly<{\r\n            /**获取第一个事件回调的返回值 */\r\n            emit<K extends keyof T>(key: K, ...args: Parameters<T[K]>): void;\r\n            /**发射事件 */\r\n            call<K extends keyof T & keyof T>(key: K, ...args: Parameters<T[K]>): ReturnType<T[K]>;\r\n            /**注册事件回调 */\r\n            on<K extends keyof T>(key: K, callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n            /**注册一次性事件回调 */\r\n            once<K extends keyof T>(key: K, callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n            /**取消事件回调 */\r\n            off(key: keyof T, callback: Function, target?: any): void;\r\n            /**取消事件回调 */\r\n            targetOff(target: any): void;\r\n        }>\r\n    }\r\n}\r\n\r\nenum ViewState {\r\n    BeforeShow,\r\n    Showing,\r\n    Showed,\r\n    BeforeHide,\r\n    Hiding,\r\n    Hid,\r\n}\r\n\r\nconst Group = { id: 'BaseView', name: 'Settings', displayOrder: -Infinity, style: 'section' };\r\n\r\n// 记录PaperAll的owner\r\nconst PaperAllToOwner: Map<IMiniViewName, string> = new Map();\r\n\r\n@ccclass('BaseView')\r\n@disallowMultiple()\r\nexport default class BaseView extends Component {\r\n    /**\r\n     * @deprecated 废弃，请使用BindController代替BindControl\r\n     */\r\n    static BindControl<C, E, T extends { [key in keyof E]?: any }>(Control: IBaseControl<C, E, T>) {\r\n        return class BindControl extends BaseView {\r\n            protected get control(): Pick<C, keyof C> & Readonly<{\r\n                call<K extends keyof E>(key: E[K], ...args: Parameters<T[K]>): ReturnType<T[K]>;\r\n                emit<K extends keyof E>(key: E[K], ...args: Parameters<T[K]>): void;\r\n                on<K extends keyof E>(key: E[K], callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n                once<K extends keyof E>(key: E[K], callback: (...args: Parameters<T[K]>) => ReturnType<T[K]>, target?: any): void;\r\n                off(key: E[keyof E], callback: Function, target?: any): void;\r\n                targetOff(target: any): void;\r\n            }> {\r\n                return Control ? Control.inst as any : null;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 给UI绑定一个控制器，绑定后可以通过this.controller访问，并能访问一些内部方法(emit、on、once、off、targetOff)\r\n     */\r\n    static BindController<C, T extends { [key in string]: any }>(Controller: IBaseController<C, T>) {\r\n        @disallowMultiple()\r\n        class BindController extends BaseView {\r\n            protected get controller() {\r\n                return Controller ? Controller.inst as any : null;\r\n            }\r\n        }\r\n        return BindController as any as IBaseViewController<C, T>;\r\n    }\r\n\r\n    /**\r\n     * 是否有效，如果返回false的话，app.manager.ui.show会触发onError回调\r\n     */\r\n    public static isViewValid(next: (valid: boolean) => void, data: any) {\r\n        data;\r\n        next && next(true);\r\n    }\r\n\r\n    public static isPage(name: string) {\r\n        return name.indexOf(ViewType.Page) === 0;\r\n    }\r\n\r\n    public static isPaper(name: string) {\r\n        return name.indexOf(ViewType.Paper) === 0;\r\n    }\r\n\r\n    public static isPaperAll(name: string) {\r\n        return name.indexOf(ViewType.PaperAll) === 0;\r\n    }\r\n\r\n    public static isPop(name: string) {\r\n        return name.indexOf(ViewType.Pop) === 0;\r\n    }\r\n\r\n    public static isTop(name: string) {\r\n        return name.indexOf(ViewType.Top) === 0;\r\n    }\r\n\r\n    // 是否被调用过\r\n    private _base_view_created = false;\r\n    // view状态\r\n    private _base_view_state = ViewState.Hid;\r\n    // 当前view的名字\r\n    private _base_view_name: IViewName | IMiniViewName = js.getClassName(this) as any;\r\n    // 触摸是否有效\r\n    private _base_touch_enable = true;\r\n    // show/hide等待列表\r\n    private _base_show_hide_delays: Function[] = [];\r\n    // 子界面融合相关\r\n    private _base_mini_show: Set<IMiniViewName> = new Set();\r\n\r\n    protected isPage() {\r\n        return BaseView.isPage(this._base_view_name);\r\n    }\r\n\r\n    protected isPaper() {\r\n        return BaseView.isPaper(this._base_view_name);\r\n    }\r\n\r\n    protected isPaperAll() {\r\n        return BaseView.isPaperAll(this._base_view_name);\r\n    }\r\n\r\n    protected isPop() {\r\n        return BaseView.isPop(this._base_view_name);\r\n    }\r\n\r\n    protected isTop() {\r\n        return BaseView.isTop(this._base_view_name);\r\n    }\r\n\r\n    protected is2D() {\r\n        return !this.is3D();\r\n    }\r\n\r\n    protected is3D() {\r\n        if (this.node.parent instanceof Scene) {\r\n            return this.node.parent.name === this.viewName;\r\n        }\r\n        const scene = director.getScene();\r\n        return scene.name === this.viewName;\r\n    }\r\n\r\n    @property\r\n    private _hideEvent = HideEvent.destroy;\r\n    @property({\r\n        group: Group,\r\n        type: HideEvent,\r\n        tooltip: '何种模式隐藏节点\\n1、destroy: 销毁UI并释放对应的所有资源\\n2、active: 缓存UI并加速下次的打开速度',\r\n    })\r\n    public get hideEvent() {\r\n        if (this.is3D()) return HideEvent.destroy;\r\n        return this._hideEvent;\r\n    }\r\n    public set hideEvent(value) {\r\n        if (this.is3D() && value !== HideEvent.destroy) {\r\n            this.log('3D模式下只能是destroy模式');\r\n            return;\r\n        }\r\n        this._hideEvent = value;\r\n    }\r\n\r\n    @property\r\n    private _singleton = true;\r\n    private static _singleton = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否是单例模式\\n1、单例模式: UI只会被创建一次(onShow会被重复触发)\\n2、非单例模式: UI会被重复创建',\r\n    })\r\n    protected get singleton(): boolean {\r\n        if (this.isPage()) return true;\r\n        if (this.isPaperAll()) return true;\r\n        if (this.isPaper()) return true;\r\n        return this._singleton && (<typeof BaseView>this.constructor)._singleton;\r\n    }\r\n    protected set singleton(value) {\r\n        if (!value) {\r\n            if (this.isPage()) {\r\n                this.log('Page只能是单例模式');\r\n                return;\r\n            }\r\n            if (this.isPaper()) {\r\n                this.log('Paper只能是单例模式');\r\n                return;\r\n            }\r\n        }\r\n        this._singleton = (<typeof BaseView>this.constructor)._singleton = !!value;\r\n    }\r\n\r\n    @property\r\n    private _captureFocus = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否捕获焦点<响应onLostFocus和onFocus>\\n1、当一个捕获焦点的UI处于最上层并展示时\\n下层的UI永远不会响应focus事件',\r\n        visible(this: BaseView) {\r\n            if (this.is3D()) return false;\r\n            return true;\r\n        }\r\n    })\r\n    protected get captureFocus() {\r\n        if (this.is3D()) return false;\r\n        return this._captureFocus;\r\n    }\r\n    protected set captureFocus(value) {\r\n        if (value && this.is3D()) {\r\n            this.log('只有2D模式下才可以捕获焦点');\r\n            return;\r\n        }\r\n\r\n        if (!EDITOR && this._captureFocus !== value) {\r\n            this._captureFocus = value;\r\n            Core.inst?.manager?.ui?.refreshShade();\r\n        } else {\r\n            this._captureFocus = value;\r\n        }\r\n    }\r\n\r\n    @property\r\n    private _shade = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否需要底层遮罩',\r\n        visible(this: BaseView) {\r\n            if (this.is3D()) return false;\r\n            if (this.isPage()) return false;\r\n            return true;\r\n        }\r\n    })\r\n    protected get shade() {\r\n        if (this.is3D()) return false;\r\n        if (this.isPage()) return false;\r\n        return this._shade;\r\n    }\r\n    protected set shade(value) {\r\n        if (value) {\r\n            if (this.is3D()) {\r\n                this.log('只有2D模式下才可以设置底层遮罩');\r\n                return;\r\n            }\r\n            if (this.isPage()) {\r\n                this.log('Page不可以设置底层遮罩');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!EDITOR && this._shade !== value) {\r\n            this._shade = value;\r\n            Core.inst?.manager?.ui?.refreshShade();\r\n        } else {\r\n            this._shade = value;\r\n        }\r\n    }\r\n\r\n    @property\r\n    private _blockInput = true;\r\n    @property({\r\n        group: Group,\r\n        tooltip: '是否禁止点击事件向下层传递',\r\n        visible(this: BaseView) {\r\n            if (this.is3D()) return false;\r\n            return true;\r\n        }\r\n    })\r\n    protected get blockInput() {\r\n        if (this.is3D()) return false;\r\n        return this._blockInput;\r\n    }\r\n    protected set blockInput(value) {\r\n        if (value && this.is3D()) {\r\n            this.log('只有2D模式下才可以设置阻断点击事件');\r\n            return;\r\n        }\r\n        this._blockInput = value;\r\n    }\r\n\r\n    /**\r\n     * 子界面(只能用于Page)\r\n     */\r\n    protected miniViews: IMiniViewNames = [];\r\n\r\n    /**\r\n     * 当前view名字\r\n     */\r\n    public get viewName() {\r\n        return this._base_view_name;\r\n    }\r\n\r\n    /**\r\n     * 基础名字, 如PageHome => Home\r\n     */\r\n    public get baseName() {\r\n        return this._base_view_name.slice(this.typeName.length);\r\n    }\r\n\r\n    /**\r\n     * 类型名字, 如PageHome => Page\r\n     */\r\n    public get typeName() {\r\n        if (this._base_view_name.indexOf(ViewType.Paper) === 0) return ViewType.Paper;\r\n        if (this._base_view_name.indexOf(ViewType.Pop) === 0) return ViewType.Pop;\r\n        if (this._base_view_name.indexOf(ViewType.Top) === 0) return ViewType.Top;\r\n        return ViewType.Page;\r\n    }\r\n\r\n    /**\r\n     * 是否是单例模式\r\n     */\r\n    public get isSingleton(): boolean {\r\n        return this.singleton;\r\n    }\r\n\r\n    /**\r\n     * 是否捕获焦点\r\n     */\r\n    public get isCaptureFocus(): boolean {\r\n        return this.captureFocus;\r\n    }\r\n\r\n    /**\r\n     * 是否需要遮罩\r\n     */\r\n    public get isNeedShade(): boolean {\r\n        return this.shade;\r\n    }\r\n\r\n    /**\r\n     * 是否展示了(不为Hid状态)\r\n     */\r\n    public get isShow(): boolean {\r\n        return this._base_view_state != ViewState.Hid;\r\n    }\r\n\r\n    /**\r\n     * 是否show了某个子界面\r\n     */\r\n    protected isMiniViewShow(name: IMiniViewName) {\r\n        return this._base_mini_show.has(name);\r\n    }\r\n\r\n    // 用来初始化组件或节点的一些属性，当该组件被第一次添加到节点上或用户点击了它的 Reset 菜单时调用。这个回调只会在编辑器下调用。\r\n    resetInEditor(): any {\r\n        if (EDITOR) {\r\n            const is3D = this.is3D();\r\n            if (this.viewName.indexOf(ViewType.Page) >= 0) {\r\n                this.shade = false;\r\n                this.blockInput = is3D ? false : true;\r\n                this.captureFocus = is3D ? false : true;\r\n            } else if (this.viewName.indexOf(ViewType.Paper) >= 0) {\r\n                this.shade = false;\r\n                this.captureFocus = false;\r\n                this.blockInput = false;\r\n            }\r\n\r\n            if (is3D) return;\r\n            this.node.getComponent(UITransform) || this.node.addComponent(UITransform);\r\n\r\n            const widget = this.node.getComponent(Widget) || this.node.addComponent(Widget);\r\n            widget.isAlignBottom = true;\r\n            widget.isAlignLeft = true;\r\n            widget.isAlignRight = true;\r\n            widget.isAlignTop = true;\r\n            widget.top = 0;\r\n            widget.left = 0;\r\n            widget.right = 0;\r\n            widget.bottom = 0;\r\n            widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置是否可点击\r\n     */\r\n    protected setTouchEnabled(enabled: boolean = true): any {\r\n        this._base_touch_enable = !!enabled;\r\n    }\r\n\r\n    private blockPropagation(event: EventTouch) {\r\n        if (this.blockInput) {\r\n            event.propagationStopped = true;\r\n            if (event.type === Node.EventType.TOUCH_START) {\r\n                this.log('阻断触摸向下层传递');\r\n            }\r\n        }\r\n    }\r\n\r\n    private stopPropagation(event: EventTouch) {\r\n        if (!this._base_touch_enable) {\r\n            event.propagationStopped = true;\r\n            event.propagationImmediateStopped = true;\r\n            if (event.type === Node.EventType.TOUCH_START) {\r\n                this.log('屏蔽触摸');\r\n            }\r\n        }\r\n    }\r\n\r\n    private onBaseViewCreate(): any {\r\n        if (this.is3D()) return;\r\n        const uiTransform = this.getComponent(UITransform);\r\n        if (uiTransform) uiTransform.hitTest = (...args: any[]): boolean => {\r\n            if (this.blockInput) {\r\n                return UITransform.prototype.hitTest.apply(uiTransform, args);\r\n            }\r\n            return false;\r\n        };\r\n\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            this.node.on(BlockEvents[i], this.blockPropagation, this);\r\n            this.node.on(BlockEvents[i], this.stopPropagation, this, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭所有子界面\r\n     */\r\n    protected hideAllMiniViews(data?: any) {\r\n        this._base_mini_show.forEach((name) => {\r\n            Core.inst.manager.ui.hide({ name, data });\r\n        });\r\n        this._base_mini_show.clear();\r\n    }\r\n\r\n    /**\r\n     * 关闭子界面\r\n     */\r\n    protected hideMiniViews({ data, views }: { data?: any, views: IMiniViewNames }) {\r\n        if (this.miniViews.length === 0) return;\r\n        if (views.length === 0) return;\r\n\r\n        views.forEach(name => {\r\n            if (this.miniViews.indexOf(name) === -1) {\r\n                this.warn('hideMiniViews', `${name}不在miniViews中, 已跳过`);\r\n                return;\r\n            }\r\n\r\n            // 验证\r\n            if (!this._base_mini_show.has(name)) return;\r\n            // 关闭\r\n            Core.inst.manager.ui.hide({ name, data });\r\n        });\r\n        // TODO 手动刷新一下Paper下的UI顺序(原因是原生环境，显示层级正确但触摸层级可能会不正确)\r\n        Core.inst.manager.ui.sortUserInterface('Paper');\r\n    }\r\n\r\n    /**\r\n     * 展示子界面\r\n     */\r\n    protected showMiniViews({ data, views, onShow, onHide, onFinish }: {\r\n        /**传递给子界面的数据 */\r\n        data?: any,\r\n        /**子界面名字列表 */\r\n        views: Array<IMiniViewName | IMiniViewNames>,\r\n        /**子界面展示回调 */\r\n        onShow?: IMiniOnShow,\r\n        /**子界面关闭回调 */\r\n        onHide?: IMiniOnHide,\r\n        /**子界面融合完成回调 */\r\n        onFinish?: IMiniOnFinish\r\n    }) {\r\n        if (views.length === 0) return false;\r\n        if (this.typeName !== ViewType.Page) {\r\n            this.warn('showMiniViews', '仅支持Page类型');\r\n            return false;\r\n        }\r\n\r\n        const task = Core.inst.lib.task.createSync();\r\n\r\n        for (let index = 0; index < views.length; index++) {\r\n            const names = views[index];\r\n            if (names instanceof Array) {\r\n                task.add(next => {\r\n                    this.createMixMiniViewsTask(names, data, onShow, onHide).start(next);\r\n                });\r\n            } else {\r\n                task.add(next => {\r\n                    this.createMixMiniViewsTask([names], data, onShow, onHide).start(next);\r\n                });\r\n            }\r\n        }\r\n\r\n        task.start(onFinish && function () {\r\n            onFinish();\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 创建自定义加载任务\r\n     */\r\n    private createMixMiniViewsTask(views: IMiniViewNames = [], data?: any, onShow?: IMiniOnShow, onHide?: IMiniOnHide) {\r\n        const task = Core.inst.lib.task.createSync();\r\n\r\n        if (this.typeName !== ViewType.Page) {\r\n            this.warn('showMiniViews', '仅支持Page类型');\r\n            return task;\r\n        }\r\n\r\n        views = views.filter(name => {\r\n            if (!name) {\r\n                this.warn('showMiniViews', 'name不能为空');\r\n                return false;\r\n            }\r\n            if (this._base_mini_show.has(name)) {\r\n                this.warn('showMiniViews', `重复融合${name}, 已跳过`);\r\n                return false;\r\n            }\r\n            if (this.miniViews.indexOf(name) === -1) {\r\n                this.warn('showMiniViews', `${name}不在miniViews中, 已跳过`);\r\n                return false;\r\n            }\r\n            if (name.indexOf(this.baseName) !== ViewType.Paper.length && name.indexOf(ViewType.PaperAll) !== 0) {\r\n                this.warn('showMiniViews', `${name}不属于当前Page, 已跳过`);\r\n                return false;\r\n            }\r\n\r\n            this._base_mini_show.add(name);\r\n            return true;\r\n        });\r\n\r\n        if (views.length === 0) return task;\r\n\r\n        // 先load全部\r\n        task.add((next) => {\r\n            const aSync = Core.inst.lib.task.createASync();\r\n            views.forEach(name => {\r\n                aSync.add((next, retry) => {\r\n                    this.log(`下载子页面: ${name}`);\r\n                    Core.inst.manager.ui.load(name as any, result => {\r\n                        result ? next() : this.scheduleOnce(retry, 0.1);\r\n                    });\r\n                });\r\n            });\r\n            aSync.start(next);\r\n        });\r\n\r\n        // 再show全部\r\n        task.add((next) => {\r\n            const aSync = Core.inst.lib.task.createASync();\r\n            views.forEach(name => {\r\n                aSync.add((next) => {\r\n                    if (!this._base_mini_show?.has(name)) return next();\r\n\r\n                    this.log(`展示子页面: ${name}`);\r\n                    // 是PaperAll,设置owner\r\n                    if (BaseView.isPaperAll(name)) {\r\n                        PaperAllToOwner.set(name, this.uuid);\r\n                    }\r\n                    Core.inst.manager.ui.show({\r\n                        name, data,\r\n                        silent: true,\r\n                        attr: { zIndex: this.miniViews.indexOf(name) },\r\n                        onShow: (result) => {\r\n                            if (onShow) onShow(name, result);\r\n                            next();\r\n                        },\r\n                        onHide: (result) => {\r\n                            if (BaseView.isPaperAll(name)) {\r\n                                // 验证PaperAll是否属于当前Page\r\n                                const owner = PaperAllToOwner.get(name);\r\n                                if (owner && owner === this.uuid) {\r\n                                    PaperAllToOwner.delete(name);\r\n                                }\r\n                            }\r\n                            this._base_mini_show?.delete(name);\r\n                            if (onHide) onHide(name, result);\r\n                        },\r\n                        onError: (result, code) => {\r\n                            if (code === Core.inst.Manager.UI.ErrorCode.LoadError) return true;\r\n                            if (BaseView.isPaperAll(name)) {\r\n                                // 验证PaperAll是否属于当前Page\r\n                                const owner = PaperAllToOwner.get(name);\r\n                                if (owner && owner === this.uuid) {\r\n                                    PaperAllToOwner.delete(name);\r\n                                    Core.inst.manager.ui.hide({ name });\r\n                                }\r\n                            }\r\n                            this._base_mini_show?.delete(name);\r\n                            this.warn('忽略子页面', name, result);\r\n                            next();\r\n                        },\r\n                    });\r\n                });\r\n            });\r\n            aSync.start(() => {\r\n                // TODO 手动刷新一下Paper下的UI顺序(原因是原生环境，显示层级正确但触摸层级可能会不正确)\r\n                Core.inst.manager.ui.sortUserInterface('Paper');\r\n                next();\r\n            });\r\n        });\r\n\r\n        return task;\r\n    }\r\n\r\n    /**\r\n     * 设置节点属性\r\n     */\r\n    private setNodeAttr(attr: IShowParamAttr) {\r\n        if (!attr) return;\r\n        if (typeof attr.zIndex === 'number') {\r\n            // 以z坐标来代替2.x时代的zIndex\r\n            this.node.setPosition(this.node.position.x, this.node.position.y, attr.zIndex);\r\n        }\r\n\r\n        if (typeof attr.siblingIndex === 'number') {\r\n            this.node.setSiblingIndex(attr.siblingIndex);\r\n        }\r\n    }\r\n\r\n    private show(data?: any, attr?: IShowParamAttr, onShow?: IShowParamOnShow, onHide?: IShowParamOnHide, beforeShow?: IShowParamBeforeShow) {\r\n        // 当前show操作需要等待其它流程\r\n        if (this._base_view_state !== ViewState.Showed &&\r\n            this._base_view_state !== ViewState.Hid) {\r\n            this._base_show_hide_delays.push(\r\n                this.show.bind(this, data, attr, onShow, onHide, beforeShow)\r\n            );\r\n            return;\r\n        }\r\n\r\n        // show流程\r\n        const changeState = this._base_view_state === ViewState.Hid;\r\n        if (changeState) this._base_view_state = ViewState.BeforeShow;\r\n        const next = (error: string) => {\r\n            if (!error) {\r\n                // 所有Paper只会是单例，而且所有Paper都不允许被当前Page重复show\r\n                // 但PaprAll比较特殊，会被不同的Page使用，在PaperAll被不同的Page重复show时，清除之前的onHide\r\n                if (this.isPaperAll()) this.node.emit('onHide');\r\n            }\r\n            beforeShow && beforeShow(error);\r\n            if (!error) {\r\n                // 设置展示中\r\n                if (changeState) this._base_view_state = ViewState.Showing;\r\n                onHide && this.node.once('onHide', onHide);\r\n\r\n                // 触发onCreate\r\n                if (this._base_view_created === false) {\r\n                    this._base_view_created = true;\r\n                    this.onBaseViewCreate();\r\n                }\r\n\r\n                // 设置属性\r\n                this.setNodeAttr(attr);\r\n\r\n                // 触发onLoad、onEnable\r\n                if (this.node.active !== true) { this.node.active = true; }\r\n\r\n                this.log('onShow');\r\n                let result = null;\r\n                try {\r\n                    result = this.onShow(data);\r\n                } catch (err) {\r\n                    this.onError();\r\n                    console.error(err);\r\n                }\r\n\r\n                // 设置遮罩，触发focus逻辑\r\n                Core.inst.manager.ui.refreshShade();\r\n\r\n                try {\r\n                    onShow && onShow(result);\r\n                    this.node.emit('onShow', result);\r\n                    Core.inst.manager.ui.emit(this._base_view_name, { event: 'onShow', result: result });\r\n                    Core.inst.manager.ui.emit('onShow', { name: this._base_view_name, result: result });\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n\r\n                if (changeState) this._base_view_state = ViewState.Showed;\r\n            } else {\r\n                if (changeState) this._base_view_state = ViewState.Hid;\r\n            }\r\n\r\n            if (this._base_show_hide_delays.length > 0) {\r\n                this._base_show_hide_delays.shift()();\r\n            }\r\n        };\r\n\r\n        this.log('beforeShow');\r\n        let isNextCalled = false;\r\n        this.beforeShow((error) => {\r\n            if (isNextCalled) return this.error('beforeShow', 'next被重复调用');\r\n            isNextCalled = true;\r\n            next(error || null);\r\n        }, data);\r\n    }\r\n\r\n    protected hide(\r\n        //@ts-ignore\r\n        data?: Parameters<this['onHide']>[0],\r\n        onHide?: IHideParamOnHide) {\r\n\r\n        // 当前hide操作需要等待其它流程\r\n        if (this._base_view_state !== ViewState.Hid &&\r\n            this._base_view_state !== ViewState.Showed) {\r\n            this._base_show_hide_delays.push(\r\n                this.hide.bind(this, data, onHide)\r\n            );\r\n            return;\r\n        }\r\n\r\n        // hide流程\r\n        const changeState = this._base_view_state === ViewState.Showed;\r\n        if (changeState) this._base_view_state = ViewState.BeforeHide;\r\n        this.log('beforeHide');\r\n        const error = this.beforeHide(data);\r\n        if (!error) {\r\n            this.log('onHide');\r\n            if (changeState) this._base_view_state = ViewState.Hiding;\r\n            this.hideAllMiniViews(data);\r\n\r\n            let result = null;\r\n            try {\r\n                result = this.onHide(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n            try {\r\n                onHide && onHide(result);\r\n                this.node.emit('onHide', result);\r\n                Core.inst.manager.ui.emit(this._base_view_name, { event: 'onHide', result: result });\r\n                Core.inst.manager.ui.emit('onHide', { name: this._base_view_name, result: result });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n            if (changeState) this._base_view_state = ViewState.Hid;\r\n\r\n            if (this.hideEvent === HideEvent.active) { this.node.active = false; }\r\n            else if (this.hideEvent === HideEvent.destroy) { Core.inst.manager.ui.release(this); }\r\n            Core.inst.manager.ui.refreshShade();\r\n        } else {\r\n            if (changeState) this._base_view_state = ViewState.Showed;\r\n        }\r\n\r\n        if (this._base_show_hide_delays.length > 0) {\r\n            this._base_show_hide_delays.shift()();\r\n        }\r\n    }\r\n\r\n    private focus(boo: boolean): any {\r\n        let result = null;\r\n        let event = '';\r\n        if (boo) {\r\n            result = this.onFocus();\r\n            event = 'onFocus';\r\n        } else {\r\n            result = this.onLostFocus();\r\n            event = 'onLostFocus';\r\n        }\r\n\r\n        this.node.emit(event, result);\r\n        Core.inst.manager.ui.emit(this._base_view_name, { event: event, result: result });\r\n        Core.inst.manager.ui.emit(event, { name: this._base_view_name, result: result });\r\n    }\r\n\r\n    /**\r\n     * 加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * @param callback 回调\r\n     * this.loadRes('Bag', Prefab, function(asset){})\r\n     */\r\n    protected loadRes<T extends typeof Asset>(path: string, type: T, callback?: (result: InstanceType<T> | null) => any) {\r\n        Core.inst.manager.ui.loadRes(this, path, type, callback);\r\n    }\r\n\r\n    /**\r\n     * 预加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * this.preloadRes('Bag', Prefab)\r\n     */\r\n    protected preloadRes<T extends typeof Asset>(path: string, type: T) {\r\n        Core.inst.manager.ui.preloadRes(this, path, type);\r\n    }\r\n\r\n    /**\r\n     * 加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * @param callback 回调\r\n     * this.loadResDir('Bag', Prefab, function(asset){})\r\n     */\r\n    protected loadResDir<T extends typeof Asset>(path: string, type: T, callback?: (result: InstanceType<T>[] | null) => any) {\r\n        Core.inst.manager.ui.loadResDir(this, path, type, callback);\r\n    }\r\n\r\n    /**\r\n     * 预加载UI目录下resources里面的资源\r\n     * @param path 相对于resources的路径\r\n     * this.preloadResDir('Bag', Prefab)\r\n     */\r\n    protected preloadResDir<T extends typeof Asset>(path: string, type: T) {\r\n        Core.inst.manager.ui.preloadResDir(this, path, type);\r\n    }\r\n\r\n    /**\r\n     * 设置字体资源\r\n     * @param path UI的resources目录下的相对路径\r\n     */\r\n    protected setFont(target: Label, path: string, onComplete?: (success: boolean) => any) {\r\n        this.loadRes(path, Font, (font) => {\r\n            if (!font || !isValid(target)) {\r\n                return onComplete && onComplete(false);\r\n            }\r\n            target.font = font;\r\n            onComplete && onComplete(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置Spine资源\r\n     * @param path UI的resources目录下的相对路径\r\n     */\r\n    protected setSpine(target: sp.Skeleton, path: string, onComplete?: (success: boolean) => any) {\r\n        this.loadRes(path, sp.SkeletonData, (skeletonData) => {\r\n            if (!skeletonData || !isValid(target)) {\r\n                return onComplete && onComplete(false);\r\n            }\r\n            target.skeletonData = skeletonData;\r\n            onComplete && onComplete(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置图片资源\r\n     * @param path UI的resources目录下的相对路径(必须以/spriteFrame结尾)\r\n     * \r\n     * @example\r\n     * setSprite(sprite, 'img/a/spriteFrame', onComplete:(succ)=>{})\r\n     */\r\n    protected setSprite(target: Sprite, path: string, onComplete?: (success: boolean) => any) {\r\n        this.loadRes(path, SpriteFrame, (spriteFrame) => {\r\n            if (!spriteFrame || !isValid(target)) {\r\n                return onComplete && onComplete(false);\r\n            }\r\n            target.spriteFrame = spriteFrame;\r\n            onComplete && onComplete(true);\r\n        });\r\n    }\r\n\r\n    /**打印日志 */\r\n    protected get log() {\r\n        return Logger.create('log', '#1e90ff', DEV ? `[${this._base_view_name}] LOG` : `[${this._base_view_name}] [LOG]`);\r\n    }\r\n\r\n    /**打印警告 */\r\n    protected get warn() {\r\n        return Logger.create('warn', '#ff7f50', DEV ? `[${this._base_view_name}] WARN` : `[${this._base_view_name}] [WARN]`);\r\n    }\r\n\r\n    /**打印错误 */\r\n    protected get error() {\r\n        return Logger.create('error', '#ff4757', DEV ? `[${this._base_view_name}] ERROR` : `[${this._base_view_name}] [ERROR]`);\r\n    }\r\n\r\n    //////////////以下为可重写//////////////\r\n    /**\r\n    * 展示\r\n    * @param data 传递给onShow的参数\r\n    * @returns \r\n    */\r\n    protected onShow(data?: any): any {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 隐藏\r\n     * @param data 传递给onHide的参数\r\n     * @returns \r\n     */\r\n    protected onHide(data?: any): any {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 失去焦点\r\n     * @returns \r\n     */\r\n    protected onLostFocus(): any {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获得焦点\r\n     * @returns \r\n     */\r\n    protected onFocus(): any {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * onShow前调用\r\n     * @param next 回调，传递的error不为空时，表示错误，onShow不会执行\r\n     * @param data 传递给onShow的参数\r\n     */\r\n    protected beforeShow(next: (error?: string) => void, data?: any): any {\r\n        next(null);\r\n    }\r\n\r\n    /**\r\n     * hide前调用\r\n     * @param data 传递给onHide的参数\r\n     * @returns 如果返回字符串，则表示错误信息\r\n     */\r\n    protected beforeHide(data?: any): string | void {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * onShow报错会执行\r\n     */\r\n    protected onError(): any {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 背景遮照的参数\r\n     */\r\n    protected onShade(): IShade {\r\n        return {};\r\n    }\r\n}","import { Component, Director, director, EventTarget, js } from 'cc';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport * as debug from './lib/debug/debug';\r\nimport logger from './lib/logger/logger';\r\nimport storage from './lib/storage/storage';\r\nimport task from './lib/task/task';\r\nimport EventManager from './manager/event/EventManager';\r\nimport LoaderManager from './manager/loader/LoaderManager';\r\nimport SoundManager from './manager/sound/SoundManager';\r\nimport TimerManager from './manager/timer/TimerManager';\r\nimport UIManager from './manager/ui/UIManager';\r\n\r\nenum EventType {\r\n    /**AppInit准备完毕 */\r\n    EVENT_APPINIT_FINISHED = 'EVENT_APPINIT_FINISHED',\r\n    /**系统Manager初始化完毕 */\r\n    EVENT_SYS_MANAGER_INITED = 'EVENT_SYS_MANAGER_INITED',\r\n    /**用户Manager初始化完毕 */\r\n    EVENT_USER_MANAGER_INITED = 'EVENT_USER_MANAGER_INITED',\r\n    /**所有Manager初始化完毕 */\r\n    EVENT_MANAGER_INITED = 'EVENT_MANAGER_INITED',\r\n    /**所有Manager准备完毕 */\r\n    EVENT_MANAGER_FINISHED = 'EVENT_MANAGER_FINISHED'\r\n}\r\n\r\ntype IData = { [key in string]: any };\r\ntype IConfig = { [key in string]: any };\r\ntype IStore = { [key in string]: any };\r\ntype ICtrl = { [key in string]: any };\r\n\r\ninterface ITypeofManager {\r\n    Loader: Omit<typeof LoaderManager, keyof Component>,\r\n    Event: Omit<typeof EventManager, keyof Component>,\r\n    Sound: Omit<typeof SoundManager, keyof Component>,\r\n    Timer: Omit<typeof TimerManager, keyof Component>,\r\n    UI: Omit<typeof UIManager, keyof Component>\r\n}\r\n\r\ninterface IManager {\r\n    loader: Omit<LoaderManager, keyof Component>,\r\n    event: Omit<EventManager, keyof Component>,\r\n    sound: Omit<SoundManager<any, any>, keyof Component>,\r\n    timer: Omit<TimerManager, keyof Component>,\r\n    ui: Omit<UIManager<any, any>, keyof Component>\r\n}\r\n\r\ninterface ICore {\r\n    data: IData,\r\n    config: IConfig,\r\n    store: IStore,\r\n    controller: ICtrl,\r\n    Controller: ICtrl,\r\n    manager: IManager,\r\n    Manager: ITypeofManager\r\n}\r\n\r\nconst Lib = { task, storage, debug, logger };\r\nconst Config = {};\r\nconst Data = {};\r\nconst Store = {};\r\nconst controller = {};\r\nconst Controller = {};\r\nconst Manager = {};\r\nconst manager = {};\r\n\r\nconst eventTarget = new EventTarget();\r\nlet EventMap = {};\r\n\r\ndirector.on(Director.EVENT_RESET, () => {\r\n    js.clear(Config);\r\n    js.clear(Data);\r\n    js.clear(Store);\r\n    js.clear(controller);\r\n    js.clear(Controller);\r\n    js.clear(Manager);\r\n    js.clear(manager);\r\n\r\n    EventMap = {};\r\n});\r\n\r\nexport default class Core<T extends ICore> {\r\n    static EventType = EventType;\r\n\r\n    protected static _inst: Core<ICore> | undefined;\r\n    static get inst() {\r\n        if (!this._inst) this._inst = new Core();\r\n        return this._inst;\r\n    }\r\n\r\n    lib = Lib;\r\n    config: T['config'] = null;\r\n    data: T['data'] = null;\r\n    store: T['store'] = null;\r\n    Controller: T['Controller'] = null;\r\n    controller: T['controller'] = null;\r\n    Manager: T['Manager'] = null;\r\n    manager: T['manager'] = null;\r\n\r\n    constructor() {\r\n        this.config = Config;\r\n        this.data = Data;\r\n        this.store = Store;\r\n        this.Controller = Controller;\r\n        this.controller = controller;\r\n        this.Manager = Manager as any;\r\n        this.manager = manager as any;\r\n        if (!EDITOR || DEV) {\r\n            if (this.constructor !== Core && !js.getClassById('App')) {\r\n                js.setClassAlias(this.constructor as any, 'App');\r\n            }\r\n        }\r\n    }\r\n\r\n    on(event: keyof typeof EventType, callback: (...any: any[]) => void, target?: any): any {\r\n        if (EventMap[event]) callback.call(target);\r\n        eventTarget.on(event, callback, target);\r\n    }\r\n\r\n    once(event: keyof typeof EventType, callback: Function, target?: any): any {\r\n        if (EventMap[event]) {\r\n            callback.call(target);\r\n        } else {\r\n            eventTarget.once(event, callback as any, target);\r\n        }\r\n    }\r\n\r\n    off(event: keyof typeof EventType, callback: (...any: any[]) => void, target?: any): any {\r\n        eventTarget.off(event, callback, target);\r\n    }\r\n\r\n    targetOff(target: any) {\r\n        eventTarget.targetOff(target);\r\n    }\r\n\r\n    /**\r\n     * 请不要手动调用\r\n     */\r\n    static emit(event: keyof typeof EventType, ...args: any[]): any {\r\n        EventMap[event] = true;\r\n        eventTarget.emit(event, ...args);\r\n    }\r\n}","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('internal.DebugViewRuntimeControl')\r\nexport class DebugViewRuntimeControl extends Component {\r\n    @property(Node)\r\n    compositeModeToggle: Node | null = null;\r\n    @property(Node)\r\n    singleModeToggle: Node | null = null;\r\n    @property(Node)\r\n    EnableAllCompositeModeButton: Node | null = null;\r\n\t_single: number = 0;\r\n\r\n    private strSingle: string[] = [\r\n        'No Single Debug',\r\n        'Vertex Color',\r\n        'Vertex Normal',\r\n        'Vertex Tangent',\r\n        'World Position',\r\n        'Vertex Mirror',\r\n        'Face Side',\r\n        'UV0',\r\n        'UV1',\r\n        'UV Lightmap',\r\n        'Project Depth',\r\n        'Linear Depth',\r\n\r\n        'Fragment Normal',\r\n        'Fragment Tangent',\r\n        'Fragment Binormal',\r\n        'Base Color',\r\n        'Diffuse Color',\r\n        'Specular Color',\r\n        'Transparency',\r\n        'Metallic',\r\n        'Roughness',\r\n        'Specular Intensity',\r\n        'IOR',\r\n\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Direct All',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Env All',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Fresnel',\r\n        'Direct Transmit Diffuse',\r\n        'Direct Transmit Specular',\r\n        'Env Transmit Diffuse',\r\n        'Env Transmit Specular',\r\n        'Transmit All',\r\n        'Direct Internal Specular',\r\n        'Env Internal Specular',\r\n        'Internal All',\r\n\r\n        'Fog',\r\n    ];\r\n    private strComposite: string[] = [\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Normal Map',\r\n        'Fog',\r\n\r\n        'Tone Mapping',\r\n        'Gamma Correction',\r\n\r\n        'Fresnel',\r\n        'Transmit Diffuse',\r\n        'Transmit Specular',\r\n        'Internal Specular',\r\n        'TT',\r\n    ];\r\n    private strMisc: string[] = [\r\n        'CSM Layer Coloration',\r\n        'Lighting With Albedo',\r\n    ];\r\n\r\n    private compositeModeToggleList: Node[] = [];\r\n    private singleModeToggleList: Node[] = [];\r\n    private miscModeToggleList: Node[] = [];\r\n    private textComponentList: RichText[] = [];\r\n    private labelComponentList: Label[] = [];\r\n    private textContentList: string[] = [];\r\n    private hideButtonLabel: Label;\r\n    start() {\r\n        // get canvas resolution\r\n        const canvas = this.node.parent.getComponent(Canvas);\r\n        if (!canvas) {\r\n            console.error('debug-view-runtime-control should be child of Canvas');\r\n            return;\r\n        }\r\n\r\n        const uiTransform = this.node.parent.getComponent(UITransform);\r\n        const halfScreenWidth = uiTransform.width * 0.5;\r\n        const halfScreenHeight = uiTransform.height * 0.5;\r\n\r\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\r\n        const width = 200, height = 20;\r\n\r\n        // new nodes\r\n        const miscNode = this.node.getChildByName('MiscMode');\r\n        const buttonNode = instantiate(miscNode);\r\n        buttonNode.parent = this.node;\r\n        buttonNode.name = 'Buttons';\r\n        const titleNode = instantiate(miscNode);\r\n        titleNode.parent = this.node;\r\n        titleNode.name = 'Titles';\r\n\r\n        // title\r\n        for (let i = 0; i < 2; i++) {\r\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\r\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\r\n            newLabel.setScale(0.75, 0.75, 0.75);\r\n            newLabel.parent = titleNode;\r\n            const labelComponent = newLabel.getComponent(Label);\r\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\r\n            labelComponent.color = Color.WHITE;\r\n            labelComponent.overflow = 0;\r\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        }\r\n\r\n        y -= height;\r\n        // single\r\n        let currentRow = 0;\r\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\r\n            if (i === this.strSingle.length >> 1) {\r\n                x += width;\r\n                currentRow = 0;\r\n            }\r\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\r\n            newNode.setPosition(x, y - height * currentRow, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.singleModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strSingle[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\r\n\r\n            this.singleModeToggleList[i] = newNode;\r\n        }\r\n\r\n        x += width;\r\n        // buttons\r\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\r\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\r\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\r\n        this.EnableAllCompositeModeButton.parent = buttonNode;\r\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\r\n        changeColorButton.setPosition(x + 90, y, 0.0);\r\n        changeColorButton.setScale(0.5, 0.5, 0.5);\r\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\r\n        changeColorButton.parent = buttonNode;\r\n        labelComponent = changeColorButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'TextColor';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\r\n        HideButton.setPosition(x + 200, y, 0.0);\r\n        HideButton.setScale(0.5, 0.5, 0.5);\r\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\r\n        HideButton.parent = this.node.parent;\r\n        labelComponent = HideButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'Hide UI';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        this.hideButtonLabel = labelComponent;\r\n\r\n        // misc\r\n        y -= 40;\r\n        for (let i = 0; i < this.strMisc.length; i++) {\r\n            const newNode = instantiate(this.compositeModeToggle);\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = miscNode;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strMisc[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            const toggleComponent = newNode.getComponent(Toggle);\r\n            toggleComponent.isChecked = i ? true : false;\r\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\r\n            this.miscModeToggleList[i] = newNode;\r\n        }\r\n\r\n        // composite\r\n        y -= 150;\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.compositeModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strComposite[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\r\n\r\n            this.compositeModeToggleList[i] = newNode;\r\n        }\r\n    }\r\n\r\n    isTextMatched(textUI, textDescription) : boolean {\r\n        let tempText = new String(textUI);\r\n        const findIndex = tempText.search('>');\r\n        if (findIndex === -1) {\r\n            return textUI === textDescription;\r\n        } else {\r\n            tempText = tempText.substr(findIndex + 1);\r\n            tempText = tempText.substr(0, tempText.search('<'));\r\n            return tempText === textDescription;\r\n        }\r\n    }\r\n    toggleSingleMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strSingle.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\r\n                debugView.singleMode = i;\r\n            }\r\n        }\r\n    }\r\n    toggleCompositeMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\r\n                debugView.enableCompositeMode(i, toggle.isChecked);\r\n            }\r\n        }\r\n    }\r\n    toggleLightingWithAlbedo(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.lightingWithAlbedo = toggle.isChecked;\r\n    }\r\n    toggleCSMColoration(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.csmLayerColoration = toggle.isChecked;\r\n    }\r\n    enableAllCompositeMode(button: Button) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.enableAllCompositeMode(true);\r\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\r\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\r\n            toggleComponent.isChecked = true;\r\n        }\r\n\r\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\r\n        toggleComponent.isChecked = false;\r\n        debugView.csmLayerColoration = false;\r\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\r\n        toggleComponent.isChecked = true;\r\n        debugView.lightingWithAlbedo = true;\r\n    }\r\n    hideUI(button: Button) {\r\n        const titleNode = this.node.getChildByName('Titles');\r\n        const activeValue = !titleNode.active;\r\n        this.singleModeToggleList[0].parent.active = activeValue;\r\n        this.miscModeToggleList[0].parent.active = activeValue;\r\n        this.compositeModeToggleList[0].parent.active = activeValue;\r\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\r\n        titleNode.active = activeValue;\r\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\r\n    }\r\n\r\n    private _currentColorIndex = 0;\r\n    private strColor: string[] = [\r\n        '<color=#ffffff>',\r\n        '<color=#000000>',\r\n        '<color=#ff0000>',\r\n        '<color=#00ff00>',\r\n        '<color=#0000ff>',\r\n    ];\r\n    private color: Color[] = [\r\n        Color.WHITE,\r\n        Color.BLACK,\r\n        Color.RED,\r\n        Color.GREEN,\r\n        Color.BLUE,\r\n    ];\r\n    changeTextColor(button: Button) {\r\n        this._currentColorIndex++;\r\n        if (this._currentColorIndex >= this.strColor.length) {\r\n            this._currentColorIndex = 0;\r\n        }\r\n        for (let i = 0; i < this.textComponentList.length; i++) {\r\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\r\n        }\r\n        for (let i = 0; i < this.labelComponentList.length; i++) {\r\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n    }\r\n    update(deltaTime: number) {\r\n    }\r\n}\r\n","import { DEBUG, DEV } from 'cc/env';\r\n\r\nfunction jsGetSet(obj: unknown, prop: string, getter: Function, setter?: Function) {\r\n    Object.defineProperty(obj, prop, {\r\n        get: getter as any,\r\n        set: setter as any,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n}\r\nfunction clear(object: Record<string | number, any>) {\r\n    if (!object) return;\r\n    for (const key of Object.keys(object)) {\r\n        delete object[key];\r\n    }\r\n}\r\n/**\r\n * 将某个变量设置为不可观测(不可在浏览器中打印)\r\n * @param owner object | string | number | boolean | Array | Function | ...\r\n * @param callback 被观测时触发回调\r\n * @returns \r\n */\r\nexport function unobservable(owner: unknown, callback?: Function) {\r\n    if (DEV || DEBUG) return;\r\n    if (!owner) return;\r\n    function define() {\r\n        function accessor() {\r\n            if (callback) {\r\n                callback();\r\n            } else {\r\n                clear(owner);\r\n            }\r\n        }\r\n        try {\r\n            jsGetSet(owner, 'unobservable', accessor.bind(null, 'de' + 'bu' + 'gg' + 'er'));\r\n        }\r\n        catch (e) { !0; }\r\n    }\r\n    define();\r\n}","import { EventTarget, _decorator } from 'cc';\r\nimport BaseManager from '../../base/BaseManager';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('EventManager')\r\nexport default class EventManager extends BaseManager {\r\n    private events: Map<string | number, EventTarget> = new Map();\r\n\r\n    clear() {\r\n        return this.events.clear();\r\n    }\r\n\r\n    delete(rootName: string | number) {\r\n        return this.events.delete(rootName);\r\n    }\r\n\r\n    get(rootName: string | number): EventTarget {\r\n        if (this.events.has(rootName)) {\r\n            return this.events.get(rootName);\r\n        }\r\n\r\n        const event = new EventTarget();\r\n        this.events.set(rootName, event);\r\n\r\n        return event;\r\n    }\r\n}\r\n","import { App } from './app';\r\n\r\n/**\r\n * ccc除物理引擎等外的基础功能已经准备好了\r\n */\r\nexport function cccReady(app: App) {\r\n\r\n}\r\n\r\n/**\r\n * ccc全部功能都初始化完毕了\r\n */\r\nexport function cccInited(app: App) {\r\n\r\n}\r\n\r\n/**\r\n * app除了用户自定义Manager未加载外，其它都已准备好了\r\n */\r\nexport function appReady(app: App) {\r\n\r\n}\r\n\r\n/**\r\n * app全部功能都初始化完毕了\r\n */\r\nexport function appInited(app: App) {\r\n\r\n}","import { _decorator, Component, EventTouch, Node, Vec2 } from \"cc\";\n\nconst { ccclass, property } = _decorator;\n@ccclass\nexport class JmClickComponent extends Component {\n    private performClick = false\n    private startPos: Vec2//记录Touch事件开始时的位置\n\n    onEnable() {\n        super.onEnable && super.onEnable();\n        this.node.on(Node.EventType.TOUCH_START, this.OnClickTouchEnd, this)\n        this.node.on(Node.EventType.TOUCH_MOVE, this.OnClickTouchEnd, this)\n        this.node.on(Node.EventType.TOUCH_END, this.OnClickTouchEnd, this)\n    }\n\n    onDisable() {\n        super.onDisable && super.onDisable();\n        this.node.off(Node.EventType.TOUCH_START, this.OnClickTouchEnd, this)\n        this.node.off(Node.EventType.TOUCH_MOVE, this.OnClickTouchEnd, this)\n        this.node.off(Node.EventType.TOUCH_END, this.OnClickTouchEnd, this)\n    }\n\n    onDestroy() {\n        super.onDestroy && super.onDestroy();\n    }\n\n    OnClickTouchEnd(event: EventTouch) {\n        switch (event.getType()) {\n            case Node.EventType.TOUCH_START:\n                // JmLobbyLog.Log(\"TOUCH_START\")\n                this.performClick = true\n                this.startPos = event.getLocation()\n                break\n            case Node.EventType.TOUCH_MOVE:\n                // JmLobbyLog.Log(\"TOUCH_MOVE\")\n                let pos = event.getLocation()\n                let dst: Vec2 = this.startPos.subtract(pos)\n                if (dst.length() > 5) {//有的机型就算没有移动也会直接调用一次TOUCH_MOVE事件，此处将小距离移动忽略不计\n                    this.performClick = false\n                }\n                break\n            case Node.EventType.TOUCH_END:\n                if (this.performClick) {\n                    this.onItemClick(this)\n                }\n                this.performClick = false\n                break\n        }\n    }\n\n    protected onItemClick(target:any) {\n    }\n\n}","import { Component, EventTouch, instantiate, Node, Prefab, ScrollView, UITransform, Vec2, _decorator } from \"cc\";\r\nimport JmRefreshFooter from \"./JmRefreshFooter\";\r\nimport { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\n//import JmLobbyLog from \"../util/JmLobbyLog\";\r\n\r\nconst { ccclass, property, menu, requireComponent } = _decorator;\r\n@ccclass()\r\n@requireComponent(ScrollView)\r\n@menu(\"UI 组件/JmHorizontalListView\")\r\nexport default class JmHorizontalListView extends Component {\r\n    @property(Prefab)\r\n    itemPrefab: Prefab = null\r\n\r\n    @property\r\n    itemWidth: number = 0\r\n\r\n    @property\r\n    spacing = 0\r\n    @property\r\n    leftOffset = 0\r\n    @property\r\n    rightOffset = 0\r\n\r\n    @property\r\n    pullLeftToLoadEnabled = false\r\n    @property\r\n    footerOffset = 0\r\n    private footerController: JmRefreshFooter\r\n    private onPullLeftToLoad: Function\r\n    private hasMore: boolean = true\r\n\r\n    scrollView: ScrollView\r\n    footer: Prefab\r\n    footerWidth = 100\r\n\r\n    private _touchStartX = 0\r\n    private _touchStartFromLeft = false\r\n\r\n    private footerHolderWidth = 0;//底部增加占位控件，防止item总高度不够时无法滑动View\r\n\r\n    private isUserTouched = false;\r\n    private loadingState: RefreshOrLoadState = RefreshOrLoadState.NONE\r\n\r\n    private componentName: string = \"JmListViewItem\"\r\n\r\n    private showingViews = new Map<number, any>()\r\n    private recycledViews = new Array<any>()\r\n    private itemViewDirty = new Map<number, boolean>()\r\n    private itemViewWidths = new Array<number>()\r\n\r\n    private _data = new Array<any>()\r\n\r\n    private _dirty = false//决定是否需要刷新ListView\r\n    private _sizeDirty = false\r\n    private _checkRight = false\r\n\r\n\r\n    protected onLoad() {\r\n        this.scrollView = this.node.getComponent(ScrollView)\r\n        //这里设定一下anchor值，后面的itemView位置计算都依赖anchor\r\n        this.scrollView.content.getComponent(UITransform).anchorX = 0\r\n        this.scrollView.content.getComponent(UITransform).anchorY = 0.5\r\n\r\n        // JmLobbyLoaderMgr.LoadAssetCfg(JmLobbyAssetsCfg.JmRefreshFooterHorizontal).then((footer: Prefab) => {\r\n        //     this.footer = footer\r\n        // })\r\n\r\n        // if (!this.scrollView.elastic && this.scrollView.bounceDuration > 0 && this.pullDownToRefreshEnabled) {\r\n        //     //需要启用scrollView的elastic才能过量滑动，引发下拉刷新，\r\n        //     //且bounceDuration回弹必须设为0秒立即回弹，否则在update中更新的content位置会被回弹动画覆盖\r\n        //     JmLobbyLog.Error(\"set elastic true or pullRefresh Events will not work!!\")\r\n        // }\r\n        // if (this.scrollView.cancelInnerEvents) {\r\n        //     //cancelInnerEvents设置为true会导致ItemView的cancel提前触发，影响下拉刷新判断\r\n        //     JmLobbyLog.Error(\"do not set cancelInnerEvent true, it'll effect Refresh Events!!\")\r\n        // }\r\n    }\r\n\r\n    protected onEnable() {\r\n        this.scrollView.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.scrollView.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        // JmLobbyLog.Log(\"onTouchStart\")\r\n        this.isUserTouched = true\r\n        this._touchStartX = event.getLocationX()\r\n        this._touchStartFromLeft = Math.floor(this.scrollView.getScrollOffset().x) <= 1//搞点容错率，有的机型的scrollOffset值不是很精确\r\n        // JmLobbyLog.Log(`isTop-->${this._touchStartFromTop}, startY-->${this._touchStartY}`)\r\n    }\r\n\r\n    onTouchMove(event: EventTouch) {\r\n        // let offsetY = event.getLocationY() - this._touchStartY\r\n        // JmLobbyLog.Log(\"getLocationY-->\" + event.getLocationY())\r\n        // if (this.isUserTouched) {//如果正在touch，则检测是否在释放时需要刷新\r\n        //     this.checkPullDownRefresh(offsetY)\r\n        // }\r\n    }\r\n\r\n    onTouchEnd() {\r\n        // JmLobbyLog.Log(\"onTouchEnd\")\r\n        // this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    onTouchCancel() {\r\n        // JmLobbyLog.Log(\"onTouchCancel\")\r\n        // this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    getData() {\r\n        return this._data\r\n    }\r\n\r\n    setData(data?: any) {\r\n        this._data = data\r\n    }\r\n\r\n    setComponentName(name: string) {\r\n        this.componentName = name\r\n    }\r\n\r\n    private updateSize() {\r\n        if (this.scrollView.vertical || !this.scrollView.horizontal) {\r\n            console.log(\"scroll orientation must set vertical in ListView!\")\r\n            return\r\n        }\r\n\r\n        // if (this.refreshState == RefreshOrLoadState.REFRESHING) {\r\n        //     height = height + 100\r\n        // }\r\n        this.scrollView.content.getComponent(UITransform).width = this.getNormalContentWidth()\r\n    }\r\n    getNormalContentWidth() {\r\n        let width = this.getContentWidth()\r\n        if (this.pullLeftToLoadEnabled) {\r\n            width += this.footerWidth\r\n        }\r\n        if (width < this.scrollView.node.getComponent(UITransform).width) {\r\n            this.footerHolderWidth = this.scrollView.node.getComponent(UITransform).width - width\r\n            width = this.scrollView.node.getComponent(UITransform).width\r\n        }\r\n        return width\r\n    }\r\n\r\n    private getContentWidth() {\r\n        return this.getItemPosOffset(this.getItemCount()) + this.leftOffset + this.rightOffset;\r\n    }\r\n\r\n    private getItemPosOffset(index: number) {\r\n        let sum = 0\r\n        for (let i = 0; i < index; i++) {\r\n            sum += this.getItemWidthWithSpacing(i)\r\n        }\r\n        return sum\r\n    }\r\n\r\n    private getItemWidthWithSpacing(index?: number) {\r\n        if (index != undefined) {\r\n            return (this.itemViewWidths[index] || this.itemWidth) + this.spacing\r\n        }\r\n        return this.itemWidth + this.spacing\r\n    }\r\n\r\n    private getListLeftRightVisiblePos() {\r\n        //scrollX的值从0开始到负的contentWidth\r\n        let scrollX = -this.scrollView.getScrollOffset().x\r\n        let width = this.scrollView.node.getComponent(UITransform).width\r\n        let leftVisibleX = scrollX\r\n        let rightVisibleX = scrollX + width\r\n        return [leftVisibleX, rightVisibleX]\r\n    }\r\n\r\n    /**\r\n     * 计算当前Item是否可见\r\n     * @param index\r\n     * @private\r\n     */\r\n    private isVisible(index: number) {\r\n        let [leftVisibleX, rightVisibleX] = this.getListLeftRightVisiblePos()\r\n\r\n        let itemLeftX = this.getItemPosOffset(index)\r\n        let itemRightX = itemLeftX + this.getItemWidthWithSpacing(index)\r\n\r\n        //item的底线或顶线可见即为item可见\r\n        return (itemLeftX >= leftVisibleX && itemLeftX <= rightVisibleX)\r\n            || (itemRightX >= leftVisibleX && itemRightX <= rightVisibleX)\r\n            //或者底线和顶线都在屏幕两侧外，即Item高度大于屏幕高度\r\n            || (itemLeftX <= leftVisibleX && itemRightX >= rightVisibleX)\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (this._dirty) { //标记为dirty时才做刷新处理\r\n            let data = this._data\r\n            for (let i = 0; i < this.getItemCount(); ++i) {\r\n                if (this.isVisible(i)) {//可见则初始化UI\r\n                    if (this.itemViewDirty.get(i)) {\r\n                        let child = this.getItemView(i)\r\n                        let component = child.getComponent(this.componentName)\r\n                        if (component == null) {\r\n                            throw \"ERROR! item view must implements\" + this.componentName + \" component!!\"\r\n                        }\r\n                        component.updateItem(i, data[i], this)\r\n                        //记录updateItem之后的高度便于后面的计算\r\n                        if (this.itemViewWidths[i] == undefined) {\r\n                            this.itemViewWidths[i] = component.getItemWidth() || this.itemWidth\r\n                        }\r\n                        let x = this.getItemPosOffset(i) + this.getItemWidthWithSpacing(i) * child.anchorX + this.leftOffset\r\n                        // console.log(\"TestV-----------index-->\" + i, \"yPos--->\" + y, \"height-->\" + this.itemViewHeights)\r\n                        child.setPosition(x, 0)\r\n                        this._sizeDirty = true\r\n\r\n                        this.itemViewDirty.set(i, false);\r\n                        // JmLobbyLog.Log(\"clear item view dirty-->\" + i)\r\n                        if (child.parent == null) {\r\n                            this.scrollView.content.addChild(child)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //遍历showingViews, 不可见则回收\r\n            this.showingViews.forEach((child: Node, index: number) => {\r\n                if (!this.isVisible(index) || this._data == null || this._data[index] == null) {\r\n                    // JmLobbyLog.Log(\"not visible, index = \" + index + \", child is\" + child)\r\n                    if (child != null) {\r\n                        this.recycleChild(index, child)\r\n                    }\r\n                }\r\n            })\r\n\r\n            this.checkFooterView()\r\n            // JmLobbyLog.Log(\"total Items:\" + this._data.length)\r\n            this._dirty = false\r\n        }\r\n        if (this._sizeDirty) {\r\n\r\n            let isRight = false\r\n            if (this._checkRight) {\r\n                isRight = this.isRight()\r\n            }\r\n            this.updateSize()\r\n            if (isRight) {\r\n                this.scrollView.scrollToOffset(new Vec2(this.scrollView.getMaxScrollOffset().x, 0))\r\n                this._dirty = true//scroll之后需要再次刷新，否则有可能不显示部分ItemView\r\n            }\r\n            this._sizeDirty = false\r\n        }\r\n    }\r\n\r\n    //addOrUpdateFooterView\r\n    private checkFooterView() {\r\n        if (this.footerController == null) {\r\n            if (this.footer != null && this.pullLeftToLoadEnabled) {\r\n                // JmLobbyLog.Log(\"addFooter\")\r\n                let footerView = instantiate(this.footer)\r\n                let component = footerView.getComponent<JmRefreshFooter>(JmRefreshFooter)\r\n                this.footerController = component\r\n                this.scrollView.content.addChild(footerView)\r\n                component.setState(RefreshOrLoadState.NONE)\r\n            }\r\n        }\r\n        if (this.footerController != null) {\r\n            let viewBottomY = -this.getContentWidth() - this.footerWidth / 2\r\n            let contentBottomY = -this.scrollView.content.getComponent(UITransform).width + this.footerWidth / 2 + this.footerOffset\r\n            this.footerController.node.setPosition(Math.min(viewBottomY, contentBottomY), 0)\r\n        }\r\n    }\r\n\r\n    private recycleChild(index: number, child: Node) {\r\n        child.removeFromParent()\r\n        this.showingViews.delete(index)\r\n        this.recycledViews.push(child)\r\n        this.itemViewDirty.set(index, true);\r\n    }\r\n\r\n    private getItemCount() {\r\n        return this._data ? this._data.length : 0\r\n    }\r\n\r\n    private getItemView(index: number) {\r\n        let itemView = this.showingViews.get(index)\r\n        if (itemView == null) {\r\n            this.itemViewDirty.set(index, true);\r\n        }\r\n        if (itemView == null) {\r\n            itemView = this.recycledViews.pop()\r\n        }\r\n        if (itemView == null) {\r\n            this.itemViewDirty.set(index, true);\r\n            itemView = instantiate(this.itemPrefab)\r\n        }\r\n        this.showingViews.set(index, itemView)\r\n        return itemView\r\n    }\r\n\r\n\r\n    onScrollEvent(sender: any, event: any) {\r\n        switch (event) {\r\n            case ScrollView.EventType.SCROLLING:\r\n                this.startPullLeftLoad()\r\n                this._dirty = true\r\n                break\r\n            default:\r\n                // JmLobbyLog.Log(\"event-->\" + event)\r\n                break\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 标记所有的Item需要刷新\r\n     */\r\n    private markChildrenDirty() {\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            this.itemViewDirty.set(i, true);\r\n        }\r\n    }\r\n\r\n    private isRight() {\r\n        return this.scrollView.getScrollOffset().x >= this.scrollView.getMaxScrollOffset().x\r\n    }\r\n\r\n    /**\r\n     * 刷新所有Item\r\n     * @param checkRight 是否检查使ListView保持在底部\r\n     *\r\n     * fixme 有个bug：如果刚初始化页面时就调用notifyChange且数据量大于了一页的展示数量，会导致页面无法滑动；目前的处理方式是如果非要调就延迟0.1秒调用，后续有时间再修复下\r\n     */\r\n    notifyChange(checkRight?: boolean) {\r\n        // if (this.getItemCount() == 0) {\r\n        //     if (this.emptyView) {\r\n        //         this.emptyView.active = true\r\n        //         if (JmNative.GetNetWorkState() == sys.NetworkType.NONE && this.noNetworkImg) {\r\n        //             this.emptyPic.spriteFrame = this.noNetworkImg\r\n        //         } else if (this.emptyImg) {\r\n        //             this.emptyPic.spriteFrame = this.emptyImg\r\n        //         }\r\n        //     }\r\n        // } else {\r\n        //     if (this.emptyView) {\r\n        //         this.emptyView.active = false\r\n        //     }\r\n        this._sizeDirty = true\r\n        this._checkRight = checkRight\r\n        this.markChildrenDirty()\r\n        // }\r\n        this._dirty = true\r\n    }\r\n\r\n    /**\r\n     * 刷新单个Item\r\n     */\r\n    notifyItemChange(index: number) {\r\n        this.itemViewDirty.set(index, true);\r\n        this._dirty = true\r\n    }\r\n\r\n    updateHeight(index: number, height: number) {\r\n        this.itemViewWidths[index] = height\r\n        this.notifyChange()\r\n    }\r\n\r\n    /**\r\n     * 设置上拉加载更多数据回调，在回调中加载数据，并在完成后调用{@link JmListView#onLoadComplete()}\r\n     */\r\n    setPullLeftToLoadListener(listener: Function) {\r\n        this.onPullLeftToLoad = listener\r\n    }\r\n\r\n    private startPullLeftLoad() {\r\n        // JmLobbyLog.Log(\"startPullUpLoad\", this.refreshState, this.loadingState)\r\n        if (this.pullLeftToLoadEnabled && this.hasMore && this.loadingState != RefreshOrLoadState.REFRESHING && !this.isUserTouched) {\r\n            let [offset, maxOffset] = [this.scrollView.getScrollOffset().y, this.scrollView.getMaxScrollOffset().y]\r\n            //有的机型offset值不是很准确，这里搞点容错率\r\n            if (Math.ceil(offset) >= Math.floor(maxOffset)) {\r\n                // JmLobbyLog.Log(\"PullUpToLoad\")\r\n                this.updateLoadingState(RefreshOrLoadState.REFRESHING)\r\n                if (this.onPullLeftToLoad) {\r\n                    this.onPullLeftToLoad()\r\n                }\r\n\r\n                /**测试：延时刷新完成返回，并添加测试数据*/\r\n                // this.scheduleOnce(() => {\r\n                //     if (this._data.length > 0) {\r\n                //         this._data.push(this._data[0])\r\n                //     }\r\n                //     this.onLoadComplete(true)\r\n                // }, 2)\r\n            } else {\r\n                // JmLobbyLog.Log(\"offset--->\" + offset, \"maxOffset-->\" + maxOffset)\r\n            }\r\n        }\r\n    }\r\n\r\n    onLoadComplete(hasMore: boolean = true) {\r\n        this.hasMore = hasMore\r\n        if (hasMore) {\r\n            this.updateLoadingState(RefreshOrLoadState.NONE)\r\n        } else {\r\n            this.updateLoadingState(RefreshOrLoadState.COMPLETE)\r\n        }\r\n        // JmLobbyLog.Log(\"loading done\")\r\n        this.notifyChange()\r\n    }\r\n\r\n    private updateLoadingState(state: RefreshOrLoadState) {\r\n        if (this.loadingState != state) {\r\n            this.loadingState = state\r\n            this.onLoadingStateChange(state)\r\n        }\r\n    }\r\n\r\n    private onLoadingStateChange(newState: RefreshOrLoadState) {\r\n        // JmLobbyLog.Log(\"onLoadingStateChange-->\" + this.loadingState)\r\n        this.footerController && this.footerController.setState(newState)\r\n    }\r\n}","import JmRefreshHeader from \"./JmRefreshHeader\";\r\nimport JmRefreshFooter from \"./JmRefreshFooter\";\r\nimport { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\nimport { _decorator, Component, Node, UITransform, Prefab, Sprite, SpriteFrame, ScrollView, Vec2, instantiate, sys, EventTouch } from 'cc';\r\nimport BaseView from \"db://app/base/BaseView\";\r\n// import { sysDefine } from \"./sysDefine\";\r\n// import { AssetsCfg } from \"./AssetsCfg\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('JmListView')\r\n//@requireComponent(ScrollView)\r\n//@menu(\"UI 组件/JmListView\")\r\nexport default class JmListView extends BaseView {\r\n    @property(Prefab)\r\n    itemPrefab: Prefab = null\r\n\r\n    @property\r\n    itemHeight: number = 0\r\n    @property(Node)\r\n    emptyView: Node = null\r\n    @property(Sprite)\r\n    emptyPic: Sprite = null\r\n    @property(SpriteFrame)\r\n    noNetworkImg: SpriteFrame = null\r\n    @property(SpriteFrame)\r\n    emptyImg: SpriteFrame = null\r\n\r\n    @property\r\n    spacing = 0\r\n    @property\r\n    topMargin = 0\r\n    @property\r\n    bottomMargin = 0\r\n\r\n    @property\r\n    pullDownToRefreshEnabled = false\r\n    private headerController: JmRefreshHeader\r\n    private onPullDownToRefresh: Function\r\n\r\n    @property\r\n    pullUpToLoadEnabled = false\r\n    @property\r\n    footerOffset = 0\r\n    @property\r\n    refreshFooterShow = true\r\n    private footerController: JmRefreshFooter\r\n    private onPullUpToLoad: Function\r\n    private hasMore: boolean = true\r\n\r\n    scrollView: ScrollView\r\n    header: Prefab;\r\n    headerHeight = 300\r\n    footer: Prefab;\r\n    footerHeight = 250\r\n\r\n    private _touchStartY = 0\r\n    private _touchStartFromTop = false\r\n\r\n    //下拉刷新和上拉加载的状态\r\n    private isUserTouched = false;\r\n    private refreshState: RefreshOrLoadState = RefreshOrLoadState.NONE\r\n    private loadingState: RefreshOrLoadState = RefreshOrLoadState.NONE\r\n\r\n    private componentName: string = \"JmListViewItem\"\r\n\r\n    private footerHolderHeight = 0;//底部增加占位控件，防止item总高度不够时无法滑动View\r\n\r\n    private showingViews = new Map<number, any>()\r\n    private recycledViews = new Array<any>()\r\n    private itemViewDirty = new Map<number, boolean>()//每个子View是否需要刷新\r\n    private itemViewHeights = new Array<number>()//每个子View的高度\r\n\r\n    private _data = new Array<any>()\r\n\r\n    private _dirty = false//决定是否需要刷新ListView的外层开关\r\n    private _sizeDirty = false//决定是否要更新ListView的content大小\r\n    private _checkBottom = false\r\n\r\n    private extraData: any = {}\r\n\r\n    protected onLoad() {\r\n        this.scrollView = this.node.getComponent(ScrollView)\r\n        //启用相关控件时才加载prefab，减少内存占用\r\n        //if (this.pullDownToRefreshEnabled) {\r\n            // JmLobbyLoaderMgr.LoadAssetCfg(HoldOnAssetsCfg.HoldOnRefreshHeader).then((header: Prefab) => {\r\n            //     this.header = header\r\n            // })\r\n            // Jm.AssetManager.loadResInBundle(SysDefine.bundleName, HoldOnAssetsCfg.HoldOnRefreshHeader, function (err, header) {\r\n            //     this.header = header\r\n            // })\r\n        //}\r\n        //if (this.pullUpToLoadEnabled && this.refreshFooterShow) {\r\n            // JmLobbyLoaderMgr.LoadAssetCfg(HoldOnAssetsCfg.HoldOnRefreshFooter).then((footer: Prefab) => {\r\n            //     this.footer = footer\r\n            // })\r\n            // let self = this\r\n            // let self1 = this.footer\r\n            // Jm.AssetManager.loadResInBundle(sysDefine.bundleName, AssetsCfg.RefreshFooter, function (err, footer: Prefab) {\r\n            //     self.footer = footer\r\n            // })\r\n        //}\r\n\r\n        if (!this.scrollView.elastic && this.scrollView.bounceDuration > 0 && this.pullDownToRefreshEnabled) {\r\n            //需要启用scrollView的elastic才能过量滑动，引发下拉刷新，\r\n            //且bounceDuration回弹必须设为0秒立即回弹，否则在update中更新的content位置会被回弹动画覆盖\r\n            console.log(\"set elastic true or pullRefresh Events will not work!!\")\r\n        }\r\n        if (this.scrollView.cancelInnerEvents) {\r\n            //cancelInnerEvents设置为true会导致ItemView的cancel提前触发，影响下拉刷新判断\r\n            // JmLobbyLog.Error(\"do not set cancelInnerEvent true, it'll effect Refresh Events!!\")\r\n            this.scrollView.cancelInnerEvents = false\r\n        }\r\n    }\r\n\r\n    protected onEnable() {\r\n        this.scrollView.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.scrollView.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n        this.scrollView.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        // Util.ReleaseAsset(this.itemPrefab);\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        // JmLobbyLog.console.log(\"onTouchStart\")\r\n        this.isUserTouched = true\r\n        this._touchStartY = event.getLocationY()\r\n        this._touchStartFromTop = Math.floor(this.scrollView.getScrollOffset().y) <= 1//搞点容错率，有的机型的scrollOffset值不是很精确\r\n\r\n        // JmLobbyLog.console.log(`isTop-->${this._touchStartFromTop}, startY-->${this._touchStartY}`)\r\n    }\r\n\r\n    onTouchMove(event: EventTouch) {\r\n        if (!this.pullDownToRefreshEnabled) return\r\n        let offsetY = event.getLocationY() - this._touchStartY\r\n        // JmLobbyLog.console.log(\"getLocationY-->\" + event.getLocationY())\r\n        if (this.isUserTouched) {//如果正在touch，则检测是否在释放时需要刷新\r\n            this.checkPullDownRefresh(offsetY)\r\n            this.headerController && this.headerController.onScrollOffset(offsetY)\r\n        }\r\n    }\r\n\r\n    onTouchEnd() {\r\n        // JmLobbyLog.console.log(\"onTouchEnd\")\r\n        this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    onTouchCancel() {\r\n        // JmLobbyLog.console.log(\"onTouchCancel\")\r\n        this.startPullDownRefresh()\r\n        this.isUserTouched = false\r\n    }\r\n\r\n    getData() {\r\n        return this._data || []\r\n    }\r\n\r\n    setData(data?: any) {\r\n        this._data = data\r\n    }\r\n\r\n    private updateSize() {\r\n        if (this.scrollView.horizontal || !this.scrollView.vertical) {\r\n            console.log(\"scroll orientation must set vertical in ListView!\")\r\n            return\r\n        }\r\n\r\n        // if (this.refreshState == RefreshOrLoadState.REFRESHING) {\r\n        //     height = height + 100\r\n        // }\r\n        let height = this.scrollView.content.getComponent(UITransform).height\r\n        let newHeight = this.getNormalContentHeight()\r\n        this.scrollView.content.getComponent(UITransform).height = newHeight\r\n        if (height > newHeight) {\r\n            this.notifyChange()\r\n        }\r\n    }\r\n\r\n    getNormalContentHeight() {\r\n        let height = this.getContentHeight()// get total content height\r\n        // console.log(\"contentHeight-->\", height, this.getItemCount())\r\n        if (this.pullUpToLoadEnabled && this.refreshFooterShow) {\r\n            height = height + this.footerHeight\r\n        }\r\n        if (height < this.scrollView.node.getComponent(UITransform).height) {\r\n            this.footerHolderHeight = this.scrollView.node.getComponent(UITransform).height - height\r\n            //将View的大小最小设置为整个View的大小，可能是由于底层原因 小于这个值会在没有填满布局时无法触发滑动\r\n            height = this.scrollView.node.getComponent(UITransform).height\r\n        }\r\n        return height\r\n    }\r\n\r\n    /**\r\n     * 设置Item类的子类实现类名\r\n     */\r\n    setComponentName(name: string) {\r\n        this.componentName = name\r\n    }\r\n\r\n    setTopMargin(num: number) {\r\n        this.topMargin = num\r\n    }\r\n\r\n    getContentHeight() {\r\n        return this.getItemPosOffset(this.getItemCount()) + this.topMargin + this.bottomMargin;\r\n    }\r\n\r\n    private getItemPosOffset(index: number) {\r\n        let sum = 0\r\n        for (let i = 0; i < index; i++) {\r\n            sum += this.getItemHeightWithSpacing(i)\r\n        }\r\n        return sum\r\n    }\r\n\r\n    /**\r\n     * 根据index返回item占高\r\n     */\r\n    private getItemHeightWithSpacing(index?: number) {\r\n        if (index != undefined) {\r\n            return (this.itemViewHeights[index] || this.itemHeight) + this.spacing\r\n        }\r\n        return this.itemHeight + this.spacing\r\n    }\r\n\r\n    private getListTopBottomVisiblePos() {\r\n        //scrollY的值是从 最顶部(scrollView.node.getComponent(UITransform).height/2) ~ 最底部(scrollView.content.height - scrollView.node.getComponent(UITransform).height/2)\r\n        let scrollY = this.scrollView.content.position.y\r\n        let halfHeight = this.scrollView.node.getComponent(UITransform).height / 2\r\n        let topVisibleY = scrollY - halfHeight\r\n        let bottomVisibleY = scrollY + halfHeight\r\n        bottomVisibleY += this.headerHeight//下拉刷新时先刷新再回弹，导致底部高度为headerHeight的部分不会被显示出来\r\n        return [topVisibleY, bottomVisibleY]\r\n    }\r\n\r\n    /**\r\n     * 计算当前Item是否可见\r\n     * @param index\r\n     * @private\r\n     */\r\n    private isVisible(index: number) {\r\n        let [topVisibleY, bottomVisibleY] = this.getListTopBottomVisiblePos()\r\n\r\n        let itemTopY = this.getItemPosOffset(index) + this.topMargin\r\n        let itemBottomY = itemTopY + this.getItemHeightWithSpacing(index)\r\n\r\n        //item的底线或顶线可见即为item可见\r\n        return (itemTopY >= topVisibleY && itemTopY <= bottomVisibleY)\r\n            || (itemBottomY >= topVisibleY && itemBottomY <= bottomVisibleY)\r\n            //或者底线和顶线都在屏幕两侧外，即Item高度大于屏幕高度\r\n            || (itemTopY <= topVisibleY && itemBottomY >= bottomVisibleY)\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (this.pullDownToRefreshEnabled && this.refreshState == RefreshOrLoadState.REFRESHING) {\r\n            //this.scrollView.content.position.y = this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight\r\n            this.scrollView.content.setPosition(this.scrollView.node.getComponent(UITransform).width / 2, this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight)\r\n        }\r\n        if (this._dirty) { //标记为dirty时才做刷新处理\r\n            let data = this._data\r\n            for (let i = 0; i < this.getItemCount(); ++i) {\r\n                if (this.isVisible(i)) {//可见则初始化UI\r\n                    if (this.itemViewDirty.get(i)) {\r\n                        let child = this.getItemView(i)\r\n                        if (child == null) {\r\n                            console.log(`JmListView Child Is Null! ${this.componentName}`)\r\n                            return;\r\n                        }\r\n                        let component = child.getComponent(this.componentName)\r\n                        if (component == null) {\r\n                            throw \"ERROR! item view must implements\" + this.componentName + \" component!!\"\r\n                        }\r\n                        component.updateItem(i, data[i], this)\r\n                        //记录updateItem之后的高度便于后面的计算\r\n                        if (this.itemViewHeights[i] == undefined) {\r\n                            this.itemViewHeights[i] = this.itemHeight//component.getItemHeight() || this.itemHeight\r\n                        }\r\n                        let y = -this.getItemPosOffset(i) - this.getItemHeightWithSpacing(i) * (1 - child.getComponent(UITransform).anchorY) - this.topMargin\r\n                        // console.log(\"TestV-----------index-->\" + i, \"yPos--->\" + y, \"height-->\" + this.itemViewHeights)\r\n                        child.setPosition(0, y)\r\n                        this._sizeDirty = true\r\n\r\n                        this.itemViewDirty.set(i, false);\r\n                        // JmLobbyLog.console.log(\"clear item view dirty-->\" + i)\r\n                        if (child.parent == null) {\r\n                            this.scrollView.content.addChild(child)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //遍历showingViews, 不可见则回收\r\n            this.showingViews.forEach((child: Node, index: number) => {\r\n                if (!this.isVisible(index) || this._data == null || (this._data.length - 1) < index) {\r\n                    // JmLobbyLog.console.log(\"not visible, index = \" + index + \", child is\" + child)\r\n                    if (child != null) {\r\n                        this.recycleChild(index, child)\r\n                    }\r\n                }\r\n            })\r\n\r\n            this.checkHeaderView()\r\n            this.checkFooterView()\r\n            // JmLobbyLog.console.log(\"total Items:\" + this._data.length)\r\n            this._dirty = false\r\n        }\r\n        if (this._sizeDirty) {\r\n\r\n            let isBottom = false\r\n            if (this._checkBottom) {\r\n                isBottom = this.isBottom()\r\n            }\r\n            this.updateSize()\r\n            if (isBottom) {\r\n                this.scrollView.scrollToOffset(new Vec2(0, this.scrollView.getMaxScrollOffset().y))\r\n                this._dirty = true//scroll之后需要再次刷新，否则有可能不显示部分ItemView\r\n            }\r\n            this._sizeDirty = false\r\n        }\r\n    }\r\n\r\n    //addOrUpdateHeaderView\r\n    private checkHeaderView() {\r\n        if (this.headerController == null) {\r\n            if (this.header != null && this.pullDownToRefreshEnabled) {\r\n                // JmLobbyLog.console.log(\"addHeader\")\r\n                let headerView = instantiate(this.header)\r\n                headerView.setPosition(0, this.headerHeight / 2 - this.topMargin)\r\n                this.scrollView.content.addChild(headerView)\r\n                let component = headerView.getComponent<JmRefreshHeader>(JmRefreshHeader)\r\n                component.setState(this.refreshState)\r\n                this.headerController = component\r\n            }\r\n        }\r\n    }\r\n\r\n    //addOrUpdateFooterView\r\n    private checkFooterView() {\r\n        if (this.footerController == null) {\r\n            if (this.footer != null && this.pullUpToLoadEnabled) {\r\n                // JmLobbyLog.console.log(\"addFooter\")\r\n                let footerView = instantiate(this.footer)\r\n                this.scrollView.content.addChild(footerView)\r\n                let component = footerView.getComponent<JmRefreshFooter>(JmRefreshFooter)\r\n                component.setState(RefreshOrLoadState.NONE)\r\n                this.footerController = component\r\n            }\r\n        }\r\n        if (this.footerController != null) {\r\n            let viewBottomY = -this.getContentHeight() - this.footerHeight / 2\r\n            let contentBottomY = -this.scrollView.content.getComponent(UITransform).height + this.footerHeight / 2 + this.footerOffset\r\n            this.footerController.node.setPosition(0, Math.min(viewBottomY, contentBottomY) + this.bottomMargin)\r\n        }\r\n    }\r\n\r\n    private recycleChild(index: number, child: Node) {\r\n        child.removeFromParent()\r\n        this.showingViews.delete(index)\r\n        this.recycledViews.push(child)\r\n        this.itemViewDirty.set(index, true);\r\n    }\r\n\r\n    private getItemCount() {\r\n        return this._data ? this._data.length : 0\r\n    }\r\n\r\n    private getItemView(index: number) {\r\n        let itemView = this.showingViews.get(index)\r\n        if (itemView != null) {\r\n            // JmLobbyLog.console.log(\"getFromShowingViews-->\" + index)\r\n        } else {\r\n            // JmLobbyLog.console.log(\"mark item view dirty-->\" + index)\r\n            this.itemViewDirty.set(index, true);\r\n        }\r\n        if (itemView == null) {\r\n            itemView = this.recycledViews.pop()\r\n        }\r\n        if (itemView == null) {\r\n            itemView = instantiate(this.itemPrefab)\r\n            this.itemViewDirty.set(index, true);\r\n        }\r\n        this.showingViews.set(index, itemView)\r\n        return itemView\r\n    }\r\n    onScrollEvent(sender: any, event: any) {\r\n        // if (event == ScrollView.EventType.SCROLLING) {\r\n        if (event == 4) {\r\n            if (this.pullUpToLoadEnabled) {\r\n                this.checkPullUpLoad()\r\n            }\r\n            this._dirty = true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 标记所有的Item需要刷新\r\n     */\r\n    private markChildrenDirty() {\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            this.itemViewDirty.set(i, true);\r\n        }\r\n    }\r\n\r\n    private isBottom() {\r\n        return this.scrollView.getScrollOffset().y >= this.scrollView.getMaxScrollOffset().y\r\n    }\r\n\r\n    /**\r\n     * 刷新所有Item\r\n     * @param checkBottom 是否检查使ListView保持在底部\r\n     *\r\n     * fixme 有个bug：如果刚初始化页面时就调用notifyChange且数据量大于了一页的展示数量，会导致页面无法滑动；目前的处理方式是如果非要调就延迟0.1秒调用，后续有时间再修复下\r\n     */\r\n    notifyChange(checkBottom?: boolean) {\r\n        if (this.getItemCount() == 0) {\r\n            if (this.emptyView) {\r\n                this.emptyView.active = true\r\n                if (sys.getNetworkType() == sys.NetworkType.NONE && this.noNetworkImg) {\r\n                    this.emptyPic.spriteFrame = this.noNetworkImg\r\n                } else if (this.emptyImg) {\r\n                    this.emptyPic.spriteFrame = this.emptyImg\r\n                }\r\n                this.updateLoadingState(RefreshOrLoadState.NONE)\r\n            }\r\n        } else {\r\n            if (this.emptyView) {\r\n                this.emptyView.active = false\r\n            }\r\n            this._sizeDirty = true\r\n            this._checkBottom = checkBottom\r\n            this.markChildrenDirty()\r\n        }\r\n        this._dirty = true\r\n    }\r\n\r\n    /**\r\n     * 刷新单个Item\r\n     */\r\n    notifyItemChange(index: number) {\r\n        this.itemViewDirty.set(index, true);\r\n        this._dirty = true\r\n    }\r\n\r\n    updateHeight(index: number, height: number) {\r\n        this.itemViewHeights[index] = height\r\n        this.notifyChange()\r\n    }\r\n\r\n    /**\r\n     * 设置上拉加载更多数据回调，在回调中加载数据，并在完成后调用{@link JmListView#onLoadComplete()}\r\n     */\r\n    setPullUpToLoadListener(listener: Function) {\r\n        this.onPullUpToLoad = listener\r\n    }\r\n\r\n    /**\r\n     * 设置下拉刷新数据回调，在回调中加载数据，并在完成后调用{@link JmListView#onRefreshComplete()}\r\n     */\r\n    setPullDownToRefreshListener(listener: Function) {\r\n        this.onPullDownToRefresh = listener\r\n    }\r\n\r\n    private checkPullDownRefresh(offsetY: number) {\r\n        if (this.pullDownToRefreshEnabled && this.refreshState != RefreshOrLoadState.REFRESHING && this.loadingState != RefreshOrLoadState.REFRESHING) {\r\n            if (this._touchStartFromTop && offsetY < -this.headerHeight * 1.5) {\r\n                this.updateRefreshState(RefreshOrLoadState.READY_TO_REFRESH)\r\n            } else {\r\n                this.updateRefreshState(RefreshOrLoadState.NONE)\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkPullUpLoad() {\r\n        // JmLobbyLog.console.log(\"checkPullUpLoad\", this.refreshState, this.loadingState)\r\n        if (this.pullUpToLoadEnabled && this.hasMore && this.loadingState != RefreshOrLoadState.REFRESHING && this.refreshState != RefreshOrLoadState.REFRESHING && !this.isUserTouched) {\r\n            let [offset, maxOffset] = [this.scrollView.getScrollOffset().y, this.scrollView.getMaxScrollOffset().y]\r\n            //有的机型offset值不是很准确，这里搞点容错率\r\n            if (Math.ceil(offset) >= Math.floor(maxOffset)) {\r\n                // JmLobbyLog.console.log(\"PullUpToLoad\")\r\n                this.updateLoadingState(RefreshOrLoadState.REFRESHING)\r\n                if (this.onPullUpToLoad) {\r\n                    this.onPullUpToLoad()\r\n                }\r\n\r\n                /**测试：延时刷新完成返回，并添加测试数据*/\r\n                // this.scheduleOnce(() => {\r\n                //     if (this._data.length > 0) {\r\n                //         this._data.push(this._data[0])\r\n                //     }\r\n                //     this.onLoadComplete(true)\r\n                // }, 2)\r\n            } else {\r\n                // JmLobbyLog.console.log(\"offset--->\" + offset, \"maxOffset-->\" + maxOffset)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 主动调起刷新\r\n     */\r\n    pullDownRefresh() {\r\n        this.scrollView.stopAutoScroll()\r\n        //this.scrollView.content.position.y = this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight\r\n        this.scrollView.content.setPosition(this.scrollView.node.getComponent(UITransform).width / 2, this.scrollView.node.getComponent(UITransform).height / 2 - this.headerHeight)\r\n        this._dirty = true\r\n        this.updateRefreshState(RefreshOrLoadState.REFRESHING)\r\n        this.scheduleOnce(() => {//产品说要延迟刷新，让用户可以看到REFRESHING的动画\r\n            if (this.onPullDownToRefresh != null) {\r\n                this.onPullDownToRefresh()\r\n            }\r\n        }, 1.5)\r\n    }\r\n\r\n    private startPullDownRefresh() {\r\n        // JmLobbyLog.console.log(\"startPullDownRefresh\", this.refreshState, this.loadingState)\r\n        if (this.pullDownToRefreshEnabled && this.refreshState == RefreshOrLoadState.READY_TO_REFRESH && this.loadingState != RefreshOrLoadState.REFRESHING) {\r\n            this.updateRefreshState(RefreshOrLoadState.REFRESHING)\r\n            this.scheduleOnce(() => {//产品说要延迟刷新，让用户可以看到REFRESHING的动画\r\n                if (this.onPullDownToRefresh != null) {\r\n                    this.onPullDownToRefresh()\r\n                }\r\n            }, 1.5)\r\n            /**测试：延时刷新完成返回*/\r\n            // this.scheduleOnce(() => {\r\n            //     this.onRefreshComplete()\r\n            // }, 2)\r\n        } else {\r\n            this.headerController && this.headerController.onScrollOffset(0)\r\n        }\r\n    }\r\n\r\n    onRefreshComplete(scrollToTop = true) {\r\n        // JmLobbyLog.console.log(\"refresh done\")\r\n        let hasMore = this.hasMore = this.getItemCount() > 0\r\n        if (hasMore) {\r\n            this.updateLoadingState(RefreshOrLoadState.NONE)\r\n        } else {\r\n            this.updateLoadingState(RefreshOrLoadState.EMPTY)\r\n        }\r\n\r\n        if (scrollToTop) {\r\n            // this.updateRefreshState(RefreshOrLoadState.COMPLETING)\r\n            // this.scrollView.content.stopAllActions()\r\n            // let move = cc.moveTo(0.1, cc.v2(0, this.scrollView.node.getComponent(UITransform).height / 2))\r\n            // let delay = cc.delayTime(0.3)\r\n            // let finish = cc.callFunc(() => {\r\n            //     this.updateRefreshState(RefreshOrLoadState.NONE)\r\n            // })\r\n            // this.headerController && this.headerController.onScrollOffset(0)\r\n            // this.scrollView.content.runAction(cc.sequence(move, delay, finish))\r\n        } else {\r\n            this.updateRefreshState(RefreshOrLoadState.NONE)\r\n        }\r\n\r\n        this.notifyChange()\r\n    }\r\n\r\n    stopPullDownRefresh() {\r\n        this.updateRefreshState(RefreshOrLoadState.COMPLETING)\r\n        //this.scrollView.content.stopAllActions()\r\n        this.headerController && this.headerController.onScrollOffset(0)\r\n        //this.scrollView.content.position.y = this.scrollView.node.getComponent(UITransform).height / 2\r\n        this.scrollView.content.setPosition(this.scrollView.node.getComponent(UITransform).width / 2, this.scrollView.node.getComponent(UITransform).height / 2)\r\n    }\r\n\r\n    onLoadComplete(hasMore: boolean = true) {\r\n        this.hasMore = hasMore\r\n        if (hasMore) {\r\n            this.updateLoadingState(RefreshOrLoadState.NONE)\r\n        } else {\r\n            this.updateLoadingState(RefreshOrLoadState.COMPLETE)\r\n        }\r\n        // JmLobbyLog.console.log(\"loading done\")\r\n        this.notifyChange()\r\n    }\r\n\r\n    private updateRefreshState(state: RefreshOrLoadState) {\r\n        if (this.refreshState != state) {\r\n            // JmLobbyLog.console.log(\"updateRefreshState-->\", this.refreshState, state)\r\n            this.refreshState = state\r\n            this.onRefreshStateChange(state)\r\n        }\r\n    }\r\n\r\n    private onRefreshStateChange(newState: RefreshOrLoadState) {\r\n        // JmLobbyLog.console.log(\"onRefreshStateChange-->\" + this.refreshState)\r\n        this.headerController && this.headerController.setState(newState)\r\n    }\r\n\r\n    private updateLoadingState(state: RefreshOrLoadState) {\r\n        if (this.loadingState != state) {\r\n            this.loadingState = state\r\n            this.onLoadingStateChange(state)\r\n        }\r\n    }\r\n\r\n    private onLoadingStateChange(newState: RefreshOrLoadState) {\r\n        // JmLobbyLog.console.log(\"onLoadingStateChange-->\" + this.loadingState)\r\n        this.footerController && this.footerController.setState(newState)\r\n    }\r\n\r\n    setExtraData(key: string, value: any) {\r\n        this.extraData[key] = value\r\n    }\r\n\r\n    getExtraData(key: string) {\r\n        return this.extraData[key]\r\n    }\r\n\r\n    /**\r\n     * 处理数据更新回调结果\r\n     * @return 返回的数据暂存在对应Component内，需要更新下\r\n     */\r\n    static handleSuccess(result: Array<any>, isLoadMore: boolean, listView: JmListView, hasMore?: boolean, scrollToTop = true) {\r\n        if (!listView.node.isValid) return\r\n        let data = listView.getData()\r\n        let newData: Array<any>\r\n        if (isLoadMore) {\r\n            newData = data.concat(result)\r\n        } else if (Array.isArray(result)) {\r\n            newData = result\r\n        }\r\n        listView.setData(newData)\r\n        if (isLoadMore) {\r\n            listView.onLoadComplete(hasMore == undefined ? result.length > 0 : hasMore)\r\n        } else {\r\n            listView.onRefreshComplete(scrollToTop)\r\n        }\r\n    }\r\n\r\n    static handleFailure(listView: JmListView, loadMore: boolean, scrollToTop = true) {\r\n        if (!listView.node.isValid) return\r\n        if (loadMore) {\r\n            listView.onLoadComplete(true)\r\n        } else {\r\n            listView.onRefreshComplete(scrollToTop)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport enum Orientation {\r\n    HORIZONTAL,\r\n    VERTICAL\r\n}","import JmListView from \"./JmListView\";\r\nimport JmHorizontalListView from \"./JmHorizontalListView\";\r\nimport { Component, EventTouch, Node, Vec2, _decorator } from \"cc\";\r\nimport BaseView from \"db://app/base/BaseView\";\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass\r\nexport default class JmListViewItem extends BaseView {\r\n    protected itemId: number\r\n    protected listView: JmListView | JmHorizontalListView;\r\n    protected performClick = false\r\n    private startPos: Vec2//记录Touch事件开始时的位置\r\n\r\n    protected onLoad() {\r\n        super.onLoad && super.onLoad()\r\n    }\r\n\r\n    protected onEnable() {\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchEvent, this)\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchEvent, this)\r\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEvent, this)\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.node.off(Node.EventType.TOUCH_START, this.onTouchEvent, this)\r\n        this.node.off(Node.EventType.TOUCH_MOVE, this.onTouchEvent, this)\r\n        this.node.off(Node.EventType.TOUCH_END, this.onTouchEvent, this)\r\n    }\r\n\r\n    onTouchEvent(event: EventTouch) {\r\n        switch (event.getType()) {\r\n            case Node.EventType.TOUCH_START:\r\n                // JmLobbyLog.Log(\"TOUCH_START\")\r\n                this.performClick = true\r\n                this.startPos = event.getLocation()\r\n                break\r\n            case Node.EventType.TOUCH_MOVE:\r\n                // JmLobbyLog.Log(\"TOUCH_MOVE\")\r\n                let pos = event.getLocation()\r\n                let dstx = Math.abs(this.startPos.x - pos.x)\r\n                let dsty = Math.abs(this.startPos.y - pos.y)\r\n                if (dstx > 5 || dsty > 5) {//有的机型就算没有移动也会直接调用一次TOUCH_MOVE事件，此处将小距离移动忽略不计\r\n                    this.performClick = false\r\n                }\r\n\r\n                // let dst: Vec2 = this.startPos.sub(pos)\r\n                // if (dst.len() > 5) {//有的机型就算没有移动也会直接调用一次TOUCH_MOVE事件，此处将小距离移动忽略不计\r\n                //     this.performClick = false\r\n                // }\r\n                break\r\n            case Node.EventType.TOUCH_END:\r\n                if (this.performClick) {\r\n                    this.onItemClick(event)\r\n                }\r\n                this.performClick = false\r\n                break\r\n        }\r\n    }\r\n\r\n    onItemClick(event?: EventTouch) {\r\n        // JmLobbyLog.Log(\"ItemClicked, itemId-->\" + this.itemId)\r\n    }\r\n\r\n    updateItem(id: number, data: any, listView: JmListView | JmHorizontalListView) {\r\n        this.itemId = id\r\n        this.listView = listView\r\n        //子类实现\r\n    }\r\n\r\n    getItemHeight(): number {\r\n        return undefined\r\n    }\r\n\r\n    getItemWidth(): number {\r\n        return undefined\r\n    }\r\n\r\n}","import { Component, instantiate, isValid, NodePool, Prefab } from \"cc\";\n\nexport class JmNodePool extends NodePool {\n    private _cellPfb: Prefab;\n    get cellPfb() {\n        return this._cellPfb;\n    }\n\n    set cellPfb(value) {\n        this._cellPfb = value;\n    }\n}\n\nexport default class JmNodePoolMgr {\n    private static _nodePoolData: Map<string, JmNodePool> = new Map<string, JmNodePool>();\n\n    static IdentityCellPool: string = \"IDENTITY_CELL_POOL\";\n\n    /**初始化缓存池\n     * */\n    static InitNodePool(poolKey: string, cellPfb: Prefab, poolHandlerComp?: string) {\n        this.DestroyPool(poolKey);\n\n        let pool = new JmNodePool(poolHandlerComp);\n        pool.cellPfb = cellPfb;\n        this._nodePoolData.set(poolKey, pool);\n    }\n\n    static GetCell(poolKey: string) {\n        let pool = this.GetPool(poolKey);\n        if (pool) {\n            let node;\n            if (pool.size()) {\n                node = pool.get();\n            } else {\n                node = instantiate(pool.cellPfb);\n            }\n            node.active = true;\n            return node;\n        }\n    }\n\n    static PutCell(poolKey: string, node: any) {\n        let pool = this.GetPool(poolKey);\n        if (pool) {\n            node.active = false;\n            pool.put(node);\n        }\n    }\n\n    static DestroyPool(poolKey: string) {\n        let pool = this._nodePoolData.get(poolKey);\n        if (pool) {\n            for (let i = 0; i < pool.size(); i++) {\n                let node = pool.get();\n                if (isValid(node, true)) {\n                    node.active = false;\n                    node.destroy();\n                }\n            }\n            pool.clear();\n            this._nodePoolData.delete(poolKey);\n        }\n    }\n\n    static GetPool(poolKey: string) {\n        let pool = this._nodePoolData.get(poolKey);\n        if (pool) {\n            return pool;\n        } else {\n            console.log(`JmNodePoolMgr.GetPool!The pool is null! please instance it! ${poolKey}`);\n        }\n    }\n}\n\n\n","import { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\nimport { _decorator, Component, Sprite, Label } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class JmRefreshFooter extends Component {\r\n\r\n    @property(Label)\r\n    loading: Label = null;\r\n    @property(Sprite)\r\n    emptyImg: Sprite = null;\r\n\r\n    setState(state: RefreshOrLoadState) {\r\n        switch (state) {\r\n            case RefreshOrLoadState.NONE:\r\n            case RefreshOrLoadState.EMPTY:\r\n                this.loading.node.active = false\r\n                this.emptyImg.node.active = false\r\n                break;\r\n            case RefreshOrLoadState.READY_TO_REFRESH:\r\n                break;\r\n            case RefreshOrLoadState.REFRESHING:\r\n                this.loading.node.active = true\r\n                this.loading.string = \"加载数据中\"\r\n                this.emptyImg.node.active = false\r\n                break;\r\n            case RefreshOrLoadState.COMPLETE:\r\n                this.emptyImg.node.active = true\r\n                this.loading.node.active = false\r\n                break\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}\r\n","import { Component, Skeleton, _decorator } from \"cc\";\r\nimport { RefreshOrLoadState } from \"./RefreshOrLoadState\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class JmRefreshHeader extends Component {\r\n    @property(Skeleton)\r\n    refreshSpine: Skeleton = null\r\n\r\n    private _state = RefreshOrLoadState.NONE\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    onScrollOffset(offsetY: number) {\r\n        if (offsetY < -40) {\r\n            offsetY = -40\r\n        }\r\n        this.refreshSpine.node.y = offsetY - 50\r\n    }\r\n\r\n    setState(state: RefreshOrLoadState) {\r\n        this._state = state\r\n        // switch (state) {\r\n        //     case RefreshOrLoadState.NONE:\r\n        //         this.refreshSpine.setAnimation(0, \"refresh_1\", false)\r\n        //         break;\r\n        //     case RefreshOrLoadState.READY_TO_REFRESH:\r\n        //         this.refreshSpine.setAnimation(0, \"refresh_1\", false)\r\n        //         break;\r\n        //     case RefreshOrLoadState.REFRESHING:\r\n        //         this.refreshSpine.setAnimation(0, \"refresh_2\", true)\r\n        //         break;\r\n        // }\r\n    }\r\n\r\n}\r\n","/**\n * 房间数据类\n * */\nimport BaseData from \"./BaseData\";\n\nexport default class JmRoomData extends BaseData {\n    private _roomData: any;\n    constructor() {\n        super();\n        this._roomData = {};\n    }\n\n    initRoomData(roomData: object) {\n        this.updateRoomData(roomData);\n    }\n\n    updateRoomProperty(k: string, v: any) {\n        this._roomData[k] = v;\n    }\n\n    updateRoomData(roomData: any) {\n        if (this._roomData == null) {\n            this._roomData = {};\n        }\n        for (let k in roomData) {\n            this.updateRoomProperty(k, roomData[k]);\n        }\n    }\n\n    getIdentities() {\n        return this._roomData[\"identities\"];\n    }\n    getIdentity() {\n        return this._roomData[\"identity\"];\n    }\n\n    getRoomNum() {\n        return this._roomData[\"roomNum\"];\n    }\n\n    getSeats() {\n        return this._roomData[\"seats\"];\n    }\n}\n\n\n","/**\r\n * 游戏房间数据管理类,管理房间列表信息，所有显示的房间数据都在此显示，不显示的房间信息不在这里\r\n * */\r\nimport JmRoomData from \"../data/JmRoomData\";\r\nexport default class JmRoomDataMgr {\r\n    private static _roomsData: Map<string, JmRoomData> = new Map<string, JmRoomData>();\r\n    private static _roomsKeys: Array<string> = [];\r\n    private static _joinRoomsList: Array<string> = []; //玩家加入的房间的堆栈列表\r\n    private static _offset: number = 0;\r\n    private static _currentRoomData: object;\r\n    private static _currentRoomKey: number;\r\n    private static currentType: number = 0;\r\n    private static _roomCfg: Map<number, number> = new Map<number, number>();\r\n    private static _roomCount: number = 0;\r\n    private static _gameState: number = 2;//0已发牌 1过期不能领身份 2未发牌\r\n    private static _isDay: boolean = true;\r\n    private static _isOwner: boolean = false;\r\n    private static _loadKey: boolean = true;\r\n    /**初始化房间列表信息\r\n     * */\r\n    static OnReceiveServerData(serverData:any) {\r\n        this.InitRoomsData(serverData);\r\n    }\r\n\r\n    static InitRoomsData(data: Array<object>) {\r\n        for (let i = 0, len = data.length; i < len; i++) {\r\n            this.InitRoomData(data[i]);\r\n        }\r\n    }\r\n    \r\n    static InitRoomData(data: any) {\r\n        let roomKey = data[\"recordId\"];\r\n        if (roomKey) {\r\n            let room = this.GetRoom(roomKey);\r\n            room.initRoomData(data);\r\n        }\r\n    }\r\n\r\n    static CreateRoom(roomData: object) {\r\n        this.InitCurrentRoom(roomData);\r\n    }\r\n\r\n    static CleanRooms() {\r\n        this._offset = 0;\r\n        this._roomsData.clear();\r\n        this._roomCfg.clear();\r\n        this._roomsKeys = [];\r\n        this._gameState = 2\r\n    }\r\n\r\n    static CleanRoom(roomKey: string) {\r\n        let room = this._roomsData.get(roomKey);\r\n        if (room) {\r\n            room = null;\r\n            this._roomsData.delete(roomKey);\r\n        }\r\n    }\r\n\r\n    static GetOffSet() {\r\n        return this._offset || 0;\r\n    }\r\n\r\n    static GetRoomByRoomKey(roomKey:any) {\r\n        let room = this._roomsData.get(roomKey);\r\n        if (room) {\r\n            return room;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static GetRoomNum() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getRoomNum();\r\n    }\r\n    \r\n    static GetRoomIdentities() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getIdentities();\r\n    }\r\n\r\n    static GetRoomIdentity() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getIdentity();\r\n    }\r\n\r\n    static GetRoomSeats() {\r\n        let roomData = this.GetRoomByRoomKey(this._currentRoomKey);\r\n        return roomData.getSeats();\r\n    }\r\n\r\n    static InitCurrentRoomProto(roomData: any) {\r\n        let roomKey = roomData[\"recordId\"]\r\n        this._roomCount = roomData[\"players\"]\r\n        let room = this.GetRoom(roomKey);\r\n        room.initRoomData(roomData);\r\n        this._gameState = roomData[\"status\"]\r\n        this._currentRoomData = roomData;\r\n        this._currentRoomKey = roomKey;\r\n        this._joinRoomsList.unshift(roomData[\"roomNum\"]);\r\n    }\r\n\r\n    //当前用户所在房间的房间信息\r\n    static InitCurrentRoom(roomData: any) {\r\n        console.log(`JmRoomDataMgr.InitCurrentRoom ${JSON.stringify(roomData)}`);\r\n\r\n        let roomKey = roomData[\"recordId\"]\r\n        this._isOwner = roomData[\"judge\"]\r\n        this._roomCount = roomData[\"players\"]\r\n        let room = this.GetRoom(roomKey);\r\n        room.initRoomData(roomData);\r\n        this._gameState = roomData[\"status\"]\r\n        this._currentRoomData = roomData;\r\n        this._currentRoomKey = roomKey;\r\n        this._joinRoomsList.unshift(roomData[\"roomNum\"]);\r\n    }\r\n\r\n    static GetRoom(roomKey: string) {\r\n        let room = this._roomsData.get(roomKey);\r\n        if (!room) {\r\n            room = new JmRoomData();\r\n            this._roomsData.set(roomKey, room);\r\n            this._roomsKeys.push(roomKey);\r\n        }\r\n        return room;\r\n    }\r\n\r\n    static GetCurrentRoomInfo() {\r\n        return this._currentRoomData;\r\n    }\r\n\r\n    static GetCurrentRoomKey() {\r\n        return this._currentRoomKey || 0;\r\n    }\r\n\r\n\r\n    static SetCurrentNullRoomKey() {\r\n        this._currentRoomKey = null;\r\n    }\r\n\r\n    static SetRoomDayOrNight(currentType:number) {\r\n        this.currentType = currentType;\r\n    }\r\n    static GetRoomDayOrNight() {\r\n        return this.currentType;\r\n    }\r\n    static delRoomCfg(key:any) {\r\n        this._roomCfg.delete(key);\r\n    }\r\n    static setRoomCfg(key:any, vule:any) {\r\n        this._roomCfg.set(key, vule);\r\n    }\r\n    static getRoomCfg() {\r\n        return this._roomCfg;\r\n    }\r\n\r\n    static getRoomCount() {\r\n        return this._roomCount\r\n    }\r\n    static setRoomCount(count:number) {\r\n        this._roomCount = count\r\n    }\r\n\r\n    static setGameState(state:number) {\r\n        this._gameState = state\r\n    }\r\n    static getGameState() {\r\n        return this._gameState\r\n    }\r\n\r\n    static setGameDay(bol:boolean) {\r\n        this._isDay = bol\r\n    }\r\n    static getGameDay() {\r\n        return this._isDay;\r\n    }\r\n\r\n    static setOwner(bol:boolean) {\r\n        this._isOwner = bol\r\n    }\r\n    static isOwner() {\r\n        return this._isOwner\r\n    }\r\n    static getLoadKey() {\r\n        return this._loadKey\r\n    }\r\n    static setLoadKey(bol:boolean) {\r\n        this._loadKey = bol\r\n    }\r\n}\r\n\r\n\r\n","import { Asset, AssetManager, Font, ImageAsset, JsonAsset, Label, SceneAsset, Sprite, SpriteFrame, Texture2D, TextureCube, _decorator, assetManager, isValid, path, sp } from 'cc';\r\nimport { MINIGAME } from 'cc/env';\r\nimport BaseManager from '../../base/BaseManager';\r\nimport Core from '../../Core';\r\nconst { ccclass } = _decorator;\r\nconst REGEX = /^https?:\\/\\/.*/;\r\n\r\nclass Command {\r\n    private static cache: Command[] = [];\r\n\r\n    static create(onComplete: (items: unknown) => void, onProgress: (finish: number, total: number, item: AssetManager.RequestItem) => void = null) {\r\n        const command = Command.cache.pop() || new Command();\r\n        onProgress && command.onProgress.push(onProgress);\r\n        onComplete && command.onComplete.push(onComplete);\r\n        return command;\r\n    }\r\n\r\n    static put(command: Command) {\r\n        command.onProgress.length = 0;\r\n        command.onComplete.length = 0;\r\n        Command.cache.push(command);\r\n    }\r\n\r\n    onProgress: Array<(finish: number, total: number, item: AssetManager.RequestItem) => void> = [];\r\n    onComplete: Array<(items: unknown) => void> = [];\r\n\r\n    private constructor() { }\r\n}\r\n\r\nclass Loader {\r\n    private assetMap = new Map<string, Asset>();\r\n    private loadingMap = new Map<string, Command>();\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preload(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: AssetManager.RequestItem[] | null) => void }) {\r\n        return Core.inst.manager.loader.preload(params);\r\n    }\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preloadDir(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: AssetManager.RequestItem[] | null) => void }) {\r\n        return Core.inst.manager.loader.preloadDir(params);\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundel名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public load<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: InstanceType<T> | null) => void }) {\r\n        const key = `${params.bundle || 'resources'}-${params.type.name}-${params.path}-${params.version || ''}`;\r\n\r\n        if (this.loadingMap.has(key)) {\r\n            const command = this.loadingMap.get(key);\r\n            params.onProgress && command.onProgress.push(params.onProgress);\r\n            params.onComplete && command.onComplete.push(params.onComplete);\r\n            return;\r\n        }\r\n\r\n        // 加载中\r\n        const command = Command.create(params.onComplete, params.onProgress);\r\n        this.loadingMap.set(key, command);\r\n\r\n        // 有缓存\r\n        if (this.assetMap.has(key)) {\r\n            const asset = this.assetMap.get(key);\r\n            // 有缓存的情况下不触发onProgress回调\r\n            setTimeout(() => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) return;\r\n                this.loadingMap.delete(key);\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }, 0);\r\n            return;\r\n        }\r\n\r\n        Core.inst.manager.loader.load({\r\n            ...params,\r\n            onProgress: (finish, total, item) => {\r\n                if (!this.loadingMap.has(key)) return;\r\n                command.onProgress.forEach(cb => cb(finish, total, item));\r\n            },\r\n            onComplete: (asset) => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) {\r\n                    asset.addRef();\r\n                    asset.decRef();\r\n                    return;\r\n                }\r\n                this.loadingMap.delete(key);\r\n                if (asset) {\r\n                    asset.addRef();\r\n                    this.assetMap.set(key, asset);\r\n                }\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T> | null> {\r\n        return new Promise((resolve) => {\r\n            this.load({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundel名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDir<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: InstanceType<T>[] | null) => void }) {\r\n        const key = `${params.bundle || 'resources'}-${params.type.name}-${params.path}-${params.version || ''}:`;\r\n\r\n        if (this.loadingMap.has(key)) {\r\n            const command = this.loadingMap.get(key);\r\n            params.onProgress && command.onProgress.push(params.onProgress);\r\n            params.onComplete && command.onComplete.push(params.onComplete);\r\n            return;\r\n        }\r\n\r\n        // 加载中\r\n        const command = Command.create(params.onComplete, params.onProgress);\r\n        this.loadingMap.set(key, command);\r\n\r\n        const results = [] as InstanceType<T>[];\r\n        this.assetMap.forEach((asset, path) => {\r\n            if (path.indexOf(key) === 0) {\r\n                results.push(asset as InstanceType<T>);\r\n            }\r\n        });\r\n\r\n        // 有缓存\r\n        if (results.length) {\r\n            // 有缓存的情况下不触发onProgress回调\r\n            setTimeout(() => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) return;\r\n                this.loadingMap.delete(key);\r\n                command.onComplete.forEach(cb => cb(results));\r\n                Command.put(command);\r\n            }, 0);\r\n            return;\r\n        }\r\n\r\n        Core.inst.manager.loader.loadDir({\r\n            ...params,\r\n            onProgress: (finish, total, item) => {\r\n                if (!this.loadingMap.has(key)) return;\r\n                command.onProgress.forEach(cb => cb(finish, total, item));\r\n            },\r\n            onComplete: (assets) => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(key)) {\r\n                    assets?.forEach((asset) => {\r\n                        asset.addRef();\r\n                        asset.decRef();\r\n                    });\r\n                    return;\r\n                }\r\n                this.loadingMap.delete(key);\r\n                assets?.forEach((asset) => {\r\n                    asset.addRef();\r\n                    this.assetMap.set(key + asset.uuid, asset);\r\n                });\r\n                command.onComplete.forEach(cb => cb(results));\r\n                Command.put(command);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDirAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T>[] | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadDir({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * loadRemote({url:'', ext:'.png', onComplete:(result){ }})\r\n     */\r\n    public loadRemote({ url, ext, onComplete }: { url: string, ext?: string, onComplete?: (result: Asset | null) => void }) {\r\n        if (this.loadingMap.has(url)) {\r\n            const command = this.loadingMap.get(url);\r\n            onComplete && command.onComplete.push(onComplete);\r\n            return;\r\n        }\r\n\r\n        // 加载中\r\n        const command = Command.create(onComplete);\r\n        this.loadingMap.set(url, command);\r\n\r\n        // 有缓存\r\n        if (this.assetMap.has(url)) {\r\n            const asset = this.assetMap.get(url);\r\n            // 有缓存的情况下不触发onProgress回调\r\n            setTimeout(() => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(url)) return;\r\n                this.loadingMap.delete(url);\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }, 0);\r\n            return;\r\n        }\r\n\r\n        Core.inst.manager.loader.loadRemote({\r\n            url, ext,\r\n            onComplete: (asset) => {\r\n                // 加载无效\r\n                if (!this.loadingMap.has(url)) {\r\n                    asset.addRef();\r\n                    asset.decRef();\r\n                    return;\r\n                }\r\n                this.loadingMap.delete(url);\r\n                if (asset) {\r\n                    asset.addRef();\r\n                    this.assetMap.set(url, asset);\r\n                }\r\n                command.onComplete.forEach(cb => cb(asset));\r\n                Command.put(command);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * await loadRemoteAsync({url:'', ext:'.png'})\r\n     */\r\n    public loadRemoteAsync(params: { url: string, ext?: string }): Promise<Asset | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadRemote({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置字体资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setFont({target:label, path:'font/num', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setFont({target:label, url:'http://img/a/font',ext:'.ttf', onComplete:(succ)=>{}})\r\n     */\r\n    public setFont(params: { target: Label, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (font: Font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: Font,\r\n                onComplete: (font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置Spine资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSpine({target:spine, path:'spine/role', bundle:'resources', onComplete:(succ)=>{}})\r\n     */\r\n    public setSpine(params: { target: sp.Skeleton, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        this.load({\r\n            path: params.path,\r\n            bundle: params.bundle,\r\n            type: sp.SkeletonData,\r\n            onComplete: (skeletonData) => {\r\n                if (!skeletonData || !isValid(params.target)) {\r\n                    params.onFail && params.onFail();\r\n                    params.onComplete && params.onComplete(false);\r\n                    return;\r\n                }\r\n                params.target.skeletonData = skeletonData;\r\n                params.onSuccess && params.onSuccess();\r\n                params.onComplete && params.onComplete(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置图片资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSprite({target:sprite, path:'img/a/spriteFrame', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setSprite({target:sprite, url:'http://img/a/avatar',ext:'.png', onComplete:(succ)=>{}})\r\n     */\r\n    public setSprite(params: { target: Sprite, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (imageAsset: ImageAsset) => {\r\n                    if (!imageAsset || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    const spriteFrame = SpriteFrame.createWithImage(imageAsset);\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: SpriteFrame,\r\n                onComplete: (spriteFrame) => {\r\n                    if (!spriteFrame || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 释放所有资源\r\n     */\r\n    public releaseAll() {\r\n        const assetList: Asset[] = [];\r\n        this.assetMap.forEach(asset => assetList.push(asset));\r\n        this.assetMap.clear();\r\n        this.loadingMap.clear();\r\n        // 延迟一秒释放资源\r\n        setTimeout(() => {\r\n            assetList.forEach(asset => asset.decRef());\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n@ccclass('LoaderManager')\r\nexport default class LoaderManager extends BaseManager {\r\n    /**\r\n     * `Loader`是基于`LoaderManager`的封装，不同的是，`Loader`是基于单个`Loader实例`对资源进行`自动引用计数`管理。（LoaderManager本质是对cc.assetManager的封装，提供了更方便的接口，都是基于Asset Bundle管理资源，并且资源的引用计数需要开发者手动管理）\r\n     * @example\r\n     * // 创建Loader实例\r\n     * const loader = new LoaderManager.Loader();\r\n     * // 加载资源\r\n     * loader.load({path:'img/a/spriteFrame', bundle:'resources', type:SpriteFrame, onComplete:(spriteFrame)=>{}})\r\n     * // 加载远程图片资源\r\n     * loader.loadRemote({url:'http://img/a/avatar',ext:'.png', onComplete:(imageAsset)=>{}})\r\n     * // 释放所有资源\r\n     * loader.releaseAll();\r\n     */\r\n    static Loader = Loader;\r\n\r\n    private handle(handle: string, { bundle, version, path, type, onProgress, onComplete }: { bundle?: string, version?: string, path: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (result: unknown | null) => void }) {\r\n        if (!handle) {\r\n            this.error('handle is empty');\r\n            return onComplete && onComplete(null);\r\n        }\r\n        if (!path) {\r\n            this.error(`${handle} fail. path is empty`);\r\n            return onComplete && onComplete(null);\r\n        }\r\n        if (!bundle) bundle = 'resources';\r\n\r\n        const args: any[] = [path];\r\n        if (type) args.push(type);\r\n        if (onProgress) args.push(onProgress);\r\n        args.push((err: string, res: any) => {\r\n            if (err) {\r\n                this.error(`${handle} \"${path}\" fail`, err);\r\n                if (type === SpriteFrame && path.slice(-12) !== '/spriteFrame') {\r\n                    this.warn(`加载SpriteFrame类型的资源, 路径可能需要以/spriteFrame结尾, 如: 「${path}」 -> 「${path}/spriteFrame」`);\r\n                } else if (type === Texture2D && path.slice(-8) !== '/texture') {\r\n                    this.warn(`加载Texture2D类型的资源, 路径可能需要以/texture结尾, 如: 「${path}」 -> 「${path}/texture」`);\r\n                } else if (type === TextureCube && path.slice(-12) !== '/textureCube') {\r\n                    this.warn(`加载TextureCube类型的资源, 路径可能需要以/textureCube结尾, 如: 「${path}」 -> 「${path}/textureCube」`);\r\n                }\r\n                onComplete && onComplete(null);\r\n            } else {\r\n                onComplete && onComplete(res);\r\n            }\r\n        });\r\n\r\n        this.loadBundle({\r\n            bundle, version,\r\n            onComplete(bundle) {\r\n                if (!bundle) return onComplete && onComplete(null);\r\n                bundle[handle](args[0], args[1], args[2], args[3]);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preload(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: AssetManager.RequestItem[] | null) => void }) {\r\n        if (SceneAsset === params.type as typeof Asset) {\r\n            this.handle('preloadScene', { path: params.path, bundle: params.bundle, version: params.version, onProgress: params.onProgress, onComplete: params.onComplete });\r\n        } else {\r\n            this.handle('preload', params);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public preloadDir(params: { path: string, bundle?: string, version?: string, type?: typeof Asset, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: AssetManager.RequestItem[] | null) => void }) {\r\n        this.handle('preloadDir', params);\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public load<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (item: InstanceType<T> | null) => void }) {\r\n        if (SceneAsset === params.type as typeof Asset) {\r\n            this.handle('loadScene', { path: params.path, bundle: params.bundle, version: params.version, onProgress: params.onProgress, onComplete: params.onComplete });\r\n        } else {\r\n            this.handle('load', params);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T> | null> {\r\n        return new Promise((resolve) => {\r\n            this.load({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDir<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void, onComplete?: (items: InstanceType<T>[] | null) => void }) {\r\n        this.handle('loadDir', params);\r\n    }\r\n\r\n    /**\r\n     * 加载bundle下的资源\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public loadDirAsync<T extends typeof Asset>(params: { path: string, bundle?: string, version?: string, type?: T, onProgress?: (finish: number, total: number, item: AssetManager.RequestItem) => void }): Promise<InstanceType<T>[] | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadDir({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 销毁一个bundle中对应path和type的资源\r\n     * @param params.bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     * @param params.path bundle下的相对路径\r\n     * @param params.type 资源类型\r\n     */\r\n    public release({ path, bundle, type }: { path: string, bundle?: string, type?: typeof Asset }) {\r\n        if (!bundle) bundle = 'resources';\r\n        assetManager.getBundle(bundle)?.release(path, type);\r\n    }\r\n\r\n    /**\r\n     * 销毁一个bundle中所有的资源\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public releaseAll(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        const _bundle = assetManager.getBundle(bundle);\r\n        if (!_bundle) return;\r\n        // 只释放自己内部的资源，依赖的资源只减少引用计数\r\n        _bundle.getDirWithPath('/', Asset).forEach((asset) => {\r\n            _bundle.release(asset.path, asset.ctor);\r\n        });\r\n        // cocos提供的方法会将依赖的资源也卸载(这个设计很奇怪)\r\n        // _bundle?.releaseAll();\r\n    }\r\n\r\n    /**\r\n     * 销毁一个bundle中未使用的资源\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public releaseUnused(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        //@ts-ignore\r\n        assetManager.getBundle(bundle)?.releaseUnusedAssets();\r\n    }\r\n\r\n    /**\r\n     * 加载一个bundle\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public loadBundle({ bundle, version, onComplete }: { bundle?: string, version?: string, onComplete?: (bundle: AssetManager.Bundle | null) => any }) {\r\n        if (!bundle) bundle = 'resources';\r\n\r\n        if (MINIGAME) {\r\n            if (REGEX.test(bundle)) {\r\n                this.warn('小游戏环境下只支持加载远程Bundle的资源数据, 不会加载脚本');\r\n                this.reloadBundle({ bundle, version, onComplete });\r\n                return;\r\n            }\r\n            if (version && assetManager.downloader.bundleVers[bundle] !== version) {\r\n                this.warn('小游戏环境下只支持更新Bundle的远程资源数据, 不会更新脚本');\r\n                // 先加载本地bundle运行脚本\r\n                assetManager.loadBundle(bundle, (err: Error, b: AssetManager.Bundle) => {\r\n                    if (err || !b) return onComplete?.(null);\r\n                    // 然后再走重载逻辑更新资源\r\n                    this.reloadBundle({ bundle, version, onComplete });\r\n                });\r\n            } else {\r\n                assetManager.loadBundle(bundle, (err: Error, bundle: AssetManager.Bundle) => {\r\n                    onComplete && onComplete(err ? null : bundle);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (version) {\r\n            assetManager.loadBundle(bundle, { version }, (err: Error, bundle: AssetManager.Bundle) => {\r\n                onComplete && onComplete(err ? null : bundle);\r\n            });\r\n        } else {\r\n            assetManager.loadBundle(bundle, (err: Error, bundle: AssetManager.Bundle) => {\r\n                onComplete && onComplete(err ? null : bundle);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载一个bundle\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public loadBundleAsync(params: { bundle?: string, version?: string }): Promise<AssetManager.Bundle | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadBundle({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取一个已经加载的bundle\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public getBundle(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        return assetManager.getBundle(bundle);\r\n    }\r\n\r\n    /**\r\n     * 移除一个已经加载的bundle\r\n     * @param bundle 默认为resources，如果是远程bundle，则使用url末位作为bundle名\r\n     */\r\n    public removeBundle(bundle?: string) {\r\n        if (!bundle) bundle = 'resources';\r\n        const b = assetManager.getBundle(bundle);\r\n        if (b) assetManager.removeBundle(b);\r\n    }\r\n\r\n    /**\r\n     * 重载一个bundle(只重载资源列表)\r\n     * - 只有远程bundle支持重载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public reloadBundle({ bundle, version, onComplete }: { bundle?: string, version?: string, onComplete?: (bundle: AssetManager.Bundle | null) => any }) {\r\n        if (!bundle) bundle = 'resources';\r\n\r\n        let baseUrl = '';\r\n        let configUrl = '';\r\n\r\n        if (REGEX.test(bundle)) {\r\n            baseUrl = bundle;\r\n            const suffix = version ? `${version}.` : '';\r\n            configUrl = `${baseUrl}config.${suffix}json`;\r\n        }\r\n        else {\r\n            baseUrl = `${assetManager.downloader.remoteServerAddress}remote/${bundle}/`;\r\n            const suffix = version ? `${version}.` : '';\r\n            configUrl = `${baseUrl}config.${suffix}json`;\r\n        }\r\n\r\n        // 清除可能存在的config缓存\r\n        assetManager.cacheManager?.removeCache(configUrl);\r\n        assetManager.loadRemote(configUrl, (err: Error, data: JsonAsset) => {\r\n            if (err) {\r\n                this.error(`下载Bundle配置失败: ${configUrl}`);\r\n                onComplete?.(null);\r\n                return;\r\n            }\r\n\r\n            this.releaseAll(path.basename(bundle));\r\n            this.removeBundle(path.basename(bundle));\r\n\r\n            const ab = new AssetManager.Bundle();\r\n            const config = data.json as any;\r\n            config.base = baseUrl;\r\n            ab.init(config);\r\n            onComplete?.(ab);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 重载一个bundle(只重载资源列表)\r\n     * - 只有远程bundle支持重载\r\n     * @param params.bundle 默认为resources, 可以是项目中的bundle名，也可以是远程bundle的url(url末位作为bundle名)，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#%E5%8A%A0%E8%BD%BD-asset-bundle\r\n     * @param params.version 远程bundle的版本，参考https://docs.cocos.com/creator/manual/zh/asset/bundle.html#asset-bundle-%E7%9A%84%E7%89%88%E6%9C%AC\r\n     */\r\n    public reloadBundleAsync(params: { bundle?: string, version?: string }): Promise<AssetManager.Bundle | null> {\r\n        return new Promise((resolve) => {\r\n            this.reloadBundle({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * loadRemote({url:'', ext:'.png', onComplete:(result){ }})\r\n     */\r\n    public loadRemote({ url, ext, onComplete }: { url: string, ext?: string, onComplete?: (result: Asset | null) => void }) {\r\n        if (ext) {\r\n            assetManager.loadRemote(url, { ext }, (error, res) => {\r\n                if (error) {\r\n                    this.error(`loadRemote ${url} fail`);\r\n                    return onComplete && onComplete(null);\r\n                }\r\n                onComplete && onComplete(res);\r\n            });\r\n        } else {\r\n            assetManager.loadRemote(url, (error, res) => {\r\n                if (error) {\r\n                    this.error(`loadRemote ${url} fail`);\r\n                    return onComplete && onComplete(null);\r\n                }\r\n                onComplete && onComplete(res);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载远程资源\r\n     * @example\r\n     * await loadRemoteAsync({url:'', ext:'.png'})\r\n     */\r\n    public loadRemoteAsync(params: { url: string, ext?: string }): Promise<Asset | null> {\r\n        return new Promise((resolve) => {\r\n            this.loadRemote({\r\n                ...params,\r\n                onComplete: resolve\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置字体资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setFont({target:label, path:'font/num', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setFont({target:label, url:'http://img/a/font',ext:'.ttf', onComplete:(succ)=>{}})\r\n     */\r\n    public setFont(params: { target: Label, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setFont(params: { target: Label, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (font: Font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: Font,\r\n                onComplete: (font) => {\r\n                    if (!font || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.font = font;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置Spine资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSpine({target:spine, path:'spine/role', bundle:'resources', onComplete:(succ)=>{}})\r\n     */\r\n    public setSpine(params: { target: sp.Skeleton, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        this.load({\r\n            path: params.path,\r\n            bundle: params.bundle,\r\n            type: sp.SkeletonData,\r\n            onComplete: (skeletonData) => {\r\n                if (!skeletonData || !isValid(params.target)) {\r\n                    params.onFail && params.onFail();\r\n                    params.onComplete && params.onComplete(false);\r\n                    return;\r\n                }\r\n                params.target.skeletonData = skeletonData;\r\n                params.onSuccess && params.onSuccess();\r\n                params.onComplete && params.onComplete(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置图片资源\r\n     * @param params.bundle 默认为resources\r\n     * @param params.path bundle下的相对路径\r\n     * \r\n     * @example\r\n     * setSprite({target:sprite, path:'img/a/spriteFrame', bundle:'resources', onComplete:(succ)=>{}})\r\n     * setSprite({target:sprite, url:'http://img/a/avatar',ext:'.png', onComplete:(succ)=>{}})\r\n     */\r\n    public setSprite(params: { target: Sprite, url: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path: string, bundle?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }): void;\r\n    public setSprite(params: { target: Sprite, path?: string, bundle?: string, url?: string, ext?: string, onComplete?: (success: boolean) => any, onSuccess?: () => void, onFail?: () => void }) {\r\n        if (params.url) {\r\n            this.loadRemote({\r\n                url: params.url,\r\n                ext: params.ext,\r\n                onComplete: (imageAsset: ImageAsset) => {\r\n                    if (!imageAsset || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    const spriteFrame = SpriteFrame.createWithImage(imageAsset);\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        } else {\r\n            this.load({\r\n                path: params.path,\r\n                bundle: params.bundle,\r\n                type: SpriteFrame,\r\n                onComplete: (spriteFrame) => {\r\n                    if (!spriteFrame || !isValid(params.target)) {\r\n                        params.onFail && params.onFail();\r\n                        params.onComplete && params.onComplete(false);\r\n                        return;\r\n                    }\r\n                    params.target.spriteFrame = spriteFrame;\r\n                    params.onSuccess && params.onSuccess();\r\n                    params.onComplete && params.onComplete(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { DEV } from 'cc/env';\r\n\r\ninterface ILog {\r\n    (title: string, ...args: any[]): void\r\n}\r\n\r\nfunction empty() { }\r\n\r\n/**\r\n * 日志管理类，用于统一日志输出格式\r\n */\r\nexport class Logger {\r\n    static setting: {\r\n        filter: Array<'log' | 'warn' | 'error'>\r\n    } = {\r\n            filter: ['error', 'log', 'warn']\r\n        };\r\n\r\n    /**\r\n     * 创建日志输出函数\r\n     */\r\n    static create(level: 'log' | 'warn' | 'error', styleColor: string, title: string, titleColor = '#fff') {\r\n        if (this.setting.filter.indexOf(level) == -1) {\r\n            return empty;\r\n        }\r\n\r\n        if (DEV) {\r\n            return window.console[level].bind(window.console,\r\n                '%c %s %c %s ',\r\n                `background:${styleColor}; padding: 2px; border-radius: 5px 0 0 5px; border: 1px solid ${styleColor}; color: ${titleColor}; font-weight: normal;`,\r\n                `${title} ${new Date().toLocaleString()}`,\r\n                `background:#ffffff ; padding: 2px; border-radius: 0 5px 5px 0; border: 1px solid ${styleColor}; color: ${styleColor}; font-weight: normal;`\r\n            );\r\n        }\r\n        return window.console[level].bind(window.console,\r\n            `${title} [${new Date().toLocaleString()}]`\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 用于输出一般信息\r\n     */\r\n    get log() {\r\n        return Logger.create('log', '#6495ed', '[LOG]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出警告信息\r\n     */\r\n\r\n    get warn() {\r\n        return Logger.create('warn', '#ff7f50', '[WARN]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出错误信息\r\n     */\r\n    get error() {\r\n        return Logger.create('error', '#ff4757', '[ERROR]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出调试信息\r\n     */\r\n    get debug() {\r\n        return Logger.create('log', '#ff6347', '[DEBUG]', '#000') as ILog;\r\n    }\r\n\r\n    /**\r\n     * 用于输出成功信息\r\n     */\r\n    get success() {\r\n        return Logger.create('log', '#00ae9d', '[SUCC]', '#000') as ILog;\r\n    }\r\n}\r\n\r\nexport default new Logger();","export enum RefreshOrLoadState {\r\n    NONE,//未加载状态\r\n    READY_TO_REFRESH,//滑动超过阈值，准备加载\r\n    REFRESHING,//正在加载\r\n    COMPLETE,//加载完成\r\n    COMPLETING,//正在执行加载完成动画\r\n    EMPTY, //第一次加载完就没有数据，会直接显示空布局，这时就不要下拉刷新了，也不用显示COMPLETE的文案\r\n}","import SoundManager from '../../extensions/app/assets/manager/sound/SoundManager';\r\nimport UIManager from '../../extensions/app/assets/manager/ui/UIManager';\r\n\r\n// 预加载的UI(符合app.lib.task.createAny规则)\r\nUIManager.setting.preload = ['PageMain'];\r\n// 默认UI, 会在首屏流程后自动show\r\nUIManager.setting.defaultUI = 'PageMain';\r\n// 是否自动适配分辨率策略\r\nUIManager.setting.autoFit = true; // 开启后，会弃用项目设置中的适配策略，并自动根据设备分辨率与设计分辨率计算出新的适配策略\r\n// 弹窗默认遮罩展现动画配置\r\nUIManager.setting.shade = {\r\n    delay: 0,\r\n    begin: 100,\r\n    end: 200,\r\n    speed: 400,\r\n    blur: true\r\n};\r\n\r\n// 预加载的音频(按数组顺序依次预加载)\r\nSoundManager.setting.preload = [];\r\n// 默认音乐, 会在首屏流程后自动播放\r\nSoundManager.setting.defaultMusicName = '';\r\n// 默认音效, 会在Button被点击后播放\r\nSoundManager.setting.defaultEffectName = 'effect/button';","import { AssetManager, AudioClip, Button, Game, _decorator, game, isValid, sys } from 'cc';\r\nimport { IEffectName, IMusicName } from '../../../../../assets/app-builtin/app-admin/executor';\r\nimport Core from '../../Core';\r\nimport BaseManager from '../../base/BaseManager';\r\nimport AudioEngine from './AudioEngine';\r\nconst { ccclass } = _decorator;\r\n\r\ninterface playMusic<T> { name: T, volume?: number, force?: boolean, onPlay?: Function, onError?: Function }\r\ninterface playEffect<T> { name: T, volume?: number, loop?: boolean, interval?: number, onPlay?: (audioID: number) => any, onError?: Function, onEnded?: Function }\r\ninterface playMusicAsync<T> { name: T, volume?: number, force?: boolean }\r\ninterface playEffectAsync<T> { name: T, volume?: number, loop?: boolean, interval?: number, onEnded?: Function }\r\n\r\ninterface playMusicWidthBundle { name: string, bundle: string, volume?: number, force?: boolean, onPlay?: Function, onError?: Function }\r\ninterface playEffectWidthBundle { name: string, bundle: string, volume?: number, loop?: boolean, interval?: number, onPlay?: (audioID: number) => any, onError?: Function, onEnded?: Function }\r\ninterface playMusicWidthBundleAsync { name: string, bundle: string, volume?: number, force?: boolean }\r\ninterface playEffectWidthBundleAsync { name: string, bundle: string, volume?: number, loop?: boolean, interval?: number, onEnded?: Function }\r\n\r\nconst storage = {\r\n    set(key: string, value: any) {\r\n        sys.localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n    get(key: string) {\r\n        const data = sys.localStorage.getItem(key);\r\n        if (data && typeof data === 'string') {\r\n            return JSON.parse(data);\r\n        }\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * 音乐名字枚举\r\n */\r\nconst MusicName: { [key in IMusicName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\n/**\r\n * 音效名字枚举\r\n */\r\nconst EffectName: { [key in IEffectName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\nconst BundleName = 'app-sound';\r\n@ccclass('SoundManager')\r\nexport default class SoundManager<E extends string, M extends string> extends BaseManager {\r\n    /**静态设置 */\r\n    static setting: {\r\n        /**预加载 */\r\n        preload?: (IMusicName | IEffectName)[],\r\n\r\n        /**默认播放的音乐名 */\r\n        defaultMusicName?: IMusicName | '',\r\n        /**默认音乐的音量 */\r\n        defaultMusicVolume?: number,\r\n\r\n        /**默认按钮的音效名 */\r\n        defaultEffectName?: IEffectName | '',\r\n        /**默认按钮音效的音量 */\r\n        defaultEffectVolume?: number\r\n    } = {};\r\n\r\n    /**音乐名字枚举 */\r\n    static MusicName = MusicName;\r\n    /**音效名字枚举 */\r\n    static EffectName = EffectName;\r\n\r\n    private musicMuteCacheKey = 'SoundManager:MusicMute';\r\n    private effectMuteCacheKey = 'SoundManager:EffectMute';\r\n    private musicVolumeScaleCacheKey = 'SoundManager:MusicVolumeScale';\r\n    private effectVolumeScaleCacheKey = 'SoundManager:EffectVolumeScale';\r\n\r\n    private defaultMusicName = '';\r\n    private defaultMusicVolume = 1;\r\n    private defaultEffectName = '';\r\n    private defaultEffectVolume = 1;\r\n\r\n    private audioCache = {};\r\n    private effectInterval: { [key in string]: number } = {};\r\n    private playingMusic = { uuid: '', id: -1, name: '', volume: 1, playing: false, paused: false };\r\n\r\n    protected init(finish: Function) {\r\n        const setting = SoundManager.setting;\r\n\r\n        // 默认音乐\r\n        if (setting.defaultMusicName) this.defaultMusicName = setting.defaultMusicName;\r\n        if (typeof setting.defaultMusicVolume === 'number') this.defaultMusicVolume = setting.defaultMusicVolume;\r\n\r\n        // 默认按钮音效\r\n        if (setting.defaultEffectName) this.defaultEffectName = setting.defaultEffectName;\r\n        if (typeof setting.defaultEffectVolume === 'number') this.defaultEffectVolume = setting.defaultEffectVolume;\r\n\r\n        if (this.musicMuteCacheKey) {\r\n            const musicMute = storage.get(this.musicMuteCacheKey) === true;\r\n            AudioEngine.inst.setMusicMute(musicMute);\r\n        } else {\r\n            this.warn('musicMuteCacheKey不能为空');\r\n        }\r\n        if (this.effectMuteCacheKey) {\r\n            const effectMute = storage.get(this.effectMuteCacheKey) === true;\r\n            AudioEngine.inst.setGlobalEffectsMute(effectMute);\r\n        } else {\r\n            this.warn('effectMuteCacheKey不能为空');\r\n        }\r\n        if (this.musicVolumeScaleCacheKey) {\r\n            const musicVolumeScale = storage.get(this.musicVolumeScaleCacheKey);\r\n            if (typeof musicVolumeScale === 'number') AudioEngine.inst.setMusicVolumeScale(musicVolumeScale);\r\n        } else {\r\n            this.warn('musicVolumeScaleCacheKey不能为空');\r\n        }\r\n        if (this.effectVolumeScaleCacheKey) {\r\n            const effectVolumeScale = storage.get(this.effectVolumeScaleCacheKey);\r\n            if (typeof effectVolumeScale === 'number') AudioEngine.inst.setGlobalEffectsVolumeScale(effectVolumeScale);\r\n        } else {\r\n            this.warn('effectVolumeScaleCacheKey不能为空');\r\n        }\r\n\r\n        super.init(finish);\r\n\r\n        // 预加载\r\n        setting.preload?.forEach((path: string) => {\r\n            Core.inst.manager.loader.preload({\r\n                bundle: BundleName,\r\n                type: AudioClip,\r\n                path: path\r\n            });\r\n        });\r\n    }\r\n\r\n    protected onLoad() {\r\n        game.on(Game.EVENT_HIDE, function () {\r\n            AudioEngine.inst.pauseAll();\r\n        });\r\n        game.on(Game.EVENT_SHOW, function () {\r\n            AudioEngine.inst.resumeAll();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 预加载声音资源\r\n     * @param name sound路径\r\n     * @param bundle Bundle名，默认为app-sound\r\n     */\r\n    public preload(name: string, bundle: string, complete?: (item: AssetManager.RequestItem[] | null) => any): void;\r\n    public preload(name: (E | M), complete?: (item: AssetManager.RequestItem[] | null) => any): void;\r\n    public preload(name: string, ...args: any[]) {\r\n        const bundleName = (args.length >= 1\r\n            && (typeof args[0] === 'string')\r\n            ? (args[0] || BundleName)\r\n            : BundleName\r\n        ) as string;\r\n        const complete = (args.length >= 1\r\n            && (args[args.length - 1] instanceof Function)\r\n            ? args[args.length - 1]\r\n            : null\r\n        ) as (item: AssetManager.RequestItem[] | null) => any;\r\n\r\n        if (!name) {\r\n            this.error('preload', 'fail');\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (name.indexOf('effect') !== 0 && name.indexOf('music') !== 0) {\r\n            this.error('preload', 'fail', name);\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 远程加载\r\n        Core.inst.manager.loader.preload({\r\n            bundle: bundleName,\r\n            path: name,\r\n            type: AudioClip,\r\n            onComplete: complete\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载声音资源\r\n     * @param name sound路径\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param progress 加载进度回调\r\n     * @param complete 加载完成回调\r\n     */\r\n    public load(name: string, bundle: string): void;\r\n    public load(name: string, bundle: string, complete: (result: AudioClip | null) => any): void;\r\n    public load(name: string, bundle: string, progress: (finish: number, total: number, item: AssetManager.RequestItem) => void, complete: (result: AudioClip | null) => any): void;\r\n    public load(name: (E | M)): void;\r\n    public load(name: (E | M), complete: (result: AudioClip | null) => any): void;\r\n    public load(name: (E | M), progress: (finish: number, total: number, item: AssetManager.RequestItem) => void, complete: (result: AudioClip | null) => any): void;\r\n    public load(name: string, ...args: any[]): void {\r\n        const bundleName = (args.length >= 1\r\n            && (typeof args[0] === 'string')\r\n            ? (args[0] || BundleName)\r\n            : BundleName\r\n        ) as string;\r\n        const progress = (args.length >= 2\r\n            && (args[args.length - 1] instanceof Function)\r\n            && (args[args.length - 2] instanceof Function)\r\n            ? args[args.length - 2]\r\n            : null\r\n        ) as (finish: number, total: number, item: AssetManager.RequestItem) => void;\r\n        const complete = (args.length >= 1\r\n            && (args[args.length - 1] instanceof Function)\r\n            ? args[args.length - 1]\r\n            : null\r\n        ) as (result: AudioClip | null) => any;\r\n\r\n        if (!name) {\r\n            this.error('load', 'fail');\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        // 判断有无缓存\r\n        const audio = this.audioCache[soundName];\r\n        if (audio) {\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(audio);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 远程加载\r\n        Core.inst.manager.loader.load({\r\n            path: name,\r\n            bundle: bundleName,\r\n            type: AudioClip,\r\n            onProgress: progress,\r\n            onComplete: (audioClip) => {\r\n                if (!isValid(this)) return;\r\n                if (audioClip) {\r\n                    this.audioCache[soundName] = audioClip;\r\n                    complete && complete(audioClip);\r\n                } else {\r\n                    complete && complete(null);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源\r\n     * @param name 声音路径\r\n     * @param bundle Bundle名，默认为app-sound\r\n     */\r\n    public release(name: string, bundle: string): void;\r\n    public release(name: E | M): void;\r\n    public release(name: string, bundle?: string) {\r\n        const bundleName = bundle || BundleName;\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        delete this.audioCache[soundName];\r\n        Core.inst.manager.loader.release({ bundle: bundleName, path: name, type: AudioClip });\r\n    }\r\n\r\n    /**\r\n     * 播放默认音乐\r\n     */\r\n    public playDefaultMusic(onPlay?: Function) {\r\n        if (this.defaultMusicName) {\r\n            this.playMusic({ name: <M>this.defaultMusicName, volume: this.defaultMusicVolume, onPlay });\r\n        } else {\r\n            this.warn('defaultMusicName 不存在');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放默认音效\r\n     */\r\n    public playDefaultEffect(onPlay?: (audioID: number) => void) {\r\n        if (this.defaultEffectName) {\r\n            this.playEffect({ name: <E>this.defaultEffectName, volume: this.defaultEffectVolume, onPlay });\r\n        } else {\r\n            this.warn('defaultEffectName 不存在');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置按钮点击播放的音效，优先级高于默认音效\r\n     * @param name 音效(如果为空，则使用默认音效)\r\n     * @param opts.volume 音量\r\n     * @param opts.interval 多少秒内不会重复播放\r\n     */\r\n    public setButtonEffect(target: Button, name?: E, opts?: {\r\n        volume: number,\r\n        interval: number\r\n    }) {\r\n        if (name) {\r\n            const { volume = 1, interval = 0 } = opts || {};\r\n            //@ts-ignore\r\n            target.node['useDefaultEffect'] = false;\r\n            target.node.targetOff(this);\r\n            target.node.on(Button.EventType.CLICK, function (this: SoundManager<E, M>) {\r\n                this.playEffect({ name, volume, interval });\r\n            }, this);\r\n        } else {\r\n            //@ts-ignore\r\n            target.node['useDefaultEffect'] = true;\r\n            target.node.targetOff(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param name 音效\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param loop 循环播放\r\n     * @param volume 音量\r\n     * @param interval 多少秒内不会重复播放\r\n     */\r\n    public playEffect({ name, volume, loop, interval, onEnded, onPlay, onError }: playEffect<E>): void;\r\n    public playEffect({ name, bundle, volume, loop, interval, onEnded, onPlay, onError }: playEffectWidthBundle): void;\r\n    public playEffect({ name, bundle, volume = 1, loop = false, interval = 0, onEnded, onPlay, onError }) {\r\n        if (!name) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n\r\n        const bundleName = bundle || BundleName;\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        // 静音不允许播放\r\n        if (this.isEffectMute) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n        // 正在播放中，不允许重复播放\r\n        if (this.effectInterval[soundName] && Date.now() < this.effectInterval[soundName]) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n\r\n        // 加载音乐\r\n        this.load(name, bundleName, (audioClip) => {\r\n            if (!isValid(this)) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 静音不允许播放\r\n            if (this.isEffectMute) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 正在播放中，不允许重复播放\r\n            if (this.effectInterval[soundName] && Date.now() < this.effectInterval[soundName]) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            if (!audioClip) {\r\n                this.error(`playEffect ${name} 不存在或加载失败`);\r\n                onError && onError();\r\n                return;\r\n            }\r\n\r\n            if (interval > 0) {\r\n                this.effectInterval[soundName] = Date.now() + interval * 1000;\r\n            }\r\n\r\n            AudioEngine.inst.playEffect(audioClip, volume, loop, onPlay, onEnded);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param name 音效\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param loop 循环播放\r\n     * @param volume 音量\r\n     * @param interval 多少秒内不会重复播放\r\n     * @returns 如果Promise返回值是null(非真)，则播放失败\r\n     */\r\n    public async playEffectAsync(params: playEffectAsync<E>): Promise<number>;\r\n    public async playEffectAsync(params: playEffectWidthBundleAsync): Promise<number>;\r\n    public async playEffectAsync(params: any): Promise<number> {\r\n        return new Promise((resolve) => {\r\n            this.playEffect({\r\n                ...params,\r\n                onPlay: (audioID) => {\r\n                    resolve(audioID);\r\n                },\r\n                onError: () => {\r\n                    resolve(null);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 暂停音效\r\n     * @param id \r\n     * @returns \r\n     */\r\n    public pauseEffect(id: number) {\r\n        return AudioEngine.inst.pauseEffect(id);\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音效\r\n     * @returns \r\n     */\r\n    public pauseAllEffects() {\r\n        return AudioEngine.inst.pauseAllEffects();\r\n    }\r\n\r\n    /**\r\n     * 恢复音效\r\n     * @param id \r\n     * @returns \r\n     */\r\n    public resumeEffect(id: number) {\r\n        return AudioEngine.inst.resumeEffect(id);\r\n    }\r\n\r\n    /**\r\n     * 恢复所有音效\r\n     * @returns \r\n     */\r\n    public resumeAllEffects() {\r\n        return AudioEngine.inst.resumeAllEffects();\r\n    }\r\n\r\n    /**\r\n     * 停止音效\r\n     * @param id \r\n     * @returns \r\n     */\r\n    public stopEffect(id: number) {\r\n        return AudioEngine.inst.stopEffect(id);\r\n    }\r\n\r\n    /**\r\n     * 停止所有音效\r\n     * @returns \r\n     */\r\n    public stopAllEffects() {\r\n        return AudioEngine.inst.stopAllEffects();\r\n    }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param volume 音量\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param force 是否强制重新播放\r\n     */\r\n    public playMusic(params: playMusic<M>): void;\r\n    public playMusic(params: playMusicWidthBundle): void;\r\n    public playMusic({ name, bundle, volume = 1, force = false, onPlay, onError }): void {\r\n        if (!name) {\r\n            onError && onError();\r\n            return;\r\n        }\r\n\r\n        const bundleName = bundle || BundleName;\r\n        const soundName = `${bundleName}://${name}`;\r\n\r\n        // 该音乐正在播放中\r\n        if (!force && this.playingMusic.id !== -1 && this.playingMusic.name === soundName) {\r\n            AudioEngine.inst.setMusicVolume(volume);\r\n            onPlay && onPlay();\r\n            return;\r\n        }\r\n\r\n        // 先停止当前音乐\r\n        this.stopMusic();\r\n\r\n        // 播放操作uuid\r\n        const uuid = this.createUUID();\r\n        this.playingMusic.uuid = uuid;\r\n        // 记录要播放音乐的名字\r\n        this.playingMusic.name = soundName;\r\n        // 记录要播放音乐的音量\r\n        this.playingMusic.volume = volume;\r\n        // 记录音乐状态\r\n        this.playingMusic.playing = true;\r\n        this.playingMusic.paused = false;\r\n\r\n        // 静音\r\n        if (this.isMusicMute) {\r\n            onPlay && onPlay();\r\n            return;\r\n        }\r\n\r\n        // 加载音乐\r\n        this.load(name, bundleName, (audioClip) => {\r\n            if (!isValid(this)) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 不合法\r\n            if (this.playingMusic.id !== -1) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            if (this.playingMusic.name !== soundName) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            if (this.playingMusic.uuid !== this.playingMusic.uuid) {\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 不存在\r\n            if (!audioClip) {\r\n                this.error(`playMusic ${name} 不存在或加载失败`);\r\n                onError && onError();\r\n                return;\r\n            }\r\n            // 静音\r\n            if (this.isMusicMute) {\r\n                onPlay && onPlay();\r\n                return;\r\n            }\r\n\r\n            this.playingMusic.id = AudioEngine.inst.playMusic(audioClip, volume, onPlay);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param volume 音量\r\n     * @param bundle Bundle名，默认为app-sound\r\n     * @param force 是否强制重新播放\r\n     * @returns 如果Promise返回值是false，则播放失败\r\n     */\r\n    public playMusicAsync(params: playMusicAsync<M>): Promise<boolean>;\r\n    public playMusicAsync(params: playMusicWidthBundleAsync): Promise<boolean>;\r\n    public playMusicAsync(params: any): Promise<boolean> {\r\n        return new Promise((resolve) => {\r\n            this.playMusic({\r\n                ...params,\r\n                onPlay: () => {\r\n                    resolve(true);\r\n                },\r\n                onError: () => {\r\n                    resolve(false);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 重新播放音乐\r\n     */\r\n    public replayMusic(onPlay?: Function) {\r\n        if (!this.playingMusic.playing) return;\r\n        if (!this.playingMusic.name) return;\r\n        if (this.playingMusic.name.indexOf('://') > 0) {\r\n            const [bundle, name] = this.playingMusic.name.split('://');\r\n            this.playMusic({\r\n                name,\r\n                bundle,\r\n                volume: this.playingMusic.volume,\r\n                force: true,\r\n                onPlay\r\n            });\r\n        } else {\r\n            this.playMusic({\r\n                name: this.playingMusic.name as any,\r\n                volume: this.playingMusic.volume,\r\n                force: true,\r\n                onPlay\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停音乐\r\n     */\r\n    public pauseMusic() {\r\n        if (!this.playingMusic.playing) return false;\r\n        this.playingMusic.paused = true;\r\n        return AudioEngine.inst.pauseMusic();\r\n    }\r\n\r\n    /**\r\n     * 恢复音乐\r\n     */\r\n    public resumeMusic() {\r\n        if (!this.playingMusic.playing) return false;\r\n        this.playingMusic.paused = false;\r\n        return AudioEngine.inst.resumeMusic();\r\n    }\r\n\r\n    /**\r\n     * 停止音乐\r\n     */\r\n    public stopMusic() {\r\n        this.playingMusic.playing = false;\r\n        this.playingMusic.paused = false;\r\n        this.playingMusic.volume = 1;\r\n        this.playingMusic.name = '';\r\n        this.playingMusic.uuid = '';\r\n        this.playingMusic.id = -1;\r\n        return AudioEngine.inst.stopMusic();\r\n    }\r\n\r\n    /**\r\n     * 设置音乐静音\r\n     * @param mute 是否静音\r\n     * @param isCache 静音状态是否写入缓存(通过localstorage)\r\n     */\r\n    public setMusicMute(mute: boolean, isCache = false) {\r\n        isCache && storage.set(this.musicMuteCacheKey, mute);\r\n        AudioEngine.inst.setMusicMute(mute);\r\n        if (!mute && this.playingMusic.name) {\r\n            if (this.playingMusic.name.indexOf('://') > 0) {\r\n                const [bundle, name] = this.playingMusic.name.split('://');\r\n                this.playMusic({\r\n                    name,\r\n                    bundle,\r\n                    volume: this.playingMusic.volume,\r\n\r\n                });\r\n            } else {\r\n                this.playMusic({\r\n                    name: this.playingMusic.name as any,\r\n                    volume: this.playingMusic.volume\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 音乐是否正在播放\r\n     */\r\n    get isMusicPlaying() {\r\n        return this.playingMusic.playing;\r\n    }\r\n\r\n    /**\r\n     * 音乐是否暂停\r\n     */\r\n    get isMusicPaused() {\r\n        return this.playingMusic.paused;\r\n    }\r\n\r\n    /**\r\n     * 音乐是否静音\r\n     */\r\n    public get isMusicMute() {\r\n        return AudioEngine.inst.getMusicMute();\r\n    }\r\n\r\n    /**\r\n     * 设置音效静音\r\n     * @param mute 是否静音\r\n     * @param isCache 静音状态是否写入缓存(通过localstorage)\r\n     */\r\n    public setEffectMute(mute: boolean, isCache = false) {\r\n        AudioEngine.inst.setGlobalEffectsMute(mute);\r\n        isCache && storage.set(this.effectMuteCacheKey, mute);\r\n    }\r\n\r\n    /**\r\n     * 音效是否静音\r\n     */\r\n    public get isEffectMute() {\r\n        return AudioEngine.inst.getGlobalEffectsMute();\r\n    }\r\n\r\n    /**\r\n     * 设置音乐音量倍率\r\n     * @param scale \r\n     * @param isCache 音量倍率是否写入缓存(通过localstorage)\r\n     */\r\n    public setMusicVolumeScale(scale: number, isCache = false) {\r\n        AudioEngine.inst.setMusicVolumeScale(scale);\r\n        isCache && storage.set(this.musicVolumeScaleCacheKey, scale);\r\n    }\r\n\r\n    /**\r\n     * 音乐音量倍率\r\n     */\r\n    public get musicVolumeScale() {\r\n        return AudioEngine.inst.getMusicVolumeScale();\r\n    }\r\n\r\n    /**\r\n     * 设置音效音量倍率\r\n     * @param scale \r\n     * @param isCache 音量倍率是否写入缓存(通过localstorage)\r\n     */\r\n    public setEffectVolumeScale(scale: number, isCache = false) {\r\n        AudioEngine.inst.setGlobalEffectsVolumeScale(scale);\r\n        isCache && storage.set(this.effectVolumeScaleCacheKey, scale);\r\n    }\r\n\r\n    /**\r\n     * 音效音量倍率\r\n     */\r\n    public get effectVolumeScale() {\r\n        return AudioEngine.inst.getGlobalEffectsVolumeScale();\r\n    }\r\n}","import { error, js, log, sys } from 'cc';\r\n\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction encode(text: string, key: string) {\r\n    key = key || chars;\r\n    let encrypted = '';\r\n    for (let i = 0; i < text.length; i++) {\r\n        const charCode = text.charCodeAt(i) ^ key.charCodeAt(i % key.length);\r\n        encrypted += String.fromCharCode(charCode);\r\n    }\r\n    return encrypted;\r\n}\r\n\r\nfunction decode(encryptedText: string, key: string) {\r\n    key = key || chars;\r\n    let decrypted = '';\r\n    for (let i = 0; i < encryptedText.length; i++) {\r\n        const charCode = encryptedText.charCodeAt(i) ^ key.charCodeAt(i % key.length);\r\n        decrypted += String.fromCharCode(charCode);\r\n    }\r\n    return decrypted;\r\n}\r\n\r\nconst weekOfYear = function (curDate?: Date) {\r\n    /*\r\n     date1是当前日期\r\n     date2是当年第一天\r\n     d是当前日期是今年第多少天\r\n     用d + 当前年的第一天的周差距的和在除以7就是本年第几周\r\n     */\r\n    curDate = curDate || new Date();\r\n    let a = curDate.getFullYear();\r\n    let b = curDate.getMonth() + 1;\r\n    let c = curDate.getDate();\r\n\r\n    let date1 = new Date(a, b - 1, c), date2 = new Date(a, 0, 1),\r\n        d = Math.round((date1.valueOf() - date2.valueOf()) / 86400000);\r\n    return Math.ceil(\r\n        (d + ((date2.getDay() + 1) - 1)) / 7\r\n    );\r\n};\r\n\r\nconst getWeekUpdateTime = function () {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const week = weekOfYear(date);\r\n    return year + '' + week;\r\n};\r\n\r\nconst getDayUpdateTime = function (curDate?: Date) {\r\n    curDate = curDate || new Date();\r\n    return curDate.toLocaleDateString();\r\n};\r\n\r\nexport class Storage {\r\n    static setting: {\r\n        /**\r\n         * 加密密钥  \r\n         * - 如果需要加密内容，请设置密钥的值\r\n         */\r\n        secretKey: string\r\n    } = {\r\n            secretKey: ''\r\n        };\r\n\r\n    private _cache = {};\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    set(key: string, value: unknown) {\r\n        if (typeof key === 'string' && typeof value !== 'undefined') {\r\n            try {\r\n                const data = JSON.stringify(value);\r\n                if (Storage.setting.secretKey) {\r\n                    sys.localStorage.setItem(key, encode(data, Storage.setting.secretKey));\r\n                } else {\r\n                    sys.localStorage.setItem(key, data);\r\n                }\r\n                // 设置缓存\r\n                this._cache[key] = data;\r\n                return true;\r\n            } catch (err) { log(err); }\r\n        } else {\r\n            error('storage set error');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 返回值为undefined代表调用失败\r\n     */\r\n    get(key: string) {\r\n        // 先读取缓存\r\n        if (typeof this._cache[key] !== 'undefined') {\r\n            return JSON.parse(this._cache[key]);\r\n        }\r\n\r\n        let result = null;\r\n        try {\r\n            let data = sys.localStorage.getItem(key);\r\n            if (data && typeof data === 'string') {\r\n                if (Storage.setting.secretKey) data = decode(data, Storage.setting.secretKey);\r\n                // 设置缓存\r\n                this._cache[key] = data;\r\n                result = JSON.parse(data);\r\n            } else if (data !== '' && data !== null) {\r\n                result = undefined;\r\n            }\r\n        } catch (e) {\r\n            result = undefined;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    add(key: string, value: number = 1) {\r\n        let result = this.get(key);\r\n        if (result !== undefined) {\r\n            result = result || 0;\r\n            result += value;\r\n            if (this.set(key, result)) {\r\n                return result;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    remove(key: string) {\r\n        try {\r\n            sys.localStorage.removeItem(key);\r\n            delete this._cache[key];\r\n            return true;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回值为false代表调用失败\r\n     */\r\n    clear() {\r\n        try {\r\n            sys.localStorage.clear();\r\n            js.clear(this._cache);\r\n            return true;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置本周数据 [返回值为false代表调用失败]\r\n     * @param {Function} cb 当已存在本周的数据时，会根据cb的返回决定是否存储，true代表存储\r\n     */\r\n    setWeek(key: string, value: unknown, cb?: (oldValue: unknown, newValue: unknown) => boolean) {\r\n        const updateTime = getWeekUpdateTime();\r\n\r\n        if (cb) {\r\n            const data = this.getWeek(key);\r\n            if (data !== undefined) {\r\n                if (data === null || cb(data, value)) {\r\n                    return this.set(key, {\r\n                        data: value,\r\n                        updateTime: updateTime\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            return this.set(key, {\r\n                data: value,\r\n                updateTime: updateTime\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取本周数据 [返回值为undefined代表调用失败]\r\n     */\r\n    getWeek(key: string) {\r\n        const data = this.get(key);\r\n        if (data && data.updateTime == getWeekUpdateTime()) {\r\n            return data.data;\r\n        }\r\n        return data && null;\r\n    }\r\n\r\n    /**\r\n     * 设置本天数据 [返回值为false代表调用失败]\r\n     * @param {Function} cb 当已存在本天的数据时，会根据cb的返回决定是否存储，true代表存储\r\n     */\r\n    setDay(key: string, value: unknown, cb?: (oldValue: unknown, newValue: unknown) => boolean) {\r\n        const updateTime = getDayUpdateTime();\r\n\r\n        if (cb) {\r\n            const data = this.getDay(key);\r\n            if (data !== undefined) {\r\n                if (data === null || cb(data, value)) {\r\n                    return this.set(key, {\r\n                        data: value,\r\n                        updateTime: updateTime\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            return this.set(key, {\r\n                data: value,\r\n                updateTime: updateTime\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取本天数据 [返回值为undefined代表调用失败]\r\n     * @param {*} key \r\n     */\r\n    getDay(key: string) {\r\n        const data = this.get(key);\r\n        if (data && data.updateTime == getDayUpdateTime()) {\r\n            return data.data;\r\n        }\r\n        return data && null;\r\n    }\r\n}\r\n\r\nexport default new Storage();","interface IHandle {\r\n    (next: (data?: any) => boolean, retry: (timeout?: number) => Promise<boolean>, end: (data?: any) => boolean): void\r\n}\r\n\r\ninterface IFinish<T> {\r\n    (results?: T, success?: boolean): any\r\n}\r\n\r\nexport interface ITask<T extends Array<any> = any[]> {\r\n    readonly results: Readonly<T>;\r\n    size(): number;\r\n    add(handle: IHandle): this;\r\n    start(finish?: IFinish<T> | Function): this;\r\n    stop(): boolean;\r\n    isRunning(): boolean;\r\n}\r\n\r\n/**\r\n * 顺序执行\r\n */\r\nexport class Sync<T extends Array<any>> implements ITask<T> {\r\n    private running = false;\r\n    private index: number = -1;\r\n    private list: IHandle[] = [];\r\n    private finish: IFinish<T> | Function = null;\r\n\r\n    /**\r\n     * 每个handle的返回值，通过next或end存储\r\n     */\r\n    public results: T = [] as T;\r\n\r\n    /**\r\n     * 任务数量\r\n     * @returns \r\n     */\r\n    public size(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    /**\r\n     * 添加一个任务\r\n     * @param handle \r\n     * @returns \r\n     */\r\n    public add(handle: IHandle) {\r\n        this.list.push(handle);\r\n        this.results.push(undefined);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 开始执行所有任务\r\n     * @param finish 执行完毕回调\r\n     * @returns \r\n     */\r\n    public start(finish?: IFinish<T> | Function) {\r\n        if (this.running) {\r\n            return this;\r\n        }\r\n\r\n        this.running = true;\r\n        this.index = -1;\r\n        this.finish = finish;\r\n\r\n        this.next(this.index);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 停止所有任务\r\n     * @returns \r\n     */\r\n    public stop(): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否正在执行\r\n     * @returns \r\n     */\r\n    public isRunning() {\r\n        return this.running;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @returns \r\n     */\r\n    public isStop() {\r\n        return !this.running;\r\n    }\r\n\r\n    private end(data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (typeof data !== 'undefined') {\r\n            this.results[this.index] = data;\r\n        }\r\n\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, true);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private next(index: number, data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index !== this.index) return false;\r\n\r\n        if (typeof data !== 'undefined') {\r\n            this.results[this.index] = data;\r\n        }\r\n\r\n        if (++this.index < this.list.length) {\r\n            this.retry(this.index);\r\n        } else {\r\n            this.end();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private retry(index: number): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index !== this.index) return false;\r\n\r\n        const handle = this.list[index];\r\n        handle && handle(\r\n            (data?: any) => this.next(index, data),\r\n            (timeout = 0) => {\r\n                return new Promise(resolve => {\r\n                    if (timeout > 0) {\r\n                        setTimeout(() => {\r\n                            resolve(this.retry(index));\r\n                        }, timeout * 1000);\r\n                    } else {\r\n                        resolve(this.retry(index));\r\n                    }\r\n                });\r\n            },\r\n            (data?: any) => this.end(data)\r\n        );\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n/**\r\n * 同时执行\r\n */\r\nexport class ASync<T extends Array<any>> implements ITask<T> {\r\n    private running = false;\r\n    private count: number = 0;\r\n    private list: IHandle[] = [];\r\n    private finish: IFinish<T> | Function = null;\r\n\r\n    /**\r\n     * 每个handle的返回值，通过next或end存储\r\n     */\r\n    public results: T = [] as T;\r\n\r\n    /**\r\n     * 任务数量\r\n     * @returns \r\n     */\r\n    public size(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    /**\r\n     * 添加一个任务\r\n     * @param handle \r\n     * @returns \r\n     */\r\n    public add(handle: IHandle) {\r\n        this.list.push(handle);\r\n        this.results.push(undefined);\r\n\r\n        if (this.running) {\r\n            this.retry(this.list.length - 1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 开始执行所有任务\r\n     * @param finish 执行完毕回调\r\n     * @returns \r\n     */\r\n    public start(finish?: IFinish<T> | Function) {\r\n        if (this.running) {\r\n            return this;\r\n        }\r\n\r\n        this.running = true;\r\n        this.count = 0;\r\n        this.finish = finish;\r\n\r\n        if (this.list.length) {\r\n            for (let index = 0; index < this.list.length; index++) {\r\n                this.retry(index);\r\n            }\r\n        } else {\r\n            this.end && this.end(this.count);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 停止所有任务\r\n     * @returns \r\n     */\r\n    public stop(): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否正在执行\r\n     * @returns \r\n     */\r\n    public isRunning() {\r\n        return this.running;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @returns \r\n     */\r\n    public isStop() {\r\n        return !this.running;\r\n    }\r\n\r\n    private end(index: number, data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index >= 0 && index < this.results.length) {\r\n            if (this.results[index] || this.results[index] === null) return false;\r\n            this.results[index] = typeof data !== 'undefined' ? data : null;\r\n        }\r\n\r\n        this.running = false;\r\n        if (this.finish) {\r\n            this.finish(this.results, true);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private next(index: number, data?: any): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        if (index >= 0 && index < this.results.length) {\r\n            if (this.results[index] || this.results[index] === null) return false;\r\n            this.results[index] = typeof data !== 'undefined' ? data : null;\r\n        }\r\n\r\n        if (++this.count === this.list.length) {\r\n            this.end && this.end(this.count);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private retry(index: number): boolean {\r\n        if (!this.running) {\r\n            return false;\r\n        }\r\n\r\n        const handle = this.list[index];\r\n        handle && handle(\r\n            (data?: any) => this.next(index, data),\r\n            (timeout = 0) => {\r\n                return new Promise(resolve => {\r\n                    if (timeout > 0) {\r\n                        setTimeout(() => {\r\n                            resolve(this.retry(index));\r\n                        }, timeout * 1000);\r\n                    } else {\r\n                        resolve(this.retry(index));\r\n                    }\r\n                });\r\n            },\r\n            (data?: any) => this.end(index, data)\r\n        );\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class Any<T extends Array<any>> implements ITask<T> {\r\n    private task = new Sync();\r\n\r\n    /**\r\n     * 每个handle的返回值，通过next或end存储\r\n     */\r\n    public get results(): T {\r\n        return this.task.results as T;\r\n    }\r\n\r\n    /**\r\n     * 任务数量\r\n     * @returns \r\n     */\r\n    public size() {\r\n        return this.task.size();\r\n    }\r\n\r\n    /**\r\n     * 添加一个任务\r\n     * @param handle \r\n     * @returns \r\n     */\r\n    public add(handles: IHandle | IHandle[]) {\r\n        if (handles instanceof Array) {\r\n            const async = new ASync();\r\n            handles.forEach(handle => async.add(handle));\r\n            this.task.add(async.start.bind(async));\r\n        } else {\r\n            this.task.add(handles);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 开始执行所有任务\r\n     * @param finish 执行完毕回调\r\n     * @returns \r\n     */\r\n    public start(finish?: IFinish<T> | Function) {\r\n        this.task.start(finish);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 停止所有任务\r\n     * @returns \r\n     */\r\n    public stop() {\r\n        return this.task.stop();\r\n    }\r\n\r\n    /**\r\n     * 是否正在执行\r\n     * @returns \r\n     */\r\n    public isRunning() {\r\n        return this.task.isRunning();\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @returns \r\n     */\r\n    public isStop() {\r\n        return this.task.isStop();\r\n    }\r\n}\r\n\r\ninterface IExecuteCallBack {\r\n    (retry: (timeout?: number) => void): void\r\n}\r\n\r\nconst task = {\r\n    /**\r\n     * 任务顺序执行\r\n     */\r\n    createSync<T extends Array<any>>(): Sync<T> {\r\n        return new Sync<T>();\r\n    },\r\n\r\n    /**\r\n     * 任务同时执行\r\n     */\r\n    createASync<T extends Array<any>>(): ASync<T> {\r\n        return new ASync<T>();\r\n    },\r\n\r\n    /**\r\n     * 根据参数指定执行顺序\r\n     * @example\r\n     * createAny()\r\n     * .add(1).add(2).add(3).add(4)\r\n     * .add([5,6,7])\r\n     * .add(8)\r\n     * 执行顺序，1，2，3，4依次执行，然后同时执行5，6，7，最后执行8\r\n     */\r\n    createAny<T extends Array<any>>() {\r\n        return new Any<T>();\r\n    },\r\n\r\n    /**\r\n     * 执行单个任务\r\n     */\r\n    execute(fun: IExecuteCallBack, retryMax = -1, retryFinish?: Function) {\r\n        fun(function retry(timeout = 0) {\r\n            if (retryMax === 0) return retryFinish && retryFinish();\r\n            retryMax = retryMax > 0 ? retryMax - 1 : retryMax;\r\n            if (timeout > 0) {\r\n                setTimeout(() => task.execute(fun, retryMax, retryFinish), timeout * 1000);\r\n            } else {\r\n                task.execute(fun, retryMax, retryFinish);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default task;","import { _decorator } from 'cc';\r\nimport BaseManager from '../../base/BaseManager';\r\nconst { ccclass } = _decorator;\r\n\r\ntype ICallback = (...args: any[]) => any;\r\n\r\nclass DailyTimer {\r\n    // 获取当前时间相对于当日零点的毫秒数\r\n    private static getDayTimeMs(date: Date): number {\r\n        return (\r\n            date.getHours() * 3600 +\r\n            date.getMinutes() * 60 +\r\n            date.getSeconds()\r\n        ) * 1000 + date.getMilliseconds();\r\n    }\r\n\r\n    // 静态方法解析时间为毫秒数\r\n    private static parseTimeToMs(h: number, m: number, s: number): number {\r\n        return ((h * 3600 + m * 60 + s) * 1000) % 86400000;\r\n    }\r\n\r\n    private readonly startMs: number;  // 起始时间毫秒数（相对于当日零点）\r\n    private readonly endMs: number;    // 结束时间毫秒数\r\n\r\n    // 用于检查当前时间是否可触发回调\r\n    private checkDay = 0;\r\n\r\n    constructor(\r\n        time: string,\r\n        public readonly callback: ICallback,\r\n        public readonly target?: unknown,\r\n        public readonly once: boolean = false\r\n    ) {\r\n        // 使用解构赋值提高可读性\r\n        const [startSegment, endSegment = startSegment] = time.split('-');\r\n\r\n        // 开始时间\r\n        const [startH = 0, startM = 0, startS = 0] = startSegment.split(':').map(\r\n            part => Math.max(0, parseInt(part, 10) || 0)\r\n        );\r\n        this.startMs = DailyTimer.parseTimeToMs(startH, startM, startS);\r\n\r\n        // 结束时间\r\n        const [endH = 0, endM = 0, endS = 0] = endSegment.split(':').map(\r\n            part => Math.max(0, parseInt(part, 10) || 0)\r\n        );\r\n        this.endMs = DailyTimer.parseTimeToMs(endH, endM, endS);\r\n        // 结束时间与开始时间不能相同\r\n        if (this.endMs === this.startMs) {\r\n            if (startM === 0 && startS === 0) {\r\n                this.endMs = DailyTimer.parseTimeToMs(startH + 1, startM, startS);\r\n            } else if (startS === 0) {\r\n                this.endMs = DailyTimer.parseTimeToMs(startH, startM + 1, startS);\r\n            } else {\r\n                this.endMs = DailyTimer.parseTimeToMs(startH, startM, startS + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取当前时间是否在时间范围内\r\n    private isInRange(now: Date): boolean {\r\n        const currentMs = DailyTimer.getDayTimeMs(now);\r\n\r\n        // 处理跨天时间段（如 23:00-01:00）\r\n        return this.startMs <= this.endMs\r\n            ? currentMs >= this.startMs && currentMs < this.endMs\r\n            : currentMs >= this.startMs || currentMs < this.endMs;\r\n    }\r\n\r\n    update(now: Date): boolean {\r\n        const dateDay = now.getDay();\r\n\r\n        if (this.checkDay === dateDay) return false;\r\n        if (!this.isInRange(now)) return false;\r\n\r\n        this.checkDay = dateDay;\r\n        this.callback.call(this.target);\r\n\r\n        return this.once;\r\n    }\r\n}\r\n\r\nclass IntervalTimer {\r\n    private elapsed: number = 0;\r\n\r\n    constructor(\r\n        public readonly interval: number,\r\n        public readonly callback: ICallback,\r\n        public readonly target?: unknown,\r\n        public readonly once: boolean = false\r\n    ) { }\r\n\r\n    update(dt: number): boolean {\r\n        this.elapsed += dt;\r\n        let completed = false;\r\n\r\n        // 处理可能多次触发的情况（当dt > interval时）\r\n        while (this.elapsed >= this.interval) {\r\n            this.callback.call(this.target);\r\n            this.elapsed -= this.interval;\r\n\r\n            if (this.once) {\r\n                completed = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return completed;\r\n    }\r\n}\r\n\r\nclass Timer {\r\n    static update(timer: Timer, dt: number) {\r\n        return timer.update(dt);\r\n    }\r\n\r\n    private intervalTimer: IntervalTimer[] = [];\r\n\r\n    /**\r\n     * 注册定时器\r\n     * @param interval \r\n     * @param callback \r\n     * @param target \r\n     * @param once \r\n     */\r\n    register(\r\n        interval: number,\r\n        callback: ICallback,\r\n        target?: unknown,\r\n        once?: boolean\r\n    ): void {\r\n        const timer = new IntervalTimer(interval, callback, target, once || false);\r\n        this.intervalTimer.push(timer);\r\n    }\r\n\r\n    /**\r\n     * 取消定时器\r\n     * @param callback \r\n     * @param target \r\n     */\r\n    unregister(callback: ICallback, target?: unknown): void {\r\n        if (typeof target === 'undefined') {\r\n            this.intervalTimer = this.intervalTimer.filter(\r\n                timer => timer.callback !== callback\r\n            );\r\n        } else {\r\n            this.intervalTimer = this.intervalTimer.filter(\r\n                timer => !(timer.callback === callback && timer.target === target)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消所有定时器\r\n     */\r\n    unregisterAll() {\r\n        this.intervalTimer = [];\r\n    }\r\n\r\n    private dailyTimers: DailyTimer[] = [];\r\n\r\n    /**\r\n     * 注册每日触发器\r\n     * @param time 24小时制,精确到秒\r\n     * \r\n     * @example\r\n     * registerDailyTrigger('16', ...) 等同于 registerDailyTrigger('16-17', ...)\r\n     * registerDailyTrigger('8-9:00', ...) 等同于 registerDailyTrigger('8', ...)\r\n     * registerDailyTrigger('8:00:01-24', ...)\r\n     */\r\n    registerDailyTrigger(\r\n        time: string,\r\n        callback: ICallback,\r\n        target?: unknown,\r\n        once?: boolean\r\n    ) {\r\n        const timer = new DailyTimer(time, callback, target, once || false);\r\n        this.dailyTimers.push(timer);\r\n    }\r\n\r\n    /**\r\n     * 取消每日触发器\r\n     */\r\n    unregisterDailyTrigger(callback: ICallback, target?: unknown) {\r\n        if (typeof target === 'undefined') {\r\n            this.dailyTimers = this.dailyTimers.filter(\r\n                timer => timer.callback !== callback\r\n            );\r\n        } else {\r\n            this.dailyTimers = this.dailyTimers.filter(\r\n                timer => !(timer.callback === callback && timer.target === target)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消所有每日触发器\r\n     */\r\n    unregisterAllDailyTrigger() {\r\n        this.dailyTimers = [];\r\n    }\r\n\r\n    /**\r\n     * 清除所有定时器和触发器\r\n     */\r\n    clear() {\r\n        this.intervalTimer = [];\r\n        this.dailyTimers = [];\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        for (let index = 0; index < this.intervalTimer.length; index++) {\r\n            const timer = this.intervalTimer[index];\r\n            if (timer.update(dt)) {\r\n                this.intervalTimer.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n\r\n        const date = new Date();\r\n        for (let index = 0; index < this.dailyTimers.length; index++) {\r\n            const timer = this.dailyTimers[index];\r\n            if (timer.update(date)) {\r\n                this.dailyTimers.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@ccclass('TimerManager')\r\nexport default class TimerManager extends BaseManager {\r\n    private timers: Map<string | number, Timer> = new Map();\r\n\r\n    /**\r\n     * 清除所有定时器\r\n     */\r\n    clear() {\r\n        this.timers.forEach((timer) => {\r\n            timer.clear();\r\n        });\r\n        this.timers.clear();\r\n    }\r\n\r\n    /**\r\n     * 删除定时器\r\n     * @param key 定时器key\r\n     */\r\n    delete(key: string | number) {\r\n        const timer = this.timers.get(key);\r\n        if (!timer) return;\r\n\r\n        this.timers.delete(key);\r\n        timer.clear();\r\n    }\r\n\r\n    /**\r\n     * 获取定时器\r\n     * @param key 定时器key\r\n     */\r\n    get(key: string | number): Timer {\r\n        if (this.timers.has(key)) {\r\n            return this.timers.get(key);\r\n        }\r\n\r\n        const timer = new Timer();\r\n        this.timers.set(key, timer);\r\n        return timer;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        this.timers.forEach((timer) => {\r\n            Timer.update(timer, dt);\r\n        });\r\n    }\r\n}\r\n","import { Asset, AssetManager, Camera, Canvas, Component, Event, Layers, Node, Prefab, RenderTexture, ResolutionPolicy, Scene, SceneAsset, Settings, UITransform, Widget, _decorator, director, instantiate, isValid, js, screen, settings, size, view } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport { IMiniViewName, IViewName } from '../../../../../assets/app-builtin/app-admin/executor';\r\nimport Core from '../../Core';\r\nimport BaseManager from '../../base/BaseManager';\r\nimport BaseView, { IHideParamOnHide, IShade, IShowParamAttr, IShowParamOnHide, IShowParamOnShow, IViewType, ViewType } from '../../base/BaseView';\r\nimport UIMgrLoading from './comp/UIMgrLoading';\r\nimport UIMgrShade from './comp/UIMgrShade';\r\nimport UIMgrToast from './comp/UIMgrToast';\r\nimport UIMgrZOrder from './comp/UIMgrZOrder';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\ninterface IShowParams<T, IShow = any, IShowReturn = any, IHideReturn = any> {\r\n    /**UI名 */\r\n    name: T,\r\n    /**\r\n     * 数据\r\n     * - 被onShow接收\r\n     */\r\n    data?: IShow,\r\n    /**\r\n     * 是否将UI显示在最上 \r\n     * - 默认true\r\n     */\r\n    top?: boolean,\r\n    /**\r\n     * 队列模式，一个UI关闭后，是否展示下一个UI\r\n     * - join: 排队 \r\n     * - jump: 插队(到首位)\r\n     */\r\n    queue?: 'join' | 'jump',\r\n    /**静默 默认false(不显示加载loading，也不屏蔽触摸) */\r\n    silent?: boolean,\r\n    /**UI触发onShow后 */\r\n    onShow?: IShowParamOnShow<IShowReturn>,\r\n    /**UI触发onHide后 */\r\n    onHide?: IShowParamOnHide<IHideReturn>,\r\n    /**当code的值为ErrorCode.LogicError时，如果返回true，则自动重试 */\r\n    onError?: (result: string, code: ErrorCode) => true | void,\r\n    /**\r\n     * @private\r\n     * @deprecated\r\n     */\r\n    attr?: IShowParamAttr,\r\n}\r\n\r\ninterface IShowAsyncParams<T, IShow = any, IShowReturn = any> {\r\n    /**UI名 */\r\n    name: T,\r\n    /**\r\n     * 数据\r\n     * - 被onShow接收\r\n     */\r\n    data?: IShow,\r\n    /**\r\n     * 是否将UI显示在最上 \r\n     * - 默认true\r\n     */\r\n    top?: boolean,\r\n    /**\r\n     * 队列模式，一个UI关闭后，是否展示下一个UI\r\n     * - join: 排队 \r\n     * - jump: 插队(到首位)\r\n     */\r\n    queue?: 'join' | 'jump',\r\n    /**静默 默认false(不显示加载loading，也不屏蔽触摸) */\r\n    silent?: boolean,\r\n    /**UI触发onShow后 */\r\n    onShow?: IShowParamOnShow<IShowReturn>,\r\n    /**当code的值为ErrorCode.LogicError时，如果返回true，则自动重试 */\r\n    onError?: (result: string, code: ErrorCode) => true | void,\r\n    /**\r\n     * @private\r\n     * @deprecated\r\n     */\r\n    attr?: IShowParamAttr,\r\n}\r\n\r\ninterface IHideParams<T, IHide = any, IHideReturn = any> {\r\n    name: T,\r\n    data?: IHide,\r\n    onHide?: IHideParamOnHide<IHideReturn>\r\n}\r\n\r\nconst UIScene = 'UIScene';\r\nconst UserInterfacePath = 'UserInterface';\r\nconst ViewTypes = [ViewType.Page, ViewType.Paper, ViewType.Pop, ViewType.Top];\r\n\r\nconst BlockEvents = [\r\n    Node.EventType.TOUCH_START, Node.EventType.TOUCH_MOVE, Node.EventType.TOUCH_END, Node.EventType.TOUCH_CANCEL,\r\n    Node.EventType.MOUSE_DOWN, Node.EventType.MOUSE_MOVE, Node.EventType.MOUSE_UP,\r\n    Node.EventType.MOUSE_ENTER, Node.EventType.MOUSE_LEAVE, Node.EventType.MOUSE_WHEEL\r\n];\r\n\r\n/**\r\n * 错误码\r\n */\r\nenum ErrorCode {\r\n    /**加载失败 */\r\n    LoadError,\r\n    /**beforeShow返回错误 */\r\n    LogicError,\r\n    /**UI无效(UI的isViewValid返回false) */\r\n    InvalidError,\r\n}\r\n\r\n/**\r\n * 界面名字枚举\r\n */\r\nconst ViewName: { [key in IViewName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\n/**\r\n * 子界面名字枚举\r\n */\r\nconst MiniViewName: { [key in IMiniViewName]: key } = new Proxy({} as any, {\r\n    get: function (target, key) {\r\n        if (target[key]) return target[key];\r\n        target[key] = key;\r\n        return key;\r\n    }\r\n});\r\n\r\n/**\r\n * 将串式命名转成驼峰命名\r\n * @param str 串式字符串\r\n * @param lower 首字母是否小写(默认大写)\r\n * @returns \r\n */\r\nfunction stringCase(str: string, lower = false) {\r\n    str = str.replace(/-/g, '_');\r\n    const arr = str.split('_');\r\n\r\n    return arr.map(function (str, index) {\r\n        if (index === 0 && lower) {\r\n            return str.charAt(0).toLocaleLowerCase() + str.slice(1);\r\n        }\r\n        return str.charAt(0).toLocaleUpperCase() + str.slice(1);\r\n    }).join('');\r\n}\r\n\r\n/**\r\n * 将驼峰命名转成串式命名\r\n * @param str 驼峰字符串\r\n * @returns \r\n */\r\nfunction stringCaseNegate(str: string) {\r\n    return str.replace(/[A-Z]/g, (searchStr, startIndex) => {\r\n        if (startIndex === 0) {\r\n            return searchStr.toLocaleLowerCase();\r\n        } else {\r\n            return '-' + searchStr.toLocaleLowerCase();\r\n        }\r\n    });\r\n}\r\n\r\n@ccclass('UIManager')\r\nexport default class UIManager<UIName extends string, MiniName extends string> extends BaseManager {\r\n    /**静态设置 */\r\n    static setting: {\r\n        /**预加载列表，会在UI初始化阶段进行 */\r\n        preload?: (IViewName | IMiniViewName | Array<IViewName | IMiniViewName>)[],\r\n        /**默认UI，框架初始化完毕后会自动加载 */\r\n        defaultUI?: IViewName,\r\n        /**给默认UI传递的数据 */\r\n        defaultData?: any,\r\n        /**弹窗背景遮罩的参数 */\r\n        shade?: IShade,\r\n        /**\r\n         * 是否自动适配分辨率策略\r\n         * - 开启后会弃用当前的适配策略，并根据实际设备分辨率与设计分辨率的比值，计算出新的适配策略(宽适配或高适配)，保证游戏区域不会被裁减只会扩边\r\n         *   - 当实际设备分辨率「高/宽」>= 设计分辨率「高/宽」时，为宽适配\r\n         *   - 当实际设备分辨率「高/宽」< 设计分辨率「高/宽」时，为高适配\r\n         */\r\n        autoFit?: boolean,\r\n    } = {};\r\n\r\n    /**错误码 */\r\n    static ErrorCode = ErrorCode;\r\n\r\n    /**界面名字枚举 */\r\n    static ViewName = ViewName;\r\n\r\n    /**子界面名字枚举 */\r\n    static MiniViewName = MiniViewName;\r\n\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: '位置: app://manager/ui/prefab/UIMgrLoading'\r\n    })\r\n    private loadingPre: Prefab = null;\r\n\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: '位置: app://manager/ui/prefab/UIMgrShade'\r\n    })\r\n    private shadePre: Prefab = null;\r\n\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: '位置: app://manager/ui/prefab/UIMgrToast'\r\n    })\r\n    private toastPre: Prefab = null;\r\n\r\n    // UI根节点\r\n    private UserInterface: Node = null;\r\n\r\n    // 加载和遮罩节点\r\n    private loading: Node = null;\r\n    private shade: Node = null;\r\n    private toast: Node = null;\r\n\r\n    private defaultUI: UIName = null;\r\n    private defaultData: string = '';\r\n\r\n    private currScene: string = '';\r\n    private currPage: BaseView = null;\r\n    private currFocus: BaseView = null;\r\n\r\n    // 预制体缓存\r\n    private prefabCache: { [name in string]: Prefab } = {};\r\n    private sceneCache: { [name in string]: SceneAsset } = {};\r\n\r\n    // 全局触摸有效\r\n    private touchEnabled: boolean = true;\r\n\r\n    // 记录触摸屏蔽\r\n    private touchMaskMap = new Map<string, boolean>();\r\n    // 记录展示加载\r\n    private showLoadingMap = new Map<string, boolean>();\r\n\r\n    // 记录正在加载中的有效的ui\r\n    private uiLoadingMap: Map<UIName, string[]> = new Map();\r\n    // 记录正在展示中的有效的ui\r\n    private uiShowingMap: Map<BaseView, UIName> = new Map();\r\n\r\n    private showQueue: IShowParams<UIName>[] = [];\r\n\r\n    /**UI根节点 */\r\n    public get root() {\r\n        return this.node.parent.parent;\r\n    }\r\n\r\n    /**相机 */\r\n    public get camera() {\r\n        return this.canvas.cameraComponent;\r\n    }\r\n\r\n    /**画布*/\r\n    public get canvas() {\r\n        return this.root.getComponent(Canvas);\r\n    }\r\n\r\n    protected init(finish: Function) {\r\n        const setting = UIManager.setting;\r\n\r\n        this.defaultUI = setting.defaultUI as UIName;\r\n        this.defaultData = setting.defaultData;\r\n\r\n        super.init(finish);\r\n\r\n        // 预加载,符合AnyTask规则\r\n        if (setting.preload?.length) {\r\n            const task = Core.inst.lib.task.createAny();\r\n            setting.preload.forEach((preload) => {\r\n                if (preload instanceof Array) {\r\n                    task.add(preload.map(name => {\r\n                        return next => this.preload(name as any, next);\r\n                    }));\r\n                } else {\r\n                    task.add(next => this.preload(preload as any, next));\r\n                }\r\n            });\r\n            task.start();\r\n        }\r\n    }\r\n\r\n    protected onLoad() {\r\n        this.UserInterface = this.root.getChildByName(UserInterfacePath);\r\n\r\n        this.root.getComponentsInChildren(Camera).forEach(camera => {\r\n            // 避免camera.priority<0的情况，否则会造成渲染异常\r\n            if (camera.priority < 0) camera.priority = 0;\r\n            // 避免camera.far<=camera.near的情况，否则会造成渲染异常\r\n            if (camera.far <= camera.near) camera.far = camera.near + 1;\r\n        });\r\n        director.addPersistRootNode(this.root);\r\n\r\n        this.createTypeRoot();\r\n\r\n        this.shade = instantiate(this.shadePre);\r\n        this.shade.parent = this.UserInterface;\r\n        this.shade.active = false;\r\n        this.shade.getComponent(Widget).target = this.root;\r\n\r\n        this.loading = instantiate(this.loadingPre);\r\n        this.loading.parent = this.node;\r\n        this.loading.active = false;\r\n\r\n        // toast是后面加的，需要做容错\r\n        if (this.toastPre) {\r\n            this.toast = instantiate(this.toastPre);\r\n            this.toast.parent = this.node;\r\n        }\r\n\r\n        // 自动适配分辨率策略\r\n        if (UIManager.setting.autoFit) {\r\n            const designResolution = settings.querySettings(Settings.Category.SCREEN, 'designResolution') as { width: number, height: number, policy: number };\r\n            const windowSize = size(screen.windowSize);\r\n            let resolutionPolicy = designResolution.policy;\r\n            const autoFitResolutionPolicy = function () {\r\n                if (windowSize.width / windowSize.height > designResolution.width / designResolution.height) {\r\n                    if (resolutionPolicy === ResolutionPolicy.FIXED_HEIGHT) return;\r\n                    view.setResolutionPolicy(ResolutionPolicy.FIXED_HEIGHT);\r\n                    resolutionPolicy = ResolutionPolicy.FIXED_HEIGHT;\r\n                } else {\r\n                    if (resolutionPolicy === ResolutionPolicy.FIXED_WIDTH) return;\r\n                    view.setResolutionPolicy(ResolutionPolicy.FIXED_WIDTH);\r\n                    resolutionPolicy = ResolutionPolicy.FIXED_WIDTH;\r\n                }\r\n            };\r\n            autoFitResolutionPolicy();\r\n            this.schedule(() => {\r\n                if (windowSize.equals(screen.windowSize)) return;\r\n                windowSize.set(screen.windowSize);\r\n                autoFitResolutionPolicy();\r\n            }, 0.5);\r\n        }\r\n    }\r\n\r\n    private createTypeRoot() {\r\n        ViewTypes.forEach((type) => {\r\n            const d2 = new Node(type);\r\n            d2.layer = Layers.Enum.UI_2D;\r\n            d2.addComponent(UIMgrZOrder);\r\n            d2.parent = this.UserInterface;\r\n            d2.addComponent(UITransform);\r\n            const widget = d2.addComponent(Widget);\r\n            widget.isAlignBottom = true;\r\n            widget.isAlignLeft = true;\r\n            widget.isAlignRight = true;\r\n            widget.isAlignTop = true;\r\n            widget.top = 0;\r\n            widget.left = 0;\r\n            widget.right = 0;\r\n            widget.bottom = 0;\r\n            widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n\r\n            if (DEV) {\r\n                d2.on(Node.EventType.CHILD_ADDED, (child: Node) => {\r\n                    if (!child) return;\r\n                    if (child === this.shade) return;\r\n                    if (this.getBaseView(child)) return;\r\n                    this.warn(`${UserInterfacePath}/${type}下非必要请不要添加非UI节点:`, child?.name);\r\n                }, this);\r\n            }\r\n        });\r\n    }\r\n\r\n    private addTouchMaskListener() {\r\n        if (!this.touchEnabled) return;\r\n        if (this.touchMaskMap.size > 0) return;\r\n\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            this.root.on(BlockEvents[i], this.stopPropagation, this, true);\r\n        }\r\n    }\r\n\r\n    private removeTouchMaskListener() {\r\n        if (!this.touchEnabled) return;\r\n        if (this.touchMaskMap.size > 0) return;\r\n\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            this.root.off(BlockEvents[i], this.stopPropagation, this, true);\r\n        }\r\n    }\r\n\r\n    private stopPropagation(event: Event) {\r\n        if (!this.touchEnabled || this.touchMaskMap.size > 0) {\r\n            event.propagationStopped = true;\r\n            if (event.type !== Node.EventType.MOUSE_MOVE) {\r\n                this.log('屏蔽触摸');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取一个节点上的BaseView组件, 获取不到返回null\r\n     */\r\n    private getBaseView(node: Node): BaseView {\r\n        if (!node) return null;\r\n        return node.components.find(component => component instanceof BaseView) as BaseView;\r\n    }\r\n\r\n    /**\r\n     * 在所有父节点中找到一个最近的view组件\r\n     * @param target \r\n     * @returns \r\n     */\r\n    private getViewInParents(target: Node) {\r\n        let node = target;\r\n        let com: BaseView = null;\r\n\r\n        while (node.parent && !(node.parent instanceof Scene)) {\r\n            com = this.getBaseView(node.parent);\r\n            if (!com) {\r\n                node = node.parent;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return com;\r\n    }\r\n\r\n    /**\r\n     * 在子节点中找到一个最近的view组件\r\n     * @param target \r\n     * @returns \r\n     */\r\n    private getViewInChildren(target: Node) {\r\n        for (let index = 0; index < target.children.length; index++) {\r\n            const node = target.children[index];\r\n            const com = this.getBaseView(node);\r\n            if (com) return com;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取它的脚本类\r\n     */\r\n    private getUIClass(name: string): typeof BaseView {\r\n        return js.getClassByName(name) as (typeof BaseView);\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取UI路径\r\n     * @param name ui名字\r\n     * @returns \r\n     */\r\n    private getUIPath(name: string) {\r\n        return name;\r\n    }\r\n\r\n    /**\r\n     * 获取前缀\r\n     * @param name    ui名字\r\n     */\r\n    private getUIPrefix(name: string): ViewType {\r\n        for (let index = 0; index < ViewTypes.length; index++) {\r\n            const typeName = ViewTypes[index];\r\n            if (name.indexOf(typeName) === 0) {\r\n                return typeName;\r\n            }\r\n        }\r\n        this.error('getUIPrefix', `${name}`);\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字查询父节点\r\n     * @param name    ui名字\r\n     */\r\n    private getUIParent(name: string): Node {\r\n        if (this.currScene === name) {\r\n            return director.getScene();\r\n        }\r\n\r\n        const prefix = this.getUIPrefix(name);\r\n        for (let index = 0; index < ViewTypes.length; index++) {\r\n            const viewType = ViewTypes[index];\r\n            if (viewType === prefix) {\r\n                return this.UserInterface.getChildByName(viewType);\r\n            }\r\n        }\r\n\r\n        this.error('getUIParent', `找不到${name}对应的Parent`);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取场景内的节点\r\n     * @param name    ui名字\r\n     */\r\n    private getUIInScene(name: string): Node;\r\n    private getUIInScene(name: string, multiple: false): Node;\r\n    private getUIInScene(name: string, multiple: true): Node[];\r\n    private getUIInScene(name: string, multiple = false) {\r\n        const parent = this.getUIParent(name);\r\n\r\n        if (multiple) {\r\n            const result = parent.children.filter(node => node.name === name);\r\n            if (result.length) return result.filter(node => isValid(node, true));\r\n        } else {\r\n            const result = parent.children.find(node => node.name === name);\r\n            if (result) return isValid(result, true) ? result : null;\r\n        }\r\n\r\n        return multiple ? [] : null;\r\n    }\r\n\r\n    /**\r\n     * 根据UI名字获取展示中的节点\r\n     * @param name    ui名字\r\n     */\r\n    private getUIInShowing(name: string): Node;\r\n    private getUIInShowing(name: string, multiple: false): Node;\r\n    private getUIInShowing(name: string, multiple: true): Node[];\r\n    private getUIInShowing(name: string, multiple = false) {\r\n        if (multiple) {\r\n            const result: Node[] = [];\r\n            this.uiShowingMap.forEach((_name, com) => {\r\n                if (_name === name) result.push(com.node);\r\n            });\r\n            return result;\r\n        } else {\r\n            let result: Node = null;\r\n            this.uiShowingMap.forEach((_name, com) => {\r\n                if (!result && _name === name) result = com.node;\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取UI骨架Bundle名字\r\n     * @deprecated 将会移除，请改为其它方案\r\n     */\r\n    public getNativeBundleName(uiName: UIName | MiniName) {\r\n        // 兼容旧版本\r\n        const oldBundleName = `app-view_${uiName}`;\r\n        const projectBundles = settings.querySettings(Settings.Category.ASSETS, 'projectBundles') as string[];\r\n        if (projectBundles && projectBundles.indexOf(oldBundleName) >= 0) {\r\n            return oldBundleName;\r\n        }\r\n\r\n        return stringCaseNegate(uiName);\r\n    }\r\n\r\n    /**\r\n     * 获取UI资源Bundle名字\r\n     * @deprecated 将会移除，请改为其它方案\r\n     */\r\n    public getResBundleName(uiName: UIName | MiniName) {\r\n        // 兼容旧版本\r\n        const oldBundleName = `app-view_${uiName}_Res`;\r\n        const projectBundles = settings.querySettings(Settings.Category.ASSETS, 'projectBundles') as string[];\r\n        if (projectBundles && projectBundles.indexOf(oldBundleName) >= 0) {\r\n            return oldBundleName;\r\n        }\r\n\r\n        return `${stringCaseNegate(uiName)}-res`;\r\n    }\r\n\r\n    /**\r\n     * 初始化Bundle\r\n     */\r\n    private initBundle(name: UIName | MiniName, onFinish: (result: [AssetManager.Bundle, AssetManager.Bundle]) => any) {\r\n        Core.inst.lib.task.createASync<[AssetManager.Bundle, AssetManager.Bundle]>()\r\n            .add((next) => {\r\n                Core.inst.manager.loader.loadBundle({\r\n                    bundle: this.getNativeBundleName(name),\r\n                    onComplete: next\r\n                });\r\n            })\r\n            .add((next) => {\r\n                Core.inst.manager.loader.loadBundle({\r\n                    bundle: this.getResBundleName(name),\r\n                    onComplete: next\r\n                });\r\n            })\r\n            .start(onFinish);\r\n    }\r\n\r\n    /**\r\n     * 安装UI\r\n     */\r\n    private installUI(name: UIName | MiniName, complete?: (result: Prefab | SceneAsset | null) => any, progress?: (finish: number, total: number, item: AssetManager.RequestItem) => void) {\r\n        if (this.sceneCache[name]) {\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(this.sceneCache[name]);\r\n            });\r\n            return;\r\n        } else if (this.prefabCache[name]) {\r\n            complete && setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                complete(this.prefabCache[name]);\r\n            });\r\n            return;\r\n        }\r\n\r\n        const task = Core.inst.lib.task.createSync<[[AssetManager.Bundle, AssetManager.Bundle], Prefab | SceneAsset]>()\r\n            .add(next => {\r\n                this.initBundle(name, next);\r\n            })\r\n            .add((next) => {\r\n                // 失败\r\n                const uiBundles = task.results[0];\r\n                if (!uiBundles || !uiBundles[0] || !uiBundles[1]) return next(null);\r\n\r\n                const isScene = uiBundles[0].getSceneInfo(name);\r\n                Core.inst.manager.loader.load({\r\n                    bundle: this.getNativeBundleName(name),\r\n                    path: this.getUIPath(name),\r\n                    type: isScene ? SceneAsset : Prefab,\r\n                    onProgress: progress,\r\n                    onComplete: next\r\n                });\r\n            })\r\n            .start((results) => {\r\n                if (!isValid(this)) return;\r\n                // 验证缓存\r\n                const cache = this.sceneCache[name] || this.prefabCache[name];\r\n                if (cache) {\r\n                    return complete && complete(cache);\r\n                }\r\n                // 验证有效\r\n                const asset = results[1];\r\n                if (!asset) {\r\n                    return complete && complete(null);\r\n                }\r\n                // 添加引用计数\r\n                asset.addRef();\r\n                // 添加缓存\r\n                if (asset instanceof Prefab) {\r\n                    this.prefabCache[name] = asset;\r\n                } else {\r\n                    this.sceneCache[name] = asset;\r\n                }\r\n                this.log(`加载: ${name}`);\r\n                return complete && complete(asset);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 卸载UI\r\n     */\r\n    private uninstallUI(name: UIName | MiniName) {\r\n        if (this.sceneCache[name]) {\r\n            // 释放引用计数\r\n            this.sceneCache[name].decRef();\r\n            // 删除缓存\r\n            delete this.sceneCache[name];\r\n        } else if (this.prefabCache[name]) {\r\n            // 释放引用计数\r\n            this.prefabCache[name].decRef();\r\n            // 删除缓存\r\n            delete this.prefabCache[name];\r\n        }\r\n\r\n        const resBundle = this.getResBundleName(name);\r\n        const naBundle = this.getNativeBundleName(name);\r\n        Core.inst.manager.loader.releaseAll(resBundle);\r\n        Core.inst.manager.loader.releaseAll(naBundle);\r\n        Core.inst.manager.loader.removeBundle(resBundle);\r\n        Core.inst.manager.loader.removeBundle(naBundle);\r\n        this.log(`卸载: ${name}`);\r\n    }\r\n\r\n    /**\r\n     * 加载ui内部资源\r\n     */\r\n    public loadRes<T extends typeof Asset>(target: Component, path: string, type: T, callback?: (item: InstanceType<T> | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.load({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: callback\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.load({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: callback\r\n                });\r\n            } else {\r\n                this.error('loadRes', target.name, path);\r\n                callback && callback(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载ui内部资源\r\n     */\r\n    public preloadRes<T extends typeof Asset>(target: Component | UIName | MiniName, path: string, type: T, complete?: (item: AssetManager.RequestItem[] | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.preload({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: complete\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.preload({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: complete\r\n                });\r\n            } else {\r\n                this.error('preloadRes', target.name, path);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载ui内部资源\r\n     */\r\n    public loadResDir<T extends typeof Asset>(target: Component, path: string, type: T, callback?: (items: InstanceType<T>[] | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.loadDir({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: callback\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.loadDir({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: callback\r\n                });\r\n            } else {\r\n                this.error('loadResDir', target.name, path);\r\n                callback && callback([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载ui内部资源\r\n     */\r\n    public preloadResDir<T extends typeof Asset>(target: Component | UIName | MiniName, path: string, type: T, complete?: (item: AssetManager.RequestItem[] | null) => any) {\r\n        if (typeof target === 'string') {\r\n            Core.inst.manager.loader.preloadDir({\r\n                bundle: this.getResBundleName(target),\r\n                path: path,\r\n                type: type,\r\n                onComplete: complete\r\n            });\r\n        } else {\r\n            const view = this.getBaseView(target.node) || this.getViewInParents(target.node) || this.getViewInChildren(director.getScene());\r\n            if (view) {\r\n                Core.inst.manager.loader.preloadDir({\r\n                    bundle: this.getResBundleName(view.viewName as UIName | MiniName),\r\n                    path: path,\r\n                    type: type,\r\n                    onComplete: complete\r\n                });\r\n            } else {\r\n                this.error('preloadResDir', target.name, path);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预加载UI\r\n     */\r\n    public preload(name: UIName | MiniName, complete?: (item: AssetManager.RequestItem[] | null) => any) {\r\n        // 验证name是否为真\r\n        if (!name) {\r\n            this.error('preload', 'fail');\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.initBundle(name, ([naBundle]) => {\r\n            const isScene = naBundle.getSceneInfo(name);\r\n            Core.inst.manager.loader.preload({\r\n                bundle: this.getNativeBundleName(name),\r\n                path: this.getUIPath(name),\r\n                type: isScene ? SceneAsset : Prefab,\r\n                onComplete: complete\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载UI\r\n     */\r\n    public load(name: UIName | MiniName): void;\r\n    public load(name: UIName | MiniName, complete: (result: Prefab | SceneAsset | null) => any): void;\r\n    public load(name: UIName | MiniName, progress: (finish: number, total: number, item: AssetManager.RequestItem) => void, complete: (result: Prefab | SceneAsset | null) => any): void;\r\n    public load(name: UIName | MiniName, ...args: Function[]): void {\r\n        const progress = (args[1] && args[0]) as (finish: number, total: number, item: AssetManager.RequestItem) => void;\r\n        const complete = (args[1] || args[0]) as (result: any) => any;\r\n\r\n        // 验证name是否为真\r\n        if (!name) {\r\n            this.error('load', 'fail');\r\n            complete && setTimeout(function () {\r\n                if (!isValid(this)) return;\r\n                complete(null);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 异步加载\r\n        this.installUI(name, (result) => {\r\n            if (!result) return complete && complete(null);\r\n            return complete && complete(result);\r\n        }, progress);\r\n    }\r\n\r\n    /**\r\n     * 销毁UI，释放资源\r\n     * - 直接销毁，不管是否是show状态\r\n     * - 此流程一定是同步的\r\n     */\r\n    public release(nameOrCom: UIName | MiniName | BaseView) {\r\n        const uiName = typeof nameOrCom === 'string' ? nameOrCom : nameOrCom.viewName;\r\n\r\n        if (!uiName) {\r\n            this.error('release', `${nameOrCom} fail`);\r\n            return;\r\n        }\r\n\r\n        // 传入字符串是释放所有\r\n        if (typeof nameOrCom === 'string') {\r\n            this.getUIInScene(uiName, true).forEach((node) => {\r\n                const com = this.getBaseView(node);\r\n                if (!com) {\r\n                    this.error('release', `${uiName}不存在BaseView组件`);\r\n                    return;\r\n                }\r\n\r\n                if (com.isShow) {\r\n                    this.warn('release', `${uiName}正处于show状态, 此处将直接销毁`);\r\n                }\r\n                if (com === this.currPage) {\r\n                    this.currPage = null;\r\n                }\r\n                if (com === this.currFocus) {\r\n                    this.currFocus = null;\r\n                }\r\n\r\n                this.uiShowingMap.delete(com);\r\n\r\n                if (node && isValid(node, true)) {\r\n                    node.parent = null;\r\n                    node.destroy();\r\n                }\r\n            });\r\n        }\r\n        // 传入组件是释放单个\r\n        else {\r\n            if (nameOrCom.isShow) {\r\n                this.warn('release', `${uiName}正处于show状态, 此处将直接销毁`);\r\n            }\r\n            if (nameOrCom === this.currPage) {\r\n                this.currPage = null;\r\n            }\r\n            if (nameOrCom === this.currFocus) {\r\n                this.currFocus = null;\r\n            }\r\n\r\n            this.uiShowingMap.delete(nameOrCom);\r\n\r\n            const node = nameOrCom.node;\r\n            if (node && isValid(node, true)) {\r\n                node.parent = null;\r\n                node.destroy();\r\n            }\r\n        }\r\n\r\n        // 当全部释放时才清除缓存\r\n        const nodes = this.getUIInScene(uiName, true);\r\n        if (nodes.length === 0 || nodes.every(node => !isValid(node, true))) {\r\n            this.uninstallUI(uiName as UIName | MiniName);\r\n            this.log(`释放资源: ${uiName}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁全部UI，释放资源\r\n     * - 直接销毁，不管是否是show状态\r\n     * - 此流程一定是同步的\r\n     */\r\n    public releaseAll(exclude?: UIName[]) {\r\n        Object.keys(this.prefabCache).forEach((name: UIName) => {\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            this.release(name);\r\n        });\r\n        Object.keys(this.sceneCache).forEach((name: UIName) => {\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            this.release(name);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 检查UI是否有效\r\n     * - -1: 加载失败\r\n     * - 0: UI无效\r\n     * - 1: UI有效\r\n     */\r\n    private checkUIValid(name: UIName | MiniName, data: any, callback: (valid: -1 | 0 | 1) => any) {\r\n        this.installUI(name, (result) => {\r\n            if (!result) return callback(-1);\r\n            const View = this.getUIClass(name);\r\n            if (!View) return callback(0);\r\n            if (!View.isViewValid) return callback(1);\r\n            View.isViewValid((valid: boolean) => {\r\n                callback(valid ? 1 : 0);\r\n            }, data);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 更新阴影的层级及显示\r\n     */\r\n    public refreshShade() {\r\n        // 借助refreshShade实现onFocus、onLostFocus(onFocus不会被每次都触发，只有产生变化时才触发)\r\n        let onFocus = false;\r\n        // 倒序遍历uiRoots\r\n        let uiRoots = this.UserInterface.children;\r\n        for (let index = uiRoots.length - 1; index >= 0; index--) {\r\n            const uiRoot = uiRoots[index];\r\n            if (uiRoot !== this.shade && uiRoot !== this.loading) {\r\n                // 倒序遍历uiRoot\r\n                let children = uiRoot.children;\r\n                for (let i = children.length - 1; i >= 0; i--) {\r\n                    const node = children[i];\r\n                    if (node === this.shade) continue;\r\n\r\n                    const com = this.getBaseView(node);\r\n                    if (!com) continue;\r\n\r\n                    // 触发onFocus\r\n                    if (!onFocus && com.isCaptureFocus && com.isShow) {\r\n                        onFocus = true;\r\n                        if (this.currFocus !== com) {\r\n                            isValid(this.currFocus, true) && this.currFocus.constructor.prototype.focus.call(this.currFocus, false);\r\n                            this.currFocus = com;\r\n                            this.currFocus.constructor.prototype.focus.call(this.currFocus, true);\r\n                        }\r\n                    }\r\n                    // 添加遮罩\r\n                    if (com.isNeedShade && com.isShow) {\r\n                        const shadeSetting = Object.assign({}, UIManager.setting.shade, com.constructor.prototype.onShade.call(com));\r\n                        if (shadeSetting.blur) {\r\n                            this.shade.getComponent(UIMgrShade).init(0, 255, 255, 0, true);\r\n                        } else {\r\n                            this.shade.getComponent(UIMgrShade).init(\r\n                                typeof shadeSetting.delay !== 'number' ? 0 : shadeSetting.delay,\r\n                                typeof shadeSetting.begin !== 'number' ? 60 : shadeSetting.begin,\r\n                                typeof shadeSetting.end !== 'number' ? 180 : shadeSetting.end,\r\n                                typeof shadeSetting.speed !== 'number' ? 100 : shadeSetting.speed,\r\n                                false,\r\n                            );\r\n                        }\r\n                        this.shade.layer = node.layer;\r\n                        this.shade.parent = uiRoot;\r\n                        this.shade.active = true;\r\n                        // 以z坐标来代替2.x时代的zIndex\r\n                        this.shade.setPosition(this.shade.position.x, this.shade.position.y, node.position.z);\r\n\r\n                        let shadeIndex = this.shade.getSiblingIndex();\r\n                        let nodeIndex = node.getSiblingIndex();\r\n                        if (shadeIndex > nodeIndex) {\r\n                            this.shade.setSiblingIndex(nodeIndex);\r\n                        } else {\r\n                            this.shade.setSiblingIndex(nodeIndex - 1);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.shade.active = false;\r\n        this.shade.getComponent(UIMgrShade).clear();\r\n        if (!onFocus) {\r\n            isValid(this.currFocus, true) && this.currFocus.constructor.prototype.focus.call(this.currFocus, false);\r\n            this.currFocus = null;\r\n        }\r\n    }\r\n\r\n    // 解析prefab\r\n    private parsingPrefab(prefab: Prefab, name: string) {\r\n        if (!prefab) return null;\r\n\r\n        const node = instantiate(prefab);\r\n\r\n        node.active = false;\r\n        if (node.name !== name) {\r\n            this.warn('parsingPrefab', `节点名与UI名不一致, 已重置为UI名: ${this.getUIPath(name)}`);\r\n            node.name = name;\r\n        }\r\n\r\n        node.parent = this.getUIParent(name);\r\n        node.getComponent(Widget)?.updateAlignment();\r\n        return node;\r\n    }\r\n\r\n    // 解析scene\r\n    private parsingScene(asset: SceneAsset, name: string) {\r\n        if (!asset || !asset.scene) return null;\r\n\r\n        if (asset.scene.name !== name) {\r\n            this.warn('parsingScene', `场景名与UI名不一致, 已重置为UI名: ${this.getUIPath(name)}`);\r\n            asset.scene.name = name;\r\n        }\r\n\r\n        const view = this.getViewInChildren(asset.scene);\r\n        if (!view) {\r\n            this.error('parsingScene', `解析场景时未查询到根节点存在BaseView: ${this.getUIPath(name)}`);\r\n            return null;\r\n        }\r\n\r\n        view.node.active = false;\r\n        if (view.node.name !== name) {\r\n            this.warn('parsingScene', `节点名与UI名不一致, 已重置为UI名: ${this.getUIPath(name)}`);\r\n            view.node.name = name;\r\n        }\r\n        return view.node;\r\n    }\r\n\r\n    private addUILoadingUuid(name: UIName, loadingUuid?: string) {\r\n        const uuid = loadingUuid || this.createUUID();\r\n        if (!this.uiLoadingMap.has(name)) {\r\n            this.uiLoadingMap.set(name, [uuid]);\r\n        } else {\r\n            this.uiLoadingMap.get(name).push(uuid);\r\n        }\r\n        return uuid;\r\n    }\r\n\r\n    private removeUILoadingUuid(name: UIName, uuid: string) {\r\n        if (!this.uiLoadingMap.has(name)) return false;\r\n        const index = this.uiLoadingMap.get(name).indexOf(uuid);\r\n        if (index === -1) return false;\r\n        this.uiLoadingMap.get(name).splice(index, 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 创建UI\r\n     */\r\n    private createUI(name: UIName, silent: boolean, callback: (node: Node, scene?: Scene) => any) {\r\n        // 生成一个UI加载的UUID\r\n        const loadingUuid = silent ? '' : this.showLoading();\r\n        const uiLoadingUuid = this.addUILoadingUuid(name, loadingUuid);\r\n\r\n        // 验证name\r\n        if (!name) {\r\n            setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n                // 验证本次加载是否有效\r\n                if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                    return this.hideLoading(loadingUuid);\r\n                }\r\n                callback(null);\r\n                this.hideLoading(loadingUuid);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 判断是否已经存在节点并且是单例模式\r\n        const node = this.getUIInScene(name);\r\n        if (isValid(node, true) && this.getBaseView(node).isSingleton === true) {\r\n            setTimeout(() => {\r\n                if (!isValid(this)) return;\r\n\r\n                // 验证本次加载是否有效\r\n                if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                    return this.hideLoading(loadingUuid);\r\n                }\r\n\r\n                // 验证节点是否有效\r\n                if (isValid(node, true)) {\r\n                    if (this.currScene === name) {\r\n                        callback(node, director.getScene());\r\n                    } else {\r\n                        callback(node);\r\n                    }\r\n                    this.hideLoading(loadingUuid);\r\n                } else {\r\n                    this.createUI(name, silent, callback);\r\n                    this.hideLoading(loadingUuid);\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        // 加载UI\r\n        this.load(name, (asset) => {\r\n            if (!isValid(this)) return;\r\n\r\n            // 验证本次加载是否有效\r\n            if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                return this.hideLoading(loadingUuid);\r\n            }\r\n\r\n            // 是场景\r\n            if (asset instanceof SceneAsset) {\r\n                callback(this.parsingScene(asset, name), asset.scene);\r\n                this.hideLoading(loadingUuid);\r\n                return;\r\n            }\r\n\r\n            // 验证是否是单例(一个单例会有被同时load多次的情况，因为判断一个ui是否是单例，必须要至少实例化一个后才能获取)\r\n            const node = this.getUIInScene(name);\r\n            if (!isValid(node, true) || this.getBaseView(node).isSingleton === false) {\r\n                callback(this.parsingPrefab(asset, name));\r\n                this.hideLoading(loadingUuid);\r\n            } else {\r\n                callback(node);\r\n                this.hideLoading(loadingUuid);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 展示默认View\r\n     */\r\n    public showDefault(onShow?: (result?: any) => any) {\r\n        if (this.defaultUI) {\r\n            this.show({\r\n                name: this.defaultUI,\r\n                data: this.defaultData,\r\n                onShow\r\n            });\r\n        } else {\r\n            Core.inst.manager.ui.showToast('请先设置首界面\\n在setting.ts中修改defaultUI', 100);\r\n            onShow && onShow();\r\n            this.warn('defaultUI不存在，请在setting.ts中修改');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否展示了(包括加载中和队列中)\r\n     */\r\n    public isShow(name: UIName) {\r\n        return !!this.getUIInShowing(name) ||\r\n            this.isInQueue(name) ||\r\n            this.isLoading(name);\r\n    }\r\n\r\n    /**\r\n     * 是否在队列中\r\n     */\r\n    public isInQueue(name: UIName) {\r\n        return !!this.showQueue.find((v) => { return v.name == name; });\r\n    }\r\n\r\n    /**\r\n     * 是否在加载中\r\n     */\r\n    public isLoading(name: UIName) {\r\n        return this.uiLoadingMap.has(name) && this.uiLoadingMap.get(name).length > 0;\r\n    }\r\n\r\n    /**\r\n     * 放入队列\r\n     */\r\n    private putInShowQueue(data: IShowParams<UIName>) {\r\n        if (data.queue === 'join' || this.showQueue.length === 0) {\r\n            this.showQueue.push(data);\r\n        } else {\r\n            this.showQueue.splice(1, 0, data);\r\n        }\r\n        if (this.showQueue.length === 1) {\r\n            this.consumeShowQueue();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 消耗队列\r\n     */\r\n    private consumeShowQueue() {\r\n        if (this.showQueue.length === 0) return;\r\n        const data = this.showQueue[0];\r\n        this.show({\r\n            name: data.name,\r\n            data: data.data,\r\n            onShow: data.onShow,\r\n            onHide: (result: any) => {\r\n                data.onHide && data.onHide(result);\r\n                this.showQueue.shift();\r\n                this.consumeShowQueue();\r\n            },\r\n            onError: data.onError ? (error: string, code: 0 | 1) => {\r\n                const ret = data.onError(error, code);\r\n                this.showQueue.shift();\r\n                this.consumeShowQueue();\r\n                return ret;\r\n            } : undefined,\r\n            top: data.top,\r\n            attr: data.attr,\r\n            silent: data.silent\r\n        });\r\n    }\r\n\r\n    private showUI(params: IShowParams<UIName>) {\r\n        const { name, data, onShow, onHide, onError, top = true, attr = null, silent = false } = params;\r\n\r\n        this.createUI(name, silent, (node, scene) => {\r\n            if (!node) {\r\n                this.error('show', `${name} 不存在或加载失败`);\r\n                // 「没有指定onError」或「onError返回true」会自动发起重试\r\n                if (onError && onError(`${name} 不存在或加载失败`, UIManager.ErrorCode.LoadError) !== true) {\r\n                    return;\r\n                }\r\n                this.scheduleOnce(() => this.showUI(params), 1);\r\n                if (!silent) this.showLoading(1);\r\n                return;\r\n            }\r\n\r\n            !scene && top && node.setSiblingIndex(-1);\r\n\r\n            const com = this.getBaseView(node);\r\n            this.uiShowingMap.set(com, name);\r\n            com.constructor.prototype.show.call(com, data, attr,\r\n                // onShow\r\n                (result: any) => {\r\n                    this.uiShowingMap.set(com, name);\r\n                    onShow && onShow(result);\r\n                },\r\n                // onHide\r\n                (result: any) => {\r\n                    this.uiShowingMap.delete(com);\r\n                    onHide && onHide(result);\r\n                },\r\n                // beforeShow\r\n                (error: string) => {\r\n                    if (error) {\r\n                        this.uiShowingMap.delete(com);\r\n                        onError && onError(error, UIManager.ErrorCode.LogicError);\r\n                    } else if (BaseView.isPage(name)) {\r\n                        this.uiShowingMap.set(com, name);\r\n                        const oldCom = this.currPage;\r\n                        this.currPage = com;\r\n                        if (isValid(oldCom, true) && oldCom !== com && oldCom.isShow) {\r\n                            oldCom.constructor.prototype.hide.call(oldCom, { name });\r\n                        }\r\n                        if (scene) {\r\n                            if (oldCom !== com) {\r\n                                this.currScene = name;\r\n                                director.runSceneImmediate(scene, null, () => {\r\n                                    this.log(`切换场景: ${name}`);\r\n                                });\r\n                            }\r\n                        } else if (this.currScene !== UIScene) {\r\n                            this.currScene = UIScene;\r\n                            const scene = new Scene(UIScene);\r\n                            scene.autoReleaseAssets = true;\r\n                            director.runSceneImmediate(scene, null, () => {\r\n                                this.log(`切换场景: ${UIScene}`);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 展示一个UI\r\n     * - 此流程一定是异步的\r\n     */\r\n    public show<UI extends BaseView>(params\r\n        // @ts-ignore\r\n        : IShowParams<UIName, Parameters<UI['onShow']>[0], ReturnType<UI['onShow']>, ReturnType<UI['onHide']>>) {\r\n        const { name, data, queue, onError, silent = false } = params;\r\n\r\n        // 加入队列中\r\n        if (queue) {\r\n            this.putInShowQueue(params);\r\n            return;\r\n        }\r\n\r\n        this.log(`show: ${name}`);\r\n\r\n        // 生成一个UI加载的UUID\r\n        const loadingUuid = silent ? '' : this.showLoading();\r\n        const uiLoadingUuid = this.addUILoadingUuid(name, loadingUuid);\r\n        // 判断ui是否有效\r\n        Core.inst.lib.task.execute((retry) => {\r\n            this.checkUIValid(name, data, (valid) => {\r\n                // 验证本次加载是否有效\r\n                if (this.removeUILoadingUuid(name, uiLoadingUuid) === false) {\r\n                    this.hideLoading(loadingUuid);\r\n                    return;\r\n                }\r\n\r\n                // 加载失败\r\n                if (valid === -1) {\r\n                    this.error('show', `${name} 不存在或加载失败`);\r\n                    // 「没有指定onError」或「onError返回true」会自动发起重试\r\n                    if (onError && onError(`${name} 不存在或加载失败`, UIManager.ErrorCode.LoadError) !== true) {\r\n                        return this.hideLoading(loadingUuid);\r\n                    }\r\n                    return retry(1);\r\n                }\r\n\r\n                // ui无效\r\n                if (valid === 0) {\r\n                    this.warn('show', `${name} 无效`);\r\n                    this.uninstallUI(name);\r\n                    onError && onError(`${name} 无效`, UIManager.ErrorCode.InvalidError);\r\n                    this.hideLoading(loadingUuid);\r\n                    return;\r\n                }\r\n\r\n                this.showUI(params);\r\n                this.hideLoading(loadingUuid);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 展示一个UI\r\n     * - 此流程一定是异步的\r\n     */\r\n    public showAsync<UI extends BaseView>(params\r\n        // @ts-ignore\r\n        : IShowAsyncParams<UIName, Parameters<UI['onShow']>[0], ReturnType<UI['onShow']>>): Promise<ReturnType<UI['onHide']>> {\r\n        return new Promise((resolve) => {\r\n            this.show({\r\n                ...params,\r\n                onHide(result) {\r\n                    resolve(result);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 关闭View\r\n     * - 此流程一定是同步的\r\n     */\r\n    public hide<UI extends BaseView>({ name, data, onHide }\r\n        // @ts-ignore\r\n        : IHideParams<UIName, Parameters<UI['onHide']>[0], ReturnType<UI['onHide']>>) {\r\n        const nodes = this.getUIInShowing(name, true);\r\n\r\n        this.log(`hide: ${name}`);\r\n\r\n        if (nodes.length === 0) {\r\n            if (!this.uiLoadingMap.has(name) || this.uiLoadingMap.get(name).length === 0) {\r\n                return this.warn('hide', `${name} 不存在`);\r\n            }\r\n        }\r\n\r\n        if (this.uiLoadingMap.has(name)) {\r\n            this.uiLoadingMap.get(name).forEach((loadingUuid) => this.hideLoading(loadingUuid));\r\n            this.uiLoadingMap.get(name).length = 0;\r\n        }\r\n\r\n        for (let index = nodes.length - 1; index >= 0; index--) {\r\n            const node = nodes[index];\r\n            const com = this.getBaseView(node);\r\n\r\n            if (this.currPage === com) {\r\n                this.currPage = null;\r\n            }\r\n\r\n            com.constructor.prototype.hide.call(com, data, onHide);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从顶部关闭一个View(不会重复关闭节点)\r\n     * - 此流程一定是同步的\r\n     */\r\n    public pop<UI extends BaseView>({ name, data, onHide }\r\n        // @ts-ignore\r\n        : IHideParams<UIName, Parameters<UI['onHide']>[0], ReturnType<UI['onHide']>>) {\r\n        const nodes = this.getUIInShowing(name, true);\r\n\r\n        if (this.uiLoadingMap.has(name) && this.uiLoadingMap.get(name).length) {\r\n            const loadingUuid = this.uiLoadingMap.get(name).pop();\r\n            this.hideLoading(loadingUuid);\r\n            this.log(`pop: ${name}`);\r\n            return;\r\n        }\r\n\r\n        if (nodes.length) {\r\n            const node = nodes.pop();\r\n            const com = this.getBaseView(node);\r\n\r\n            if (this.currPage === com) {\r\n                this.currPage = null;\r\n            }\r\n\r\n            com.constructor.prototype.hide.call(com, data, onHide);\r\n            this.log(`pop: ${name}`);\r\n            return;\r\n        }\r\n\r\n        this.warn('pop', `${name} 不存在`);\r\n    }\r\n\r\n    /**\r\n     * 从底部关闭一个View(不会重复关闭节点)\r\n     * - 此流程一定是同步的\r\n     */\r\n    public shift<UI extends BaseView>({ name, data, onHide }\r\n        // @ts-ignore\r\n        : IHideParams<UIName, Parameters<UI['onHide']>[0], ReturnType<UI['onHide']>>) {\r\n        const nodes = this.getUIInShowing(name, true);\r\n\r\n        if (nodes.length) {\r\n            const node = nodes[0];\r\n            const com = this.getBaseView(node);\r\n\r\n            if (this.currPage === com) {\r\n                this.currPage = null;\r\n            }\r\n\r\n            com.constructor.prototype.hide.call(com, data, onHide);\r\n            this.log(`shift: ${name}`);\r\n            return;\r\n        }\r\n\r\n        if (this.uiLoadingMap.has(name) && this.uiLoadingMap.get(name).length) {\r\n            const loadingUuid = this.uiLoadingMap.get(name).shift();\r\n            this.hideLoading(loadingUuid);\r\n            this.log(`shift: ${name}`);\r\n            return;\r\n        }\r\n\r\n        this.warn('shift', `${name} 不存在`);\r\n    }\r\n\r\n    /**\r\n     * 关闭全部View\r\n     * - 不关闭展示中的Page(加载中的会停止)\r\n     * - 此流程一定是同步的\r\n     */\r\n    public hideAll({ data, exclude }: { data?: any, exclude?: UIName[] } = {}): void {\r\n        this.log('hideAll');\r\n        // 展示中的\r\n        this.uiShowingMap.forEach((name, com) => {\r\n            if (BaseView.isPaper(name)) return;\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            if (com === this.currPage) return;\r\n            com.constructor.prototype.hide.call(com, data);\r\n        });\r\n        // 加载中的\r\n        this.uiLoadingMap.forEach((value, name) => {\r\n            if (BaseView.isPaper(name)) return;\r\n            if (exclude && exclude.indexOf(name) !== -1) return;\r\n            value.forEach((loadingUuid) => this.hideLoading(loadingUuid));\r\n            value.length = 0;\r\n        });\r\n    }\r\n\r\n    public showLoading(timeout = 0) {\r\n        this.loading.active = true;\r\n        this.loading.setSiblingIndex(-1);\r\n        if (this.loading.getComponent(UIMgrLoading)) {\r\n            this.loading.getComponent(UIMgrLoading).init();\r\n        } else {\r\n            // 兼容旧版本\r\n            this.loading.getComponentInChildren(UIMgrLoading)?.init();\r\n        }\r\n        const uuid = this.createUUID();\r\n        this.showLoadingMap.set(uuid, true);\r\n        if (timeout > 0) this.scheduleOnce(() => {\r\n            this.hideLoading(uuid);\r\n        }, timeout);\r\n        return uuid;\r\n    }\r\n\r\n    public hideLoading(uuid: string) {\r\n        if (!uuid) return;\r\n        this.showLoadingMap.delete(uuid);\r\n        if (this.showLoadingMap.size === 0) {\r\n            if (this.loading.getComponent(UIMgrLoading)) {\r\n                this.loading.getComponent(UIMgrLoading).clear();\r\n            } else {\r\n                // 兼容旧版本\r\n                this.loading.getComponentInChildren(UIMgrLoading)?.clear();\r\n            }\r\n            this.loading.active = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加触摸屏蔽\r\n     */\r\n    public addTouchMask(timeout = 0) {\r\n        this.addTouchMaskListener();\r\n        const uuid = this.createUUID();\r\n        this.touchMaskMap.set(uuid, true);\r\n        if (timeout > 0) this.scheduleOnce(() => {\r\n            this.removeTouchMask(uuid);\r\n        }, timeout);\r\n        return uuid;\r\n    }\r\n\r\n    /**\r\n     * 移除触摸屏蔽\r\n     * @param uuid addTouchMask的返回值\r\n     */\r\n    public removeTouchMask(uuid: string) {\r\n        if (!uuid) return;\r\n        this.touchMaskMap.delete(uuid);\r\n        this.removeTouchMaskListener();\r\n    }\r\n\r\n    /**\r\n     * 显示Toast\r\n     * @param message 文本\r\n     * @param timeout 持续时间(秒)，默认2秒\r\n     */\r\n    public showToast(message: string, timeout?: number) {\r\n        if (!this.toast) {\r\n            return this.error('showToast', '请确认首场景中「Canvas/Manager/UIManager」的「Toast Pre」属性存在');\r\n        }\r\n        this.toast.setSiblingIndex(-1);\r\n        this.toast.getComponent(UIMgrToast).add({\r\n            message, timeout\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 清理Toast\r\n     */\r\n    public clearToast() {\r\n        if (!this.toast) return;\r\n        this.toast.getComponent(UIMgrToast).clear();\r\n    }\r\n\r\n    /**\r\n     * 设置触摸是否启用\r\n     * @param enabled 是否启用\r\n     */\r\n    public setTouchEnabled(enabled: boolean) {\r\n        if (enabled) {\r\n            this.touchEnabled = true;\r\n            this.removeTouchMaskListener();\r\n        } else {\r\n            this.addTouchMaskListener();\r\n            this.touchEnabled = false;\r\n        }\r\n        this.warn('setTouchEnabled', this.touchEnabled);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public onUserInterface(...args: Parameters<Node['on']>) {\r\n        Node.prototype.on.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public onceUserInterface(...args: Parameters<Node['once']>) {\r\n        Node.prototype.once.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public offUserInterface(...args: Parameters<Node['off']>) {\r\n        Node.prototype.off.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 在2DUI根节点上处理事件\r\n     */\r\n    public targetOffUserInterface(...args: Parameters<Node['targetOff']>) {\r\n        Node.prototype.targetOff.apply(this.UserInterface, args);\r\n    }\r\n\r\n    /**\r\n     * 立即给2DUI的子节点排序\r\n     */\r\n    public sortUserInterface(name: IViewType) {\r\n        this.UserInterface\r\n            ?.getChildByName(name)\r\n            ?.getComponent(UIMgrZOrder)\r\n            ?.updateZOrder();\r\n    }\r\n\r\n    /**\r\n     * 屏幕截图\r\n     * - 需要在Director.EVENT_BEFORE_RENDER事件中调用\r\n     * @example\r\n     * director.once(Director.EVENT_BEFORE_RENDER, () => {\r\n     *   const renderTexture = new RenderTexture();\r\n     *   const size = view.getVisibleSize();\r\n     *   renderTexture.reset({ width: size.width, height: size.height });\r\n     *   app.manager.ui.screenshot(renderTexture);\r\n     * });\r\n     */\r\n    public screenshot(renderTexture: RenderTexture, opts?: {\r\n        /**摄像机筛选 */\r\n        cameraFilter?: (camera: Camera) => boolean;\r\n        /**摄像机列表 */\r\n        cameraList?: Camera[];\r\n    }) {\r\n        const cameras = opts?.cameraList || director.getScene().getComponentsInChildren(Camera);\r\n\r\n        const cameraList = cameras.sort((a, b) => a.priority - b.priority)\r\n            .filter(camera => {\r\n                if (!camera.enabledInHierarchy) return false;\r\n                if (camera.targetTexture) return false;\r\n                return opts?.cameraFilter ? opts.cameraFilter(camera) : true;\r\n            });\r\n        const cameraList2 = cameraList.map(camera => camera.camera);\r\n\r\n        cameraList.forEach(camera => {\r\n            camera.targetTexture = renderTexture;\r\n        });\r\n        director.root.pipeline.render(cameraList2);\r\n        cameraList.forEach(camera => {\r\n            camera.targetTexture = null;\r\n        });\r\n\r\n        return renderTexture;\r\n    }\r\n}","import { Component, Graphics, Node, Size, UITransform, _decorator } from 'cc';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrLoading')\r\n@requireComponent(UITransform)\r\nexport default class UIMgrLoading extends Component {\r\n    @property(Node)\r\n    private loading: Node;\r\n\r\n    @property({ tooltip: '动画的尺寸' })\r\n    private size: Size = new Size(60, 60);\r\n\r\n    @property({ tooltip: '等待几秒后开始动画' })\r\n    private delay = 0;\r\n\r\n    private progress = 0;\r\n    private ringScale = 1;\r\n    private reverse = false;\r\n\r\n    private angleSpeed = 120;\r\n    private ringSpeed = 0.02;\r\n\r\n    private inited = false;\r\n    private drawing = false;\r\n    private timedown = 0;\r\n\r\n    init() {\r\n        if (this.inited) return;\r\n        this.inited = true;\r\n\r\n        this.progress = 0;\r\n        this.ringScale = 1;\r\n        this.loading.angle = 0;\r\n        this.reverse = false;\r\n\r\n        this.drawing = false;\r\n        this.timedown = this.delay;\r\n        this.loading.getComponent(Graphics).clear();\r\n    }\r\n\r\n    clear() {\r\n        this.inited = false;\r\n        this.drawing = false;\r\n    }\r\n\r\n    /**\r\n     * 需要重写\r\n     */\r\n    private onDraw() {\r\n        const graphics = this.loading.getComponent(Graphics);\r\n        const uiTransform = this.loading.getComponent(UITransform);\r\n\r\n        const centerX = this.size.width * (0.5 - uiTransform.anchorX);\r\n        const centerY = this.size.height * (0.5 - uiTransform.anchorY);\r\n\r\n        const r = Math.min(this.size.width / 2, this.size.height / 2);\r\n\r\n        const allPI = Math.PI;\r\n        const offst = 0;\r\n\r\n        graphics.clear();\r\n        if (this.reverse) {\r\n            const start = 0.5 * Math.PI + offst;\r\n            const end = 0.5 * Math.PI + this.progress * 2 * allPI + offst;\r\n            graphics.arc(centerX, centerY, r, start, end, true);\r\n        } else {\r\n            const start = 0.5 * Math.PI - offst;\r\n            const end = 0.5 * Math.PI - this.progress * 2 * allPI - offst;\r\n            graphics.arc(centerX, centerY, r, start, end, false);\r\n        }\r\n        graphics.stroke();\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (!this.inited) return;\r\n\r\n        // 倒计时\r\n        if (!this.drawing) {\r\n            if (this.timedown > 0) {\r\n                this.timedown -= dt;\r\n            }\r\n            if (this.timedown <= 0) {\r\n                this.drawing = true;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 旋转\r\n        this.loading.angle -= this.angleSpeed * dt;\r\n        if (this.loading.angle >= 360 || this.loading.angle <= -360) {\r\n            this.loading.angle = this.loading.angle % 360;\r\n        }\r\n\r\n        // 进度\r\n        if (this.ringScale > 0) {\r\n            this.progress = Math.min(1, this.progress + this.ringSpeed * this.ringScale);\r\n\r\n            if (this.progress == 1) {\r\n                this.ringScale = -1;\r\n                this.reverse = !this.reverse;\r\n            }\r\n        } else {\r\n            this.progress = Math.max(0, this.progress + this.ringSpeed * this.ringScale);\r\n\r\n            if (this.progress == 0) {\r\n                this.ringScale = 1;\r\n                this.reverse = !this.reverse;\r\n            }\r\n        }\r\n\r\n        this.onDraw();\r\n    }\r\n}\r\n","import { Camera, Color, Component, Director, Material, RenderTexture, Sprite, SpriteFrame, UIOpacity, UITransform, _decorator, director } from 'cc';\r\nimport Core from '../../../Core';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrShade')\r\n@requireComponent(Sprite)\r\n@requireComponent(UIOpacity)\r\nexport default class UIMgrShade extends Component {\r\n    @property(Material)\r\n    private blurMaterial: Material = null;\r\n\r\n    @property(SpriteFrame)\r\n    private shadeFrame: SpriteFrame = null;\r\n\r\n    @property\r\n    private _delay = 0;\r\n    @property\r\n    get delay() { return this._delay; }\r\n    set delay(v) { this._delay = Math.max(v, 0); }\r\n\r\n    @property\r\n    private _begin = 0;\r\n    @property\r\n    get begin() { return this._begin; }\r\n    set begin(v) { if (v >= 0 && v <= 255) this._begin = v; }\r\n\r\n    @property\r\n    private _end = 255;\r\n    @property\r\n    get end() { return this._end; }\r\n    set end(v) { if (v >= 0 && v <= 255) this._end = v; }\r\n\r\n    @property\r\n    private _speed = 10;\r\n    @property\r\n    get speed() {\r\n        if (this.begin == this.end) {\r\n            return 0;\r\n        } else if (this.begin > this.end) {\r\n            return this._speed > 0 ? -this._speed : this._speed;\r\n        } else {\r\n            return this._speed >= 0 ? this._speed : -this._speed;\r\n        }\r\n    }\r\n    set speed(v) { this._speed = v; }\r\n\r\n    private get sprite() {\r\n        return this.node.getComponent(Sprite);\r\n    }\r\n    private get opacity() {\r\n        return this.node.getComponent(UIOpacity);\r\n    }\r\n\r\n    private inited = false;\r\n    private drawing = false;\r\n    private timedown = 0;\r\n\r\n    private blurFrame: SpriteFrame = null;\r\n\r\n    init(delay: number, begin: number, end: number, speed: number, blur: boolean) {\r\n        if (blur) {\r\n            director.targetOff(this);\r\n            this.inited = false;\r\n            this.drawing = false;\r\n\r\n            this.sprite.color = Color.WHITE;\r\n            this.sprite.customMaterial = null;\r\n            this.sprite.spriteFrame = this.blurFrame;\r\n            if (this.blurFrame) this.blurFrame.flipUVY = false;\r\n\r\n            let count = 0;\r\n            const cameras = director.getScene().getComponentsInChildren(Camera);\r\n            director.on(Director.EVENT_BEFORE_RENDER, () => {\r\n                count++;\r\n\r\n                const renderTexture = new RenderTexture();\r\n                const size = this.node.getComponent(UITransform);\r\n                renderTexture.reset({ width: size.width / 2, height: size.height / 2 });\r\n                renderTexture.addRef();\r\n\r\n                Core.inst.manager.ui.screenshot(renderTexture, {\r\n                    cameraList: cameras\r\n                });\r\n\r\n                if (count === 1) {\r\n                    this.blurFrame = new SpriteFrame();\r\n                    this.blurFrame?.texture?.decRef();\r\n                    this.blurFrame.texture = renderTexture;\r\n                    this.blurFrame.flipUVY = true;\r\n                    this.sprite.spriteFrame = this.blurFrame;\r\n                    this.sprite.customMaterial = this.blurMaterial;\r\n                    this.blurMaterial.setProperty('blurLevel', 2);\r\n                    return;\r\n                }\r\n\r\n                if (count === 5) {\r\n                    director.targetOff(this);\r\n                    this.sprite.spriteFrame.flipUVY = false;\r\n                    this.sprite.customMaterial = null;\r\n                    return;\r\n                }\r\n\r\n                this.blurFrame?.texture?.decRef();\r\n                this.blurFrame.texture = renderTexture;\r\n                this.blurFrame.flipUVY = true;\r\n                this.sprite.spriteFrame = this.blurFrame;\r\n                this.sprite.customMaterial = this.blurMaterial;\r\n                this.blurMaterial.setProperty('blurLevel', count === 2 ? 3 : 1);\r\n            }, this);\r\n        } else {\r\n            director.targetOff(this);\r\n            this.sprite.spriteFrame = this.shadeFrame;\r\n            this.sprite.color = Color.BLACK;\r\n            this.sprite.customMaterial = null;\r\n        }\r\n\r\n        this.delay = delay;\r\n        this.begin = begin;\r\n        this.end = end;\r\n        this.speed = speed;\r\n        this.drawing = true;\r\n\r\n        if (this.inited) return;\r\n        this.inited = true;\r\n        this.timedown = this.delay;\r\n        // 初始透明度\r\n        this.opacity.opacity = this.timedown > 0 ? 0 : this.begin;\r\n    }\r\n\r\n    clear() {\r\n        this.inited = false;\r\n        this.drawing = false;\r\n        director.targetOff(this);\r\n        this.blurFrame?.texture?.decRef();\r\n        this.blurFrame?.destroy();\r\n        this.blurFrame = null;\r\n        this.sprite.spriteFrame = null;\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (!this.inited) return;\r\n        if (!this.drawing) return;\r\n\r\n        if (this.timedown > 0) {\r\n            this.timedown -= dt;\r\n            if (this.timedown > 0) return;\r\n            // 初始透明度\r\n            this.opacity.opacity = this.begin;\r\n        }\r\n\r\n        const uiOpacity = this.opacity;\r\n        if (this.speed > 0) {\r\n            uiOpacity.opacity += this.speed * dt;\r\n            if (uiOpacity.opacity > this.end) {\r\n                uiOpacity.opacity = this.end;\r\n            }\r\n        } else if (this.speed < 0) {\r\n            uiOpacity.opacity += this.speed * dt;\r\n            if (uiOpacity.opacity < this.end) {\r\n                uiOpacity.opacity = this.end;\r\n            }\r\n        }\r\n        if (uiOpacity.opacity == this.end) {\r\n            this.drawing = false;\r\n        }\r\n    }\r\n}\r\n","import { Component, NodePool, Prefab, Tween, UIOpacity, UITransform, _decorator, instantiate, tween, view } from 'cc';\r\nimport UIMgrToastCell from './UIMgrToastCell';\r\nconst { property, ccclass, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrToast')\r\n@requireComponent(UITransform)\r\nexport default class UIMgrToast extends Component {\r\n    @property(Prefab)\r\n    private cell: Prefab = null;\r\n\r\n    /**每条信息显示几秒 */\r\n    private lifeTime = 2;\r\n\r\n    /**消失时花费几秒渐隐 */\r\n    private outTime = 0.2;\r\n\r\n    /**挤压基础速度 */\r\n    private squeezeSpeed = 200;\r\n\r\n    /**节点缓存池子 */\r\n    private pool = new NodePool();\r\n\r\n    add(data: {\r\n        message: string,\r\n        timeout?: number\r\n    }) {\r\n        const cell = this.pool.get() || instantiate(this.cell);\r\n        cell.setPosition(0, 0, 0);\r\n        cell.parent = this.node;\r\n        cell.active = true;\r\n\r\n        cell.getComponent(UIMgrToastCell).init(data.message);\r\n\r\n        cell.getComponent(UIOpacity).opacity = 255;\r\n        tween(cell.getComponent(UIOpacity))\r\n            .delay(data.timeout || this.lifeTime)\r\n            .to(this.outTime, { opacity: 0 })\r\n            .call(() => {\r\n                this.pool.put(cell);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    clear() {\r\n        const children = this.node.children;\r\n        for (let index = children.length - 1; index >= 0; index--) {\r\n            Tween.stopAllByTarget(children[index].getComponent(UIOpacity));\r\n            children[index].destroy();\r\n        }\r\n    }\r\n\r\n    get size() {\r\n        return this.node.children.length;\r\n    }\r\n\r\n    protected onDestroy() {\r\n        this.pool.clear();\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        const children = this.node.children;\r\n        for (let index = children.length - 1, recovery = false; index >= 0; index--) {\r\n            const zero = index === children.length - 1;\r\n            const curr = children[index];\r\n\r\n            // 直接触发回收逻辑\r\n            if (recovery) {\r\n                Tween.stopAllByTarget(curr.getComponent(UIOpacity));\r\n                this.pool.put(curr);\r\n                continue;\r\n            }\r\n\r\n            if (zero) {\r\n                const currUT = curr.getComponent(UITransform);\r\n\r\n                const lastMaxY = 0 - currUT.height / 2;\r\n                const currMinY = curr.position.y + lastMaxY;\r\n\r\n                if (currMinY > lastMaxY) {\r\n                    // 存在空隙\r\n                    const addLen = Math.max(-this.squeezeSpeed * dt * (children.length - index), lastMaxY - currMinY);\r\n                    curr.setPosition(curr.position.x, curr.position.y + addLen, curr.position.z);\r\n                }\r\n            } else {\r\n                const last = children[index + 1];\r\n                const currUT = curr.getComponent(UITransform);\r\n                const lastUT = last.getComponent(UITransform);\r\n\r\n                const currMinY = curr.position.y - currUT.height / 2 - 6;//6像素的间隔\r\n                const lastMaxY = last.position.y + lastUT.height / 2;\r\n\r\n                if (currMinY < lastMaxY) {\r\n                    // 存在重叠\r\n                    const addLen = Math.min(this.squeezeSpeed * dt * (children.length - index - 1), lastMaxY - currMinY);\r\n                    curr.setPosition(curr.position.x, curr.position.y + addLen, curr.position.z);\r\n                    const winSize = view.getVisibleSize();\r\n                    if (currMinY > winSize.height / 2) {\r\n                        // 触发回收逻辑\r\n                        recovery = true;\r\n                        Tween.stopAllByTarget(curr.getComponent(UIOpacity));\r\n                        this.pool.put(curr);\r\n                    }\r\n                } else if (currMinY > lastMaxY) {\r\n                    // 存在空隙\r\n                    const addLen = Math.max(-this.squeezeSpeed * dt * (children.length - index), lastMaxY - currMinY);\r\n                    curr.setPosition(curr.position.x, curr.position.y + addLen, curr.position.z);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Component, Label, UIOpacity, UITransform, _decorator } from 'cc';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('UIMgrToastCell')\r\n@requireComponent(UIOpacity)\r\n@requireComponent(UITransform)\r\nexport default class UIMgrToastCell extends Component {\r\n    @property(Label)\r\n    private title: Label = null;\r\n\r\n    init(title: string) {\r\n        if (title.split('\\n').find((v) => v.length > 30)) {\r\n            this.title.overflow = Label.Overflow.RESIZE_HEIGHT;\r\n            this.title.getComponent(UITransform).width = 600;\r\n        } else {\r\n            this.title.overflow = Label.Overflow.NONE;\r\n        }\r\n        this.title.string = title;\r\n        this.title.updateRenderData(true);\r\n    }\r\n\r\n    unuse() {\r\n        this.title.string = '';\r\n    }\r\n}\r\n\r\n","import { _decorator, Component, Director, director, Node } from 'cc';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('UIMgrZOrder')\r\nexport default class UIMgrZOrder extends Component {\r\n    private zOrder = false;\r\n    private tempArr: Node[] = [];\r\n\r\n    protected onLoad() {\r\n        this.checkUpdateZOrder();\r\n        this.node.on(Node.EventType.CHILD_ADDED, this.onChildAdded, this);\r\n        this.node.on(Node.EventType.CHILD_REMOVED, this.onChildRemoveed, this);\r\n        if (Node.EventType.CHILDREN_ORDER_CHANGED) {\r\n            this.node.on(Node.EventType.CHILDREN_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        } else {\r\n            this.node.on(Node.EventType.SIBLING_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        }\r\n    }\r\n\r\n    protected onDestroy() {\r\n        director.off(Director.EVENT_AFTER_UPDATE, this.updateZOrder, this);\r\n        this.node.off(Node.EventType.CHILD_ADDED, this.onChildAdded, this);\r\n        this.node.off(Node.EventType.CHILD_REMOVED, this.onChildRemoveed, this);\r\n        if (Node.EventType.CHILDREN_ORDER_CHANGED) {\r\n            this.node.off(Node.EventType.CHILDREN_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        } else {\r\n            this.node.off(Node.EventType.SIBLING_ORDER_CHANGED, this.checkUpdateZOrder, this);\r\n        }\r\n    }\r\n\r\n    private onChildAdded(child: Node) {\r\n        this.checkUpdateZOrder();\r\n        child.on(Node.EventType.TRANSFORM_CHANGED, this.checkUpdateZOrder, this);\r\n    }\r\n\r\n    private onChildRemoveed(child: Node) {\r\n        child.off(Node.EventType.TRANSFORM_CHANGED, this.checkUpdateZOrder, this);\r\n    }\r\n\r\n    private checkUpdateZOrder() {\r\n        if (this.zOrder) return;\r\n        this.zOrder = true;\r\n        director.once(Director.EVENT_AFTER_UPDATE, this.updateZOrder, this);\r\n    }\r\n\r\n    /**\r\n     * 更新节点树排序\r\n     */\r\n    public updateZOrder() {\r\n        if (!this.zOrder) return;\r\n        Array.prototype.push.apply(this.tempArr, this.node.children);\r\n        this.tempArr\r\n            .sort((a, b) => {\r\n                return (a.position.z - b.position.z)\r\n                    || (a.getSiblingIndex() - b.getSiblingIndex());\r\n            })\r\n            .forEach((child, index) => {\r\n                child.setSiblingIndex(index);\r\n            });\r\n\r\n        // 一定要放到最后再设置false，\r\n        // 避免更新过程中设置siblingIndex，\r\n        // 导致无限重复调用\r\n        this.zOrder = false;\r\n        this.tempArr.length = 0;\r\n    }\r\n}\r\n\r\n"]}