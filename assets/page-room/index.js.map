{"version":3,"sources":["../file:/D:/XForgTestUIGame/assets/app-bundle/app-view/page/room/native/file:/D:/XForgTestUIGame/assets/app-bundle/app-view/page/room/native/PageRoom.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Sprite","_descriptor","_applyDecoratedDescriptor","_class2","_BaseView","PageRoom","_this","_len","arguments","length","args","Array","_key","call","apply","concat","miniViews","UIManager","MiniViewName","PaperRoomRoom","_initializerDefineProperty","_assertThisInitialized","_inheritsLoose","_proto","prototype","onLoad","self","this","app","Manager","Util","IsIphoneX","manager","loader","load","bundle","path","type","SpriteFrame","onComplete","asset","console","log","bg","getComponent","spriteFrame","IsIpad","onShow","params","showMiniViews","views","onHide","result","BaseView","configurable","enumerable","writable","initializer","_class","_RF","pop"],"mappings":";;4hBAKA,IAAQA,EAAsBC,EAAtBD,QAASE,EAAaD,EAAbC,uBAEIC,EADpBH,EAAQ,YAAWI,EAIfF,EAASG,GAAOF,GAHiBG,EAAAC,GAGjBC,WAAAC,GAAA,SAAAC,IAAA,IAAA,IAAAC,EAAAC,EAAAC,UAAAC,OAAAC,MAAAC,MAAAJ,GAAAK,IAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAD2D,OAC3DN,EAAAF,EAAAS,KAAAC,MAAAV,SAAAW,OAAAL,WADPM,UAA4B,CAACC,EAAUC,aAAaC,eAAcC,EAAAd,OAAAL,EAAAoB,EAAAf,IAAAA,EAC3DgB,EAAAjB,EAAAD,GAD2D,IAAAmB,EAAAlB,EAAAmB,UAwC3E,OApCDD,EACAE,OAAA,WACI,IAAIC,EAAOC,KACPC,EAAIC,QAAQC,KAAKC,YACjBH,EAAII,QAAQC,OAAOC,KAAK,CACpBC,OAAQ,GACRC,KAAM,wBACNC,KAAMC,EACNC,oBAAWC,GACPC,QAAQC,IAAI,SAAUF,GACtBd,EAAKiB,GAAGC,aAAa5C,GAAQ6C,YAAcL,KAI9CZ,EAAIC,QAAQC,KAAKgB,UACtBlB,EAAII,QAAQC,OAAOC,KAAK,CACpBC,OAAQ,GACRC,KAAM,qBACNC,KAAMC,EACNC,oBAAWC,GACPC,QAAQC,IAAI,SAAUF,GACtBd,EAAKiB,GAAGC,aAAa5C,GAAQ6C,YAAcL,MAM3DjB,EACAwB,OAAA,SAAOC,GACHrB,KAAKsB,cAAc,CAAEC,MAAOvB,KAAKX,aAGrCO,EACA4B,OAAA,SAAOC,GAEH,OAAOA,GACV/C,GA1CyBgD,IAAQ7B,gBAAAzB,IAAAuD,gBAAAC,cAAAC,YAAAC,mBAGjBC,EAHiBvD,KAAAuD,MA2CrCC,IAAAC","file":"all.js","sourcesContent":["import { _decorator, Node, Sprite, SpriteFrame } from 'cc';\r\nimport BaseView from '../../../../../../extensions/app/assets/base/BaseView';\r\nimport { IMiniViewNames } from '../../../../../app-builtin/app-admin/executor';\r\nimport UIManager from 'db://app/manager/ui/UIManager';\r\nimport { app } from 'db://assets/app/app';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PageRoom')\r\nexport class PageRoom extends BaseView {\r\n    // 子界面列表，数组顺序为子界面排列顺序\r\n    protected miniViews: IMiniViewNames = [UIManager.MiniViewName.PaperRoomRoom];\r\n    @property(Sprite)\r\n    bg: Sprite;\r\n\r\n    // 初始化的相关逻辑写在这\r\n    onLoad() {\r\n        let self = this;\r\n        if (app.Manager.Util.IsIphoneX()) {\r\n            app.manager.loader.load({\r\n                bundle: '', // 不传入bundle，默认为resources\r\n                path: 'bj_liuhai/spriteFrame',\r\n                type: SpriteFrame,\r\n                onComplete(asset) {\r\n                    console.log('加载资源完成', asset);\r\n                    self.bg.getComponent(Sprite).spriteFrame = asset;\r\n                }\r\n            })\r\n        }\r\n        else if (app.Manager.Util.IsIpad()) {\r\n            app.manager.loader.load({\r\n                bundle: '', // 不传入bundle，默认为resources\r\n                path: 'bj_pad/spriteFrame',\r\n                type: SpriteFrame,\r\n                onComplete(asset) {\r\n                    console.log('加载资源完成', asset);\r\n                    self.bg.getComponent(Sprite).spriteFrame = asset;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // 界面打开时的相关逻辑写在这(onShow可被多次调用-它与onHide不成对)\r\n    onShow(params: any) {\r\n        this.showMiniViews({ views: this.miniViews });\r\n    }\r\n\r\n    // 界面关闭时的相关逻辑写在这(已经关闭的界面不会触发onHide)\r\n    onHide(result: undefined) {\r\n        // app.manager.ui.show<PageRoom>({name: 'PageRoom', onHide:(result) => { 接收到return的数据，并且有类型提示 }})\r\n        return result;\r\n    }\r\n}"]}