{"version":3,"sources":["../file:/D:/XForgTestUIGame/assets/app-bundle/app-view/pop/tip/native/file:/D:/XForgTestUIGame/assets/app-bundle/app-view/pop/tip/native/PopTip.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Label","_dec3","Node","_descriptor","_applyDecoratedDescriptor","_class2","_BaseView","PopTip","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_inheritsLoose","_proto","prototype","onLoad","this","close","on","Button","EventType","CLICK","hide","onShow","params","title","string","onHide","result","BaseView","configurable","enumerable","writable","initializer","_class","_RF","pop"],"mappings":";;mdAEA,IAAQA,EAAsBC,EAAtBD,QAASE,EAAaD,EAAbC,qBAEEC,EADlBH,EAAQ,UAASI,EAEbF,EAASG,GAAMC,EAGfJ,EAASK,GAAKJ,GAJiBK,EAAAC,GAIjBC,WAAAC,GAAA,SAAAC,IAAA,IAAA,IAAAC,EAAAC,EAAAC,UAAAC,OAAAC,MAAAC,MAAAJ,GAAAK,IAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAF,EAAAS,KAAAC,MAAAV,SAAAW,OAAAL,UAAAM,EAAAV,UAAAL,EAAAgB,EAAAX,IAAAU,EAAAV,UAAAY,EAAAD,EAAAX,IAAAA,EAAAa,EAAAd,EAAAD,GAAA,IAAAgB,EAAAf,EAAAgB,UAiBd,OAdDD,EACAE,OAAA,WACIC,KAAKC,MAAMC,GAAGC,EAAOC,UAAUC,MAAOL,KAAKM,KAAMN,OAGrDH,EACAU,OAAA,SAAOC,GACHR,KAAKS,MAAMC,aAAeF,UAG9BX,EACAc,OAAA,SAAOC,GAEH,OAAOA,GACV9B,GArBuB+B,IAAQf,mBAAAxB,IAAAwC,gBAAAC,cAAAC,YAAAC,mBAAAtB,EAAAhB,EAAAC,EAAAkB,mBAAAtB,IAAAsC,gBAAAC,cAAAC,YAAAC,mBAIjBC,EAJiBtC,KAAAsC,MAsBnCC,IAAAC","file":"all.js","sourcesContent":["import { _decorator, Button, Label, Node } from 'cc';\r\nimport BaseView from '../../../../../../extensions/app/assets/base/BaseView';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PopTip')\r\nexport class PopTip extends BaseView {\r\n    @property(Label)\r\n    title: Label;\r\n\r\n    @property(Node)\r\n    close: Node;\r\n\r\n    // 初始化的相关逻辑写在这\r\n    onLoad() {\r\n        this.close.on(Button.EventType.CLICK, this.hide, this);\r\n    }\r\n\r\n    // 界面打开时的相关逻辑写在这(onShow可被多次调用-它与onHide不成对)\r\n    onShow(params: string) {\r\n        this.title.string = `被\\n${params}\\n打开`;\r\n    }\r\n\r\n    // 界面关闭时的相关逻辑写在这(已经关闭的界面不会触发onHide)\r\n    onHide(result: undefined) {\r\n        // app.manager.ui.show<PopTip>({name: 'PopTip', onHide:(result) => { 接收到return的数据，并且有类型提示 }})\r\n        return result;\r\n    }\r\n}"]}